{"version":3,"sources":["node_modules/browser-pack/_prelude.js","resources/ts/Filtered/Controller.ts","resources/ts/Filtered/Filter/DistanceFilter.ts","resources/ts/Filtered/Filter/Filter.ts","resources/ts/Filtered/Filter/NumberFilter.ts","resources/ts/Filtered/Filter/ValueFilter.ts","resources/ts/Filtered/Filtered.ts","resources/ts/Filtered/View/CalendarView.ts","resources/ts/Filtered/View/ListView.ts","resources/ts/Filtered/View/MapView.ts","resources/ts/Filtered/View/TableView.ts","resources/ts/Filtered/View/View.ts","resources/ts/Filtered/ViewSelector.ts","resources/ts/bootstrap.ts"],"names":[],"mappings":"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","file":"ext.srf.filtered.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference types=\"jquery\" />\n\nimport { Options, ResultData } from \"../types\";\ndeclare let srf: any;\n\nimport { View } from \"./View/View\";\nimport { Filter } from \"./Filter/Filter\";\n\nexport class Controller {\n\tprivate target: JQuery = undefined;\n\tprivate filterSpinner: JQuery = undefined;\n\n\tprivate views: { [key: string]: View } = {};\n\tprivate filters: { [key: string]: Filter } = {};\n\tprivate currentView: View = undefined;\n\tprivate data: ResultData;\n\tprivate printRequests: Options;\n\n\tpublic constructor( target: JQuery, data: ResultData, printRequests: Options ) {\n\t\tthis.target = target;\n\n\t\tif ( this.target !== undefined ) {\n\t\t\tthis.filterSpinner = this.target.find( 'div.filtered-filter-spinner' );\n\t\t}\n\n\t\tthis.data = data;\n\t\tthis.printRequests = printRequests;\n\n\t\tfor ( let rowId in this.data ) {\n\t\t\tif ( !this.data[ rowId ].hasOwnProperty( 'visible' ) ) {\n\t\t\t\tthis.data[ rowId ].visible = {};\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getData(): any {\n\t\treturn this.data;\n\t}\n\n\tpublic getPrintRequests(): Options {\n\t\treturn this.printRequests;\n\t}\n\n\tpublic getPath() {\n\t\treturn srf.settings.get( 'srfgScriptPath' ) + '/formats/filtered/resources/';\n\t}\n\n\tpublic attachView( viewid: string, view: View ) {\n\n\t\tthis.views[ viewid ] = view;\n\n\t\tif ( this.currentView === undefined ) {\n\t\t\tthis.currentView = view;\n\t\t\tview.show();\n\t\t} else {\n\t\t\tview.hide();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic getView( viewId: string ): View {\n\t\treturn this.views[ viewId ];\n\t}\n\n\tpublic attachFilter( filter: Filter ): JQueryPromise< void > {\n\t\tlet filterId = filter.getId();\n\n\t\tthis.filters[ filterId ] = filter;\n\n\t\tfilter.init();\n\n\t\treturn this.onFilterUpdated( filterId );\n\t}\n\n\tpublic getFilter( filterId: string ): Filter {\n\t\treturn this.filters[ filterId ];\n\t}\n\n\tpublic show() {\n\t\tthis.initializeFilters();\n\t\tthis.target.children( '.filtered-spinner' ).remove();\n\t\tthis.target.children().show();\n\t\tthis.switchToView( this.currentView );\n\t}\n\n\tprivate switchToView( view: View ) {\n\n\t\tif ( this.currentView instanceof View ) {\n\t\t\tthis.currentView.hide();\n\t\t}\n\n\t\tthis.currentView = view;\n\n\t\tif ( this.currentView instanceof View ) {\n\t\t\tview.show();\n\t\t}\n\n\t}\n\n\tprivate initializeFilters() {\n\t\tlet toShow: string[] = [];\n\t\tlet toHide: string[] = [];\n\n\t\tfor ( let rowId in this.data ) {\n\t\t\tfor ( let filterId in this.filters ) {\n\t\t\t\tthis.data[ rowId ].visible[ filterId ] = this.filters[ filterId ].isDisabled() || this.filters[ filterId ].isVisible( rowId );\n\t\t\t}\n\t\t\tif ( this.isVisible( rowId ) ) {\n\t\t\t\ttoShow.push( rowId );\n\t\t\t} else {\n\t\t\t\ttoHide.push( rowId );\n\t\t\t}\n\t\t}\n\n\t\tthis.hideRows( toHide );\n\t\tthis.showRows( toShow );\n\t}\n\n\tpublic onViewSelected( viewID: string ) {\n\t\tthis.switchToView( this.views[ viewID ] );\n\t}\n\n\tpublic onFilterUpdated( filterId: string ): JQueryPromise< void > {\n\n\t\treturn this.showSpinner()\n\t\t.then(() => {\n\n\t\t\tlet toShow: string[] = [];\n\t\t\tlet toHide: string[] = [];\n\n\t\t\tlet disabled = this.filters[ filterId ].isDisabled();\n\n\t\t\tfor ( let rowId in this.data ) {\n\n\t\t\t\tlet newVisible: boolean = disabled || this.filters[ filterId ].isVisible( rowId );\n\n\t\t\t\tif ( this.data[ rowId ].visible[ filterId ] !== newVisible ) {\n\n\t\t\t\t\tthis.data[ rowId ].visible[ filterId ] = newVisible;\n\n\t\t\t\t\tif ( newVisible && this.isVisible( rowId ) ) {\n\t\t\t\t\t\ttoShow.push( rowId );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoHide.push( rowId );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.hideRows( toHide );\n\t\t\tthis.showRows( toShow );\n\t\t})\n\t\t.then( () => { this.hideSpinner() } );\n\t}\n\n\tpublic isVisible( rowId: any ) {\n\t\tfor ( let filterId in this.data[ rowId ].visible ) {\n\t\t\tif ( !this.data[ rowId ].visible[ filterId ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate hideRows( rowIds: string[] ) {\n\t\tif ( rowIds.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\tfor ( let viewId in this.views ) {\n\t\t\tthis.views[ viewId ].hideRows( rowIds );\n\t\t}\n\t}\n\n\tprivate showRows( rowIds: string[] ) {\n\t\tif ( rowIds.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\tfor ( let viewId in this.views ) {\n\t\t\tthis.views[ viewId ].showRows( rowIds );\n\t\t}\n\t}\n\n\tprivate showSpinner(): JQueryPromise< void > {\n\t\treturn this.animateSpinner();\n\t}\n\n\tprivate hideSpinner(): JQueryPromise< void > {\n\t\treturn this.animateSpinner( false );\n\t}\n\n\tprivate animateSpinner( show: boolean = true ): JQueryPromise< void > {\n\n\t\tif ( this.filterSpinner === undefined ) {\n\t\t\treturn jQuery.when();\n\t\t}\n\n\t\tif ( show ) {\n\t\t\treturn this.filterSpinner.fadeIn( 200 ).promise();\n\t\t}\n\n\t\treturn this.filterSpinner.fadeOut( 200 ).promise();\n\t}\n\n}\n","import { Filter } from \"./Filter\";\n\ndeclare let mw: any;\n\nexport class DistanceFilter extends Filter {\n\n\tprivate static readonly earthRadius: { [key: string]: number } = {\n\t\tm: 6371008.8,\n\t\tkm: 6371.0088,\n\t\tmi: 3958.7613,\n\t\tnm: 3440.0695,\n\t\tÅ: 63710088000000000\n\t};\n\n\tprivate earthRadiusValue: number = DistanceFilter.earthRadius.km;\n\tprivate filterValue: number = 0;\n\n\tpublic init() {\n\n\t\tlet values = this.controller.getData();\n\n\t\tlet origin = this.options[ 'origin' ];\n\n\t\tif ( !( origin !== undefined && origin.hasOwnProperty( 'lat' ) && origin.hasOwnProperty( 'lng' ) ) ) {\n\t\t\tthis.target.detach();\n\t\t\treturn;\n\t\t}\n\n\t\tlet unit = 'km';\n\n\t\tif ( this.options[ 'unit' ] && DistanceFilter.earthRadius[ this.options[ 'unit' ] ] ) {\n\t\t\tunit = this.options[ 'unit' ];\n\t\t}\n\n\t\tthis.earthRadiusValue = DistanceFilter.earthRadius[ unit ];\n\n\t\tlet maxValue: number = this.updateDistances( origin );\n\n\t\tlet precision = 10 ** ( Math.floor( Math.log( maxValue ) * Math.LOG10E ) - 1);\n\n\t\tif ( this.options[ 'max' ] !== undefined && this.options[ 'max' ] > maxValue ) {\n\t\t\tmaxValue = this.options[ 'max' ];\n\t\t} else {\n\t\t\tmaxValue = Math.ceil( maxValue / precision ) * precision;\n\t\t}\n\n\t\tthis.filterValue = this.options[ 'initial value' ] ? Math.min( this.options[ 'initial value' ], maxValue ) : maxValue;\n\n\t\t// build filter controls\n\t\tlet filtercontrols = this.buildEmptyControl();\n\n\t\tlet readout = $( '<div class=\"filtered-distance-readout\">' + this.filterValue + '</div>' );\n\n\t\tlet table = $( '<table class=\"filtered-distance-table\"><tbody><tr><td class=\"filtered-distance-min-cell\">0</td>' +\n\t\t\t'<td class=\"filtered-distance-slider-cell\"><div class=\"filtered-distance-slider\"></div></td>' +\n\t\t\t'<td class=\"filtered-distance-max-cell\">' + maxValue + '</td></tr>' +\n\t\t\t'<tr><td colspan=3 class=\"filtered-distance-unit-cell\">' + unit + '</td></tr></tbody></table>' );\n\n\t\tfiltercontrols.append( table );\n\n\t\tlet that = this;\n\t\tmw.loader.using( 'jquery.ui.slider' ).then( function () {\n\n\t\t\ttable.find( '.filtered-distance-slider' )\n\t\t\t.slider( {\n\t\t\t\tanimate: true,\n\t\t\t\tmax: maxValue,\n\t\t\t\tvalue: that.filterValue,\n\t\t\t\tstep: precision / 100\n\t\t\t} )\n\t\t\t.on( 'slidechange', undefined, { 'filter': that }, function ( eventObject: JQueryEventObject, ui: any ) {\n\t\t\t\teventObject.data.ui = ui;\n\t\t\t\teventObject.data.filter.onFilterUpdated( eventObject );\n\t\t\t} )\n\t\t\t.on( 'slide', undefined, { 'filter': that }, function ( eventObject: JQueryEventObject, ui: any ) {\n\t\t\t\treadout.text( ui.value );\n\t\t\t} )\n\t\t\t.find( '.ui-slider-handle' )\n\t\t\t.append( readout );\n\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\tprivate updateDistances( origin: L.LatLngLiteral ): number {\n\n\t\tlet values = this.controller.getData();\n\t\tlet max = 1;\n\n\t\tlet prId = this.printrequestId;\n\n\t\tfor ( let rowId in values ) {\n\n\t\t\tif ( values[ rowId ].data.hasOwnProperty( this.filterId ) ) {\n\t\t\t\tlet distances: number[] = values[ rowId ].data[ this.filterId ].positions.map( ( pos: L.LatLngLiteral ) => this.distance( origin, pos ) );\n\t\t\t\tlet dist = Math.min( ...distances );\n\n\t\t\t\tvalues[ rowId ].data[ this.filterId ].distance = dist;\n\t\t\t\tmax = Math.max( max, dist );\n\t\t\t} else {\n\t\t\t\tvalues[ rowId ].data[ this.filterId ].distance = Infinity;\n\t\t\t}\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tpublic onFilterUpdated( eventObject: JQueryEventObject ) {\n\t\tthis.filterValue = eventObject.data.ui.value;\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tprivate distance( a: L.LatLngLiteral, b: L.LatLngLiteral ) {\n\n\t\tconst DEG2RAD = Math.PI / 180.0;\n\n\t\tfunction squared( x: number ) {\n\t\t\treturn x * x\n\t\t}\n\n\t\tlet f =\n\t\t\tsquared( Math.sin( ( b.lat - a.lat ) * DEG2RAD / 2.0 ) ) +\n\t\t\tMath.cos( a.lat * DEG2RAD ) * Math.cos( b.lat * DEG2RAD ) *\n\t\t\tsquared( Math.sin( ( b.lng - a.lng ) * DEG2RAD / 2.0 ) );\n\n\t\treturn this.earthRadiusValue * 2 * Math.atan2( Math.sqrt( f ), Math.sqrt( 1 - f ) );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\n\t\tlet rowdata = this.controller.getData()[ rowId ].data;\n\n\t\tif ( rowdata.hasOwnProperty( this.filterId ) ) {\n\t\t\treturn rowdata[ this.filterId ].distance <= this.filterValue;\n\t\t}\n\n\t\treturn super.isVisible( rowId );\n\n\t}\n\n}\n","import { Options } from \"../../types\";\nimport { Controller } from \"../Controller\";\n\nexport abstract class Filter{\n\n\tprivate outerTarget: JQuery = undefined;\n\tprotected target: JQuery = undefined;\n\tprotected filterId: string;\n\tprotected printrequestId: string;\n\tprotected controller: Controller;\n\tprotected options: Options = undefined;\n\tprotected disabled: boolean = false;\n\tprotected collapsed: boolean = false;\n\n\tpublic constructor( filterId: string, target: JQuery, printrequestId: string, controller: Controller, options?: Options ) {\n\t\tthis.target = target;\n\t\tthis.outerTarget = target;\n\t\tthis.filterId = filterId;\n\t\tthis.printrequestId = printrequestId;\n\t\tthis.controller = controller;\n\t\tthis.options = options || {};\n\t}\n\n\tpublic init() {};\n\n\tpublic isDisabled() : boolean {\n\t\treturn this.disabled;\n\t}\n\n\tpublic disable() {\n\t\tthis.disabled = true;\n\n\t\tthis.outerTarget\n\t\t.removeClass( 'enabled' )\n\t\t.addClass( 'disabled' );\n\n\t\tthis.collapse();\n\n\t\tthis.target.promise().then( () =>\tthis.controller.onFilterUpdated( this.filterId ) );\n\t}\n\n\tpublic enable() {\n\t\tthis.disabled = false;\n\n\t\tthis.outerTarget\n\t\t.removeClass( 'disabled' )\n\t\t.addClass( 'enabled' );\n\n\t\tif ( ! this.collapsed ) {\n\t\t\tthis.uncollapse();\n\t\t}\n\n\t\tthis.target.promise().then( () =>\tthis.controller.onFilterUpdated( this.filterId ) );\n\t}\n\n\tprivate collapse( duration : number = 400 ) {\n\n\t\tif ( ! this.collapsed ) {\n\n\t\t\tthis.outerTarget.promise()\n\t\t\t.then( () => {\n\n\t\t\t\tthis.target.slideUp( duration );\n\n\t\t\t\tthis.outerTarget.animate( {\n\t\t\t\t\t'padding-top': 0,\n\t\t\t\t\t'padding-bottom': 0,\n\t\t\t\t\t'margin-bottom': '2em'\n\t\t\t\t}, duration );\n\t\t\t} );\n\t\t}\n\t}\n\n\tprivate uncollapse() {\n\t\tthis.outerTarget.promise()\n\t\t.then( () => {\n\t\t\tthis.target.slideDown();\n\n\t\t\tlet style = this.outerTarget.attr( 'style' );\n\t\t\tthis.outerTarget.removeAttr( 'style' );\n\t\t\tlet uncollapsedCss = this.outerTarget.css( [ 'padding-top', 'padding-bottom', 'margin-bottom' ] );\n\t\t\tthis.outerTarget.attr( 'style', style );\n\n\t\t\tthis.outerTarget.animate( uncollapsedCss );\n\t\t} );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\t\treturn this.options.hasOwnProperty( 'show if undefined' ) && this.options[ 'show if undefined' ] === true;\n\t}\n\n\tpublic getId() {\n\t\treturn this.filterId;\n\t}\n\n\tprotected buildEmptyControl() {\n\n\t\tthis.target = $( '<div class=\"filtered-filter-container\">' );\n\n\t\tthis.outerTarget\n\t\t.append( this.target )\n\t\t.addClass( 'enabled' );\n\n\t\tthis.addOnOffSwitch();\n\t\tthis.addLabel();\n\t\tthis.addControlForCollapsing();\n\n\t\treturn this.target;\n\t}\n\n\tprivate addLabel() {\n\t\t// insert the label of the printout this filter filters on\n\t\tthis.target.before( `<div class=\"filtered-filter-label\">${this.options[ 'label' ]}</div>` );\n\t}\n\n\tprotected addOnOffSwitch() {\n\n\t\tif ( this.options.hasOwnProperty( 'switches' ) ) {\n\n\t\t\tlet switches = this.options[ 'switches' ];\n\n\t\t\tif ( switches.length > 0 && $.inArray( 'on off', switches ) >= 0 ) {\n\n\t\t\t\tlet onOffControl = $( `<div class=\"filtered-filter-onoff on\"></div>` );\n\n\t\t\t\tthis.target.before( onOffControl );\n\n\t\t\t\tonOffControl.click( () => {\n\n\t\t\t\t\tif ( this.outerTarget.hasClass('enabled' ) ) {\n\t\t\t\t\t\tthis.disable();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.enable();\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected addControlForCollapsing() {\n\t\tlet collapsible = this.options.hasOwnProperty( 'collapsible' ) ? this.options[ 'collapsible' ] : undefined;\n\t\tif ( collapsible === 'collapsed' || collapsible === 'uncollapsed' ) {\n\n\t\t\tlet collapseControl = $( '<span class=\"filtered-filter-collapse\">' );\n\n\t\t\tthis.target.before( collapseControl );\n\n\t\t\tcollapseControl.click( () => {\n\t\t\t\tif ( collapseControl.hasClass( 'collapsed' ) ) {\n\t\t\t\t\tthis.uncollapse();\n\t\t\t\t\tthis.collapsed = false;\n\n\t\t\t\t\tcollapseControl\n\t\t\t\t\t.removeClass( 'collapsed' )\n\t\t\t\t\t.addClass( 'uncollapsed' );\n\t\t\t\t} else {\n\t\t\t\t\tthis.collapse();\n\t\t\t\t\tthis.collapsed = true;\n\n\t\t\t\t\tcollapseControl\n\t\t\t\t\t.removeClass( 'uncollapsed' )\n\t\t\t\t\t.addClass( 'collapsed' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( collapsible === 'collapsed' ) {\n\n\t\t\t\tthis.collapse( 0 );\n\t\t\t\tthis.collapsed = true;\n\t\t\t\tcollapseControl.addClass('collapsed');\n\n\t\t\t} else {\n\t\t\t\tcollapseControl.addClass('uncollapsed');\n\t\t\t}\n\t\t}\n\t}\n\n}","///<reference path=\"../../../../node_modules/@types/ion.rangeslider/index.d.ts\"/>\nimport { Filter } from \"./Filter\";\nimport { Options } from \"../../types\";\n\ndeclare let mw: any;\n\nexport class NumberFilter extends Filter {\n\n\tprivate MODE_RANGE = 0;\n\tprivate MODE_MIN = 1;\n\tprivate MODE_MAX = 2;\n\tprivate MODE_SELECT = 3;\n\n\tprivate filterValueUpper: number = 0;\n\tprivate filterValueLower: number = 0;\n\tprivate mode = this.MODE_RANGE;\n\n\tpublic init() {\n\n\t\tlet values: number[] = this.getValues();\n\n\t\tlet { minValue, maxValue, precision } = this.getRangeParameters( values );\n\n\t\tlet sliderOptions: IonRangeSliderOptions = {\n\t\t\tprettify_enabled: false,\n\t\t\tforce_edges: true,\n\t\t\tgrid: true\n\t\t};\n\n\t\tif ( this.options.hasOwnProperty( 'values' ) ) {\n\t\t\tsliderOptions = this.adjustSliderOptionsFromValues( sliderOptions, values );\n\n\t\t} else {\n\t\t\tsliderOptions = this.adjustSliderOptionsFromRangeParameters( sliderOptions, minValue, maxValue, precision );\n\t\t}\n\n\t\tswitch( this.options[ 'sliders' ] ) {\n\n\t\t\tcase \"min\":\n\n\t\t\t\tthis.mode = this.MODE_MIN;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tcase \"max\":\n\n\t\t\t\tthis.mode = this.MODE_MAX;\n\t\t\t\tsliderOptions.from = sliderOptions.to;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tcase \"select\":\n\n\t\t\t\tthis.mode = this.MODE_SELECT;\n\t\t\t\tmaxValue = minValue;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tdefault: // == case \"range\"\n\n\t\t\t\tthis.mode = this.MODE_RANGE;\n\t\t\t\tsliderOptions.type = 'double';\n\t\t}\n\n\t\tthis.buildFilterControls( sliderOptions );\n\n\t\tthis.filterValueLower = minValue;\n\t\tthis.filterValueUpper = maxValue;\n\n\t\treturn this;\n\t}\n\n\tprivate adjustSliderOptionsFromRangeParameters( sliderOptions: IonRangeSliderOptions, minValue: number, maxValue: number, precision: number ) {\n\n\t\tsliderOptions.min = minValue;\n\t\tsliderOptions.max = maxValue;\n\t\tsliderOptions.step = this.getStep( precision );\n\t\tsliderOptions.grid_num = Math.min( 4, Math.round( ( maxValue - minValue ) / sliderOptions.step ) );\n\n\t\tsliderOptions.from = minValue;\n\t\tsliderOptions.to = maxValue;\n\n\t\tsliderOptions.onFinish = ( data: IonRangeSliderEvent ) => this.onFilterUpdated( data.from, data.to );\n\n\t\treturn sliderOptions;\n\t}\n\n\tprivate adjustSliderOptionsFromValues( sliderOptions: IonRangeSliderOptions, values: number[] ) {\n\n\t\tsliderOptions.values = values;\n\n\t\tsliderOptions.from = 0;\n\t\tsliderOptions.to = values.length - 1;\n\n\t\tsliderOptions.onFinish = ( data: IonRangeSliderEvent ) => this.onFilterUpdated( data.from_value, data.to_value );\n\n\t\treturn sliderOptions;\n\t}\n\n\tprivate getRangeParameters( values: number[] ) {\n\n\t\tlet minValue = values[ 0 ];\n\t\tlet maxValue = values[ values.length - 1 ];\n\t\tlet precision: number = this.getPrecision( minValue, maxValue );\n\n\t\tif ( !this.options.hasOwnProperty( 'values' ) ) {\n\t\t\tminValue = this.getMinSliderValue( minValue, precision );\n\t\t\tmaxValue = this.getMaxSliderValue( maxValue, precision );\n\t\t}\n\n\t\treturn { minValue, maxValue, precision };\n\t}\n\n\tprivate getValues(): number[] {\n\t\tlet values: number[];\n\t\tif ( this.options.hasOwnProperty( 'values' ) && this.options[ 'values' ][0] !== 'auto' ) {\n\t\t\tvalues =  this.options[ 'values' ]\n\t\t} else {\n\t\t\tvalues =  this.getSortedValues();\n\t\t}\n\n\t\tif ( values.length === 0 ) {\n\t\t\tvalues = [ 0, 0 ];\n\t\t} else if ( values.length === 1 ) {\n\t\t\tvalues.push( values[ 0 ] );\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tprivate buildFilterControls( sliderOptions: IonRangeSliderOptions ) {\n\n\t\tlet filterClassNames: any = {};\n\t\tfilterClassNames[ this.MODE_MIN.toString() ] = \"mode-min\";\n\t\tfilterClassNames[ this.MODE_MAX ] = \"mode-max\";\n\t\tfilterClassNames[ this.MODE_RANGE ] = \"mode-range\";\n\t\tfilterClassNames[ this.MODE_SELECT ] = \"mode-select\";\n\n\t\tlet filtercontrols = this.buildEmptyControl();\n\n\t\tlet slider = $( '<input type=\"text\" value=\"\" />' );\n\t\tlet sliderContainer = $( `<div class=\"filtered-number-slider ${filterClassNames[ this.mode ]}\" />` ).append( slider );\n\t\tfiltercontrols.append( sliderContainer );\n\n\t\tif ( this.options.hasOwnProperty( 'caption' ) ) {\n\t\t\tlet caption = `<div class=\"filtered-number-caption\">${this.options[ 'caption' ]}</div>`;\n\t\t\tfiltercontrols.append( caption );\n\t\t}\n\n\t\tmw.loader.using( 'ext.srf.filtered.slider' ).then( () => slider.ionRangeSlider( sliderOptions ) );\n\t}\n\n\tprivate getMinSliderValue( minValue: number, precision: number ) {\n\t\tlet requestedMin = this.options[ 'min' ];\n\n\t\tif ( requestedMin === undefined || isNaN( Number( requestedMin ) ) ) {\n\t\t\treturn Math.floor( minValue / precision ) * precision;\n\t\t}\n\n\t\treturn Math.min( requestedMin, minValue );\n\t}\n\n\tprivate getMaxSliderValue( maxValue: number, precision: number ) {\n\t\tlet requestedMax = this.options[ 'max' ];\n\n\t\tif ( requestedMax === undefined || isNaN( Number( requestedMax ) ) ) {\n\t\t\treturn Math.ceil( maxValue / precision ) * precision;\n\t\t}\n\n\t\treturn Math.max( requestedMax, maxValue );\n\t}\n\n\tprivate getPrecision( minValue: number, maxValue: number ): number {\n\t\tif ( maxValue - minValue > 0 ) {\n\t\t\treturn 10 ** ( Math.floor( Math.log( maxValue - minValue ) * Math.LOG10E ) - 1 );\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tprivate getStep( precision: number ): number {\n\n\t\tlet step = this.options[ 'step' ];\n\n\t\tif ( step !== undefined ) {\n\n\t\t\tstep = Number( step );\n\n\t\t\tif ( !isNaN( step ) ) {\n\t\t\t\treturn step;\n\t\t\t}\n\t\t}\n\n\t\treturn precision / 10;\n\t}\n\n\tprivate getRangeFromValues(): [ number, number ] {\n\n\t\tlet rows = this.controller.getData();\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tfor ( let rowId in rows ) {\n\n\t\t\tif ( rows[ rowId ].data.hasOwnProperty( this.filterId ) ) {\n\t\t\t\tlet values: number[] = rows[ rowId ].data[ this.filterId ].values;\n\t\t\t\tmin = Math.min( min, ...values );\n\t\t\t\tmax = Math.max( max, ...values );\n\t\t\t}\n\t\t}\n\n\t\treturn [ min, max ];\n\t}\n\n\tprivate getSortedValues(): number[] {\n\n\t\tlet valueArray: number[] = [];\n\t\tlet rows = this.controller.getData();\n\n\t\tfor ( let rowId in rows ) {\n\n\t\t\tlet cells = rows[ rowId ].data;\n\n\t\t\tif ( cells.hasOwnProperty( this.filterId ) ) {\n\n\t\t\t\tlet values = cells[ this.filterId ].values;\n\n\t\t\t\tfor ( let valueId in values ) {\n\n\t\t\t\t\tlet value = Number( values[ valueId ] );\n\n\t\t\t\t\tif ( valueArray.indexOf( value ) === -1 ) {\n\t\t\t\t\t\tvalueArray.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn valueArray.sort( ( a: any, b: any ) => a - b );\n\t}\n\n\tpublic onFilterUpdated( from: number, to: number ) {\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase this.MODE_MIN:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tbreak;\n\n\t\t\tcase this.MODE_MAX:\n\n\t\t\t\tthis.filterValueUpper = from;\n\t\t\t\tbreak;\n\n\t\t\tcase this.MODE_SELECT:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tthis.filterValueUpper = from;\n\t\t\t\tbreak;\n\n\t\t\tdefault: // case this.MODE_RANGE:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tthis.filterValueUpper = to;\n\t\t}\n\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\t\tlet rowdata = this.controller.getData()[ rowId ].data;\n\n\t\tif ( rowdata.hasOwnProperty( this.filterId ) && rowdata[ this.filterId ].values.length > 0 ) {\n\n\t\t\tfor ( let value of rowdata[ this.filterId ].values ) {\n\t\t\t\tif ( value >= this.filterValueLower && value <= this.filterValueUpper ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.isVisible( rowId );\n\t}\n\n}\n","///<reference path=\"../../../../node_modules/@types/select2/index.d.ts\"/>\n\nimport { Filter } from \"./Filter\";\n\ndeclare let mw: any;\n\nexport class ValueFilter extends Filter {\n\n\tprivate values: any = {};\n\tprivate visibleValues: string[] = [];\n\n\tprivate _useOr = true;\n\n\tpublic init() {\n\t\tthis.values = this.getSortedValues();\n\t\tthis.buildControl();\n\t}\n\n\tpublic useOr( useOr: boolean ) {\n\t\tthis._useOr = useOr;\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tprivate getSortedValues(): any {\n\n\t\t/** Map of value => label distinct values */\n\t\tlet distinctValues: any = {};\n\t\t/** Map of value => sort value distinct values */\n\t\tlet distinctSortValues: any = {};\n\n\t\tif ( this.options.hasOwnProperty( 'values' ) ) {\n\n\t\t\treturn this.options[ 'values' ].map(\n\t\t\t\t( item: string ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprintoutValue: item,\n\t\t\t\t\t\tformattedValue: item\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\n\t\t} else {\n\t\t\t// build filter values from available values in result set\n\t\t\tlet data = this.controller.getData();\n\t\t\tlet sortedEntries: any[] = [];\n\t\t\tfor ( let id in data ) {\n\n\t\t\t\tlet printoutValues: any = data[ id ][ 'printouts' ][ this.printrequestId ][ 'values' ];\n\t\t\t\tlet printoutFormattedValues = data[ id ][ 'printouts' ][ this.printrequestId ][ 'formatted values' ];\n\t\t\t\tlet printoutSortValues: any = data[ id ][ 'printouts' ][ this.printrequestId ][ 'sort values' ];\n\n\t\t\t\tfor ( let i in printoutValues ) {\n\t\t\t\t\tlet printoutFormattedValue = printoutFormattedValues[ i ];\n\n\t\t\t\t\tif ( printoutFormattedValue.indexOf( '<a' ) > -1 ) {\n\t\t\t\t\t\tprintoutFormattedValue = /<a.*>(.*?)<\\/a>/.exec( printoutFormattedValue )[ 1 ];\n\t\t\t\t\t}\n\n\t\t\t\t\tdistinctValues[ printoutValues[ i ] ] = printoutFormattedValue;\n\t\t\t\t\tdistinctSortValues[ printoutValues[ i ] ] = printoutSortValues[ i ];\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let printoutValue in distinctSortValues ) {\n\t\t\t\tsortedEntries.push( {\n\t\t\t\t\tprintoutValue: printoutValue,\n\t\t\t\t\tsortValue: distinctSortValues[ printoutValue ],\n\t\t\t\t\tformattedValue: distinctValues[ printoutValue ]\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tsortedEntries.sort(\n\t\t\t\t( a: any, b: any ) => {\n\t\t\t\t\treturn a.sortValue.localeCompare( b.sortValue );\n\t\t\t\t} );\n\t\t\treturn sortedEntries;\n\n\t\t}\n\n\t}\n\n\tprivate buildControl() {\n\n\t\tlet filtercontrols = this.buildEmptyControl();\n\n\t\tfiltercontrols = this.addControlForSwitches( filtercontrols );\n\n\t\tlet maxCheckboxes = this.options.hasOwnProperty( 'max checkboxes' ) ? this.options[ 'max checkboxes' ] : 5;\n\n\t\tif ( this.values.length > maxCheckboxes ) {\n\t\t\tfiltercontrols.append( this.getSelected2Control() );\n\t\t} else {\n\t\t\tfiltercontrols.append( this.getCheckboxesControl() );\n\t\t}\n\n\t}\n\n\tprivate getCheckboxesControl() {\n\n\t\tlet checkboxes = $( '<div class=\"filtered-value-checkboxes\" style=\"width: 100%;\">' );\n\n\t\t// insert options (checkboxes and labels)\n\t\tfor ( let value of this.values ) {\n\t\t\tcheckboxes.append( `<div class=\"filtered-value-option\"><label><input type=\"checkbox\" value=\"${value.printoutValue}\" ><div class=\"filtered-value-option-label\">${value.formattedValue || value.printoutValue}</div></label></div>` );\n\t\t}\n\n\t\t// attach event handler\n\t\tcheckboxes\n\t\t.on( 'change', ':checkbox', ( eventObject: JQueryEventObject ) => {\n\t\t\tlet checkboxElement = <HTMLInputElement> eventObject.currentTarget;\n\t\t\tthis.onFilterUpdated( checkboxElement.value, checkboxElement.checked );\n\t\t} );\n\n\t\treturn checkboxes;\n\t}\n\n\tprivate getSelected2Control() {\n\n\t\tlet select = $( '<select class=\"filtered-value-select\" style=\"width: 100%;\">' );\n\n\t\tlet data: IdTextPair[] = [];\n\n\t\t// insert options (checkboxes and labels) and attach event handlers\n\t\tfor ( let value of this.values ) {\n\t\t\t// Try to get label, if not fall back to value id\n\t\t\tlet label = value.printoutValue;\n\t\t\tdata.push( { id: value.printoutValue, text: label } );\n\n\t\t}\n\n\t\tmw.loader.using( 'ext.srf.filtered.value-filter.select' ).then( () => {\n\n\t\t\tselect.select2( {\n\t\t\t\tmultiple: true,\n\t\t\t\tplaceholder: mw.message( 'srf-filtered-value-filter-placeholder' ).text(),\n\t\t\t\tdata: data\n\t\t\t} );\n\n\t\t\tselect.on( \"select2:select\", ( e: any ) => {\n\t\t\t\tthis.onFilterUpdated( e.params.data.id, true );\n\t\t\t} );\n\n\t\t\tselect.on( \"select2:unselect\", ( e: any ) => {\n\t\t\t\tthis.onFilterUpdated( e.params.data.id, false );\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn select;\n\t}\n\n\tprivate addControlForSwitches( filtercontrols: JQuery ): JQuery {\n\t\t// insert switches\n\t\tlet switches = this.options.hasOwnProperty( 'switches' ) ? this.options[ 'switches' ] : undefined;\n\n\t\tif ( switches !== undefined && $.inArray( 'and or', switches ) >= 0 ) {\n\n\t\t\tlet switchControls = $( '<div class=\"filtered-value-switches\">' );\n\n\t\t\tlet andorControl = $( '<div class=\"filtered-value-andor\">' );\n\n\t\t\tlet orControl = this.getRadioControl( 'or', true );\n\t\t\tlet andControl = this.getRadioControl( 'and' );\n\n\t\t\tandorControl\n\t\t\t.append( orControl )\n\t\t\t.append( andControl )\n\t\t\t.appendTo( switchControls );\n\n\t\t\tandorControl\n\t\t\t.find( 'input' )\n\t\t\t.on( 'change', undefined, { 'filter': this }, ( eventObject: JQueryEventObject ) =>\n\t\t\t\teventObject.data.filter.useOr( eventObject.target.getAttribute( 'value' ) === 'or' )\n\t\t\t);\n\n\n\t\t\tfiltercontrols.append( switchControls );\n\t\t}\n\n\t\treturn filtercontrols;\n\t}\n\n\tprivate getRadioControl( type: string, isChecked: boolean = false ) {\n\n\t\tlet checkedAttr = isChecked?'checked':'';\n\t\tlet labelText = mw.message( 'srf-filtered-value-filter-' + type ).text();\n\n\t\tlet controlText =\n\t\t\t`<label for=\"filtered-value-${type}-${this.printrequestId}\">` +\n\t\t\t`<input type=\"radio\" name=\"filtered-value-${this.printrequestId}\"  class=\"filtered-value-${type}\" id=\"filtered-value-${type}-${this.printrequestId}\" value=\"${type}\" ${checkedAttr}>` +\n\t\t\t`${labelText}</label>`;\n\n\t\treturn $( controlText );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\n\t\tif ( this.visibleValues.length === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet values: string[] = this.controller.getData()[ rowId ].printouts[ this.printrequestId ].values;\n\n\t\tif ( values.length === 0 ) {\n\t\t\treturn super.isVisible( rowId );\n\t\t}\n\n\n\t\tif ( this._useOr ) {\n\t\t\tfor ( let expectedValue of this.visibleValues ) {\n\t\t\t\tif ( values.indexOf( expectedValue ) >= 0 ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor ( let expectedValue of this.visibleValues ) {\n\t\t\t\tif ( values.indexOf( expectedValue ) < 0 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic onFilterUpdated( value: string, isChecked: boolean ) {\n\t\tlet index = this.visibleValues.indexOf( value );\n\n\t\tif ( isChecked && index === -1 ) {\n\t\t\tthis.visibleValues.push( value );\n\t\t} else if ( !isChecked && index >= 0 ) {\n\t\t\tthis.visibleValues.splice( index, 1 );\n\t\t}\n\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n}\n","import { Options } from \"../types\";\nimport { Controller } from \"./Controller\";\nimport { ViewSelector } from \"./ViewSelector\";\nimport { View } from \"./View/View\";\nimport { ListView } from \"./View/ListView\";\nimport { TableView } from \"./View/TableView\";\nimport { MapView } from \"./View/MapView\";\nimport { CalendarView } from \"./View/CalendarView\";\nimport { Filter } from \"./Filter/Filter\";\nimport { ValueFilter } from \"./Filter/ValueFilter\";\nimport { DistanceFilter } from \"./Filter/DistanceFilter\";\nimport { NumberFilter } from \"./Filter/NumberFilter\";\n\n/**\n * Central Filtered class\n *\n * Factory to setup everyhting else\n */\nexport class Filtered {\n\n\tprivate config: any;\n\tprivate target: JQuery;\n\n\tprivate viewTypes: { [key: string]: new( id: string, target: JQuery, controller: Controller, options?: any ) => View } = {\n\t\ttable: TableView,\n\t\tlist: ListView,\n\t\tmap: MapView,\n\t\tcalendar: CalendarView\n\t};\n\n\tprivate filterTypes: { [key: string]: new( id: string, target: JQuery, printrequestId: string, controller: Controller, options?: Options ) => Filter } = {\n\t\tvalue: ValueFilter,\n\t\tdistance: DistanceFilter,\n\t\tnumber: NumberFilter\n\t};\n\n\t/**\n\t *\n\t * @param target\n\t * @param config\n\t */\n\tpublic constructor( target: JQuery, config: any ) {\n\t\tthis.config = config;\n\t\tthis.target = target;\n\t}\n\n\tpublic run() {\n\n\t\tlet controller = new Controller( this.target, this.config.data, this.config.printrequests );\n\n\t\tthis.attachFilters( controller, this.target.children( 'div.filtered-filters' ) );\n\t\tthis.attachViewSelector( controller, this.target.find( 'div.filtered-views-selectors-container' ) );\n\t\tthis.attachViews( controller, this.target.find( 'div.filtered-views-container' ) );\n\n\t\t// lift-off\n\t\tcontroller.show();\n\n\t}\n\n\tprivate attachFilters( controller: Controller, filtersContainer: JQuery ) {\n\n\t\tfor ( let prId in this.config.printrequests ) {\n\n\t\t\tlet pr = this.config.printrequests[ prId ];\n\n\t\t\tif ( pr.hasOwnProperty( 'filters' ) ) {\n\n\t\t\t\tfor ( let filterid in pr.filters ) {\n\n\t\t\t\t\tif ( pr.filters.hasOwnProperty( filterid ) &&\n\t\t\t\t\t\tpr.filters[ filterid ].hasOwnProperty( 'type' ) &&\n\t\t\t\t\t\tthis.filterTypes.hasOwnProperty( pr.filters[ filterid ].type ) ) {\n\n\t\t\t\t\t\t//  target: JQuery, printrequest: string,\n\t\t\t\t\t\t// controller: Controller, options?: Options\n\t\t\t\t\t\tlet filter: Filter = new this.filterTypes[ pr.filters[ filterid ].type ]( filterid, filtersContainer.children( '#' + filterid ), prId, controller, pr.filters[ filterid ] );\n\n\t\t\t\t\t\tcontroller.attachFilter( filter );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprivate attachViewSelector( controller: Controller, viewSelectorContainer: JQuery ) {\n\t\tlet viewSelector = new ViewSelector( viewSelectorContainer, Object.keys( this.config.views ), controller );\n\t\tviewSelector.init();\n\t}\n\n\tprivate attachViews( controller: Controller, viewsContainer: JQuery ) {\n\n\t\t// attach views\n\t\tfor ( let viewid in this.config.views ) {\n\n\t\t\tlet viewtype = this.config.views[ viewid ][ 'type' ];\n\t\t\tlet viewHandlerClass = this.viewTypes.hasOwnProperty( viewtype ) ? this.viewTypes[ viewtype ] : View;\n\n\t\t\tlet view: View = new viewHandlerClass( viewid, viewsContainer.children( '#' + viewid ), controller, this.config.views[ viewid ] );\n\n\t\t\tview.init();\n\n\t\t\tcontroller.attachView( viewid, view );\n\n\t\t}\n\t}\n}\n","import { View } from \"./View\";\ndeclare let mw: any;\n\nexport class CalendarView extends View {\n\n\tprivate getI18N() {\n\t\treturn {\n\t\t\tmonthNames: [ mw.msg( 'january' ), mw.msg( 'february' ), mw.msg( 'march' ),\n\t\t\t\tmw.msg( 'april' ), mw.msg( 'may_long' ), mw.msg( 'june' ),\n\t\t\t\tmw.msg( 'july' ), mw.msg( 'august' ), mw.msg( 'september' ),\n\t\t\t\tmw.msg( 'october' ), mw.msg( 'november' ), mw.msg( 'december' )\n\t\t\t],\n\t\t\tmonthNamesShort: [ mw.msg( 'jan' ), mw.msg( 'feb' ), mw.msg( 'mar' ),\n\t\t\t\tmw.msg( 'apr' ), mw.msg( 'may' ), mw.msg( 'jun' ),\n\t\t\t\tmw.msg( 'jul' ), mw.msg( 'aug' ), mw.msg( 'sep' ),\n\t\t\t\tmw.msg( 'oct' ), mw.msg( 'nov' ), mw.msg( 'dec' )\n\t\t\t],\n\t\t\tdayNames: [ mw.msg( 'sunday' ), mw.msg( 'monday' ), mw.msg( 'tuesday' ),\n\t\t\t\tmw.msg( 'wednesday' ), mw.msg( 'thursday' ), mw.msg( 'friday' ), mw.msg( 'saturday' )\n\t\t\t],\n\t\t\tdayNamesShort: [ mw.msg( 'sun' ), mw.msg( 'mon' ), mw.msg( 'tue' ),\n\t\t\t\tmw.msg( 'wed' ), mw.msg( 'thu' ), mw.msg( 'fri' ), mw.msg( 'sat' )\n\t\t\t],\n\t\t\tbuttonText: {\n\t\t\t\ttoday: mw.msg( 'srf-ui-eventcalendar-label-today' ),\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-label-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-label-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-label-day' )\n\t\t\t}\n\t\t\t,\n\t\t\tallDayText: mw.msg( 'srf-ui-eventcalendar-label-allday' ),\n\t\t\ttimeFormat: {\n\t\t\t\t'': mw.msg( 'srf-ui-eventcalendar-format-time' ),\n\t\t\t\tagenda: mw.msg( 'srf-ui-eventcalendar-format-time-agenda' )\n\t\t\t}\n\t\t\t,\n\t\t\taxisFormat: mw.msg( 'srf-ui-eventcalendar-format-axis' ),\n\t\t\ttitleFormat: {\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-format-title-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-format-title-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-format-title-day' )\n\t\t\t}\n\t\t\t,\n\t\t\tcolumnFormat: {\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-format-column-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-format-column-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-format-column-day' )\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic init() {\n\n\t\tlet _i18n = this.getI18N();\n\n\t\t// initialize the calendar\n\t\tthis.target.fullCalendar( {\n\n\t\t\tfirstDay: this.options.firstDay,\n\t\t\tisRTL: this.options.isRTL,\n\t\t\tmonthNames: _i18n.monthNames,\n\t\t\tmonthNamesShort: _i18n.monthNamesShort,\n\t\t\tdayNames: _i18n.dayNames,\n\t\t\tdayNamesShort: _i18n.dayNamesShort,\n\t\t\tbuttonText: _i18n.buttonText,\n\t\t\tallDayText: _i18n.allDayText,\n\t\t\ttimeFormat: _i18n.timeFormat,\n\t\t\ttitleFormat: _i18n.titleFormat,\n\t\t\tcolumnFormat: _i18n.columnFormat\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\tprivate getEvent( rowId: any, rowData: any ) {\n\n\t\tlet eventdata: any = {\n\t\t\tid: rowId,\n\t\t\ttitle: rowData[ 'title' ],\n\t\t\tstart: rowData[ 'start' ],\n\t\t\tclassName: rowId\n\t\t};\n\n\t\tif ( rowData.hasOwnProperty( 'end' ) ) {\n\t\t\teventdata[ 'end' ] = rowData[ 'end' ];\n\t\t}\n\n\t\tif ( rowData.hasOwnProperty( 'url' ) ) {\n\t\t\teventdata[ 'url' ] = rowData[ 'url' ];\n\t\t}\n\n\t\treturn eventdata;\n\t}\n\n\tpublic showRows( rowIds: string[] ): any {\n\n\t\tlet events: any[] = [];\n\n\t\trowIds.forEach( ( rowId: string ) => {\n\n\t\t\tlet rowData = this.controller.getData()[ rowId ].data[ this.id ];\n\n\t\t\tif ( rowData.hasOwnProperty( 'start' ) ) {\n\t\t\t\tevents.push( this.getEvent( rowId, rowData ) );\n\t\t\t}\n\t\t} );\n\n\t\tthis.target.fullCalendar( 'addEventSource', events );\n\t}\n\n\tpublic hideRows( rowIds: string[] ): any {\n\t\tthis.target.fullCalendar( 'removeEvents', ( e: any ) => ( rowIds.indexOf( e._id ) >= 0 ) );\n\t}\n\n\tpublic show(): any {\n\t\tsuper.show();\n\t\tthis.target.fullCalendar( 'render' );\n\t}\n\n\tpublic hide(): any {\n\t\treturn super.hide();\n\t}\n\n}\n","import { View } from \"./View\";\n\nexport class ListView extends View {\n\n\tprotected getItemClassName() {\n\t\treturn '.filtered-list-item';\n\t}\n\n\n}\n","/// <reference types=\"leaflet\" />\n\nimport { View } from \"./View\";\nimport { Options } from \"../../types\"\n\ndeclare let mw: any;\n\nexport class MapView extends View {\n\n\tprivate map: L.Map = undefined;\n\tprivate icon: { [key: string]: L.Icon } = undefined;\n\tprivate markers: { [key: string]: L.Marker[] } = undefined;\n\tprivate markerClusterGroup: L.MarkerClusterGroup = undefined;\n\tprivate bounds: L.LatLngBounds = undefined;\n\tprivate initialized: boolean = false;\n\n\tprivate zoom: number = -1;\n\tprivate minZoom: number = -1;\n\tprivate maxZoom: number = -1;\n\n\tprivate leafletPromise: Promise<any> = undefined;\n\n\tpublic init() {\n\n\t\tlet data = this.controller.getData();\n\t\tlet markers: { [rowId: string]: L.Marker[] } = {};\n\n\t\tif ( this.options.hasOwnProperty( 'height' ) ) {\n\t\t\tthis.target.height( this.options.height );\n\t\t}\n\n\t\tthis.leafletPromise = mw.loader.using( 'ext.srf.filtered.map-view.leaflet' )\n\t\t.then( () => {\n\n\t\t\tlet bounds: L.LatLngBounds = undefined;\n\t\t\tlet disableClusteringAtZoom = this.getZoomForUnclustering();\n\n\t\t\tlet clusterOptions: Options = {\n\t\t\t\tanimateAddingMarkers: true,\n\t\t\t\tdisableClusteringAtZoom: disableClusteringAtZoom,\n\t\t\t\tspiderfyOnMaxZoom: disableClusteringAtZoom === null\n\t\t\t};\n\n\t\t\tclusterOptions = this.getOptions( [ 'maxClusterRadius', 'zoomToBoundsOnClick' ], clusterOptions );\n\n\t\t\tlet markerClusterGroup: L.MarkerClusterGroup = L.markerClusterGroup( clusterOptions );\n\n\t\t\tfor ( let rowId in data ) {\n\n\t\t\t\tif ( data[ rowId ][ 'data' ].hasOwnProperty( this.id ) ) {\n\t\t\t\t\tlet positions: L.LatLngLiteral[] = data[ rowId ][ 'data' ][ this.id ][ 'positions' ];\n\t\t\t\t\tmarkers[ rowId ] = [];\n\n\t\t\t\t\tfor ( let pos of positions ) {\n\n\t\t\t\t\t\tbounds = ( bounds === undefined ) ? new L.LatLngBounds( pos, pos ) : bounds.extend( pos );\n\n\t\t\t\t\t\tlet marker = this.getMarker( pos, data[ rowId ] );\n\t\t\t\t\t\tmarkers[ rowId ].push( marker );\n\t\t\t\t\t\tmarkerClusterGroup.addLayer( marker );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markerClusterGroup = markerClusterGroup;\n\t\t\tthis.markers = markers;\n\t\t\tthis.bounds = ( bounds === undefined ) ? new L.LatLngBounds( [ -180, -90 ], [ 180, 90 ] ) : bounds;\n\t\t} );\n\t}\n\n\tprivate getZoomForUnclustering() {\n\n\t\tif ( this.options.hasOwnProperty( 'marker cluster' ) && this.options[ 'marker cluster' ] === false ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ( this.options.hasOwnProperty( 'marker cluster max zoom' ) ) {\n\t\t\treturn this.options[ 'marker cluster max zoom' ] + 1;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate getIcon( row: any ) {\n\n\t\tif ( this.icon === undefined ) {\n\t\t\tthis.buildIconList();\n\t\t}\n\n\t\tif ( this.options.hasOwnProperty( 'marker icon property' ) ) {\n\n\t\t\tlet vals: string[] = row[ 'printouts' ][ this.options[ 'marker icon property' ] ][ 'values' ];\n\n\t\t\tif ( vals.length > 0 && this.icon.hasOwnProperty( vals[ 0 ] ) ) {\n\t\t\t\treturn this.icon[ vals[ 0 ] ];\n\t\t\t}\n\t\t}\n\n\t\treturn this.icon[ 'default' ];\n\t}\n\n\tprivate buildIconList() {\n\t\tthis.icon = {};\n\n\t\tlet iconPath = this.controller.getPath() + 'css/images/';\n\n\t\tthis.icon[ 'default' ] = new L.Icon( {\n\t\t\t'iconUrl': iconPath + 'marker-icon.png',\n\t\t\t'iconRetinaUrl': iconPath + 'marker-icon-2x.png',\n\t\t\t'shadowUrl': iconPath + 'marker-shadow.png',\n\t\t\t'iconSize': [ 25, 41 ],\n\t\t\t'iconAnchor': [ 12, 41 ],\n\t\t\t'popupAnchor': [ 1, -34 ],\n\t\t\t// 'tooltipAnchor': [16, -28],\n\t\t\t'shadowSize': [ 41, 41 ]\n\t\t} );\n\n\t\tif ( this.options.hasOwnProperty( 'marker icons' ) ) {\n\n\t\t\tfor ( let value in this.options[ 'marker icons' ] ) {\n\t\t\t\tthis.icon[ value ] = new L.Icon( {\n\t\t\t\t\t'iconUrl': this.options[ 'marker icons' ][ value ],\n\t\t\t\t\t// 'iconRetinaUrl': iconPath + 'marker-icon-2x.png',\n\t\t\t\t\t'shadowUrl': iconPath + 'marker-shadow.png',\n\t\t\t\t\t'iconSize': [ 32, 32 ],\n\t\t\t\t\t'iconAnchor': [ 16, 32 ],\n\t\t\t\t\t'popupAnchor': [ 1, -30 ],\n\t\t\t\t\t// 'tooltipAnchor': [16, -28],\n\t\t\t\t\t'shadowSize': [ 41, 41 ],\n\t\t\t\t\t'shadowAnchor': [ 12, 41 ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getMarker( latLng: L.LatLngExpression, row: any ) {\n\t\tlet title = undefined;\n\t\tlet popup = [];\n\n\t\t// TODO: Use <div> instead of <b> and do CSS styling\n\n\t\tfor ( let prId in row[ 'printouts' ] ) {\n\t\t\tlet printrequest = (this.controller.getPrintRequests())[ prId ];\n\n\t\t\tif ( ! printrequest.hasOwnProperty('hide') || printrequest.hide === false ) {\n\t\t\t\tlet printouts = row[ 'printouts' ][ prId ];\n\n\t\t\t\tif ( title === undefined ) {\n\t\t\t\t\ttitle = printouts[ 'values' ].join( ', ' );\n\t\t\t\t\tpopup.push( '<b>' + printouts[ 'formatted values' ].join( ', ' ) + '</b>' );\n\t\t\t\t} else {\n\t\t\t\t\tpopup.push( (printouts.label ? '<b>' + printouts.label + ':</b> ' : '') + printouts[ 'formatted values' ].join( ', ' ) )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet marker = L.marker( latLng, { title: title, alt: title } );\n\t\tmarker.bindPopup( popup.join( '<br>' ) );\n\n\t\tmarker.setIcon( this.getIcon( row ) );\n\t\treturn marker;\n\t}\n\n\tpublic lateInit() {\n\n\t\tif ( this.initialized ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initialized = true;\n\n\t\tlet that = this;\n\n\t\tthis.leafletPromise.then( () => {\n\n\t\t\tlet mapOptions: Options = {\n\t\t\t\tcenter: this.bounds !== undefined ? this.bounds.getCenter() : [ 0, 0 ]\n\t\t\t};\n\n\t\t\tmapOptions = that.getOptions( [ 'zoom', 'minZoom', 'maxZoom' ], mapOptions );\n\n\t\t\t// TODO: Limit zoom values to map max zoom\n\n\t\t\tthat.map = L.map( that.getTargetElement().get( 0 ), mapOptions );\n\t\t\tthat.map.addLayer( that.markerClusterGroup );\n\n\t\t\tif ( this.options.hasOwnProperty( 'map provider' ) ) {\n\t\t\t\tL.tileLayer.provider( this.options[ 'map provider' ] ).addTo( that.map );\n\t\t\t}\n\n\t\t\tif ( !mapOptions.hasOwnProperty( 'zoom' ) ) {\n\t\t\t\tthat.map.fitBounds( that.bounds );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tpublic getOptions( keys: string[], defaults: Options = {} ) {\n\n\t\tfor ( let key of keys ) {\n\t\t\tif ( this.options.hasOwnProperty( key ) ) {\n\t\t\t\tdefaults[ key ] = this.options[ key ];\n\t\t\t}\n\t\t}\n\n\t\treturn defaults;\n\t}\n\n\tpublic showRows( rowIds: string[] ) {\n\t\tthis.leafletPromise.then( () => {\n\t\t\tthis.manipulateLayers( rowIds, ( layers: L.Layer[] ) => {\n\t\t\t\tthis.markerClusterGroup.addLayers( layers )\n\t\t\t} )\n\t\t} );\n\t}\n\n\tpublic hideRows( rowIds: string[] ) {\n\t\tthis.leafletPromise.then( () => {\n\t\t\tthis.manipulateLayers( rowIds, ( layers: L.Layer[] ) => {\n\t\t\t\tthis.markerClusterGroup.removeLayers( layers )\n\t\t\t} )\n\t\t} );\n\t}\n\n\tprivate manipulateLayers( rowIds: string[], cb: ( layers: L.Layer[] ) => void ) {\n\n\t\tlet layersFromRowIds = this.getLayersFromRowIds( rowIds );\n\n\t\tif ( layersFromRowIds.length > 0 ) {\n\t\t\tcb( layersFromRowIds );\n\t\t}\n\n\t}\n\n\tprivate getLayersFromRowIds( rowIds: string[] ) {\n\t\treturn this.flatten( this.getLayersFromRowIdsRaw( rowIds ) );\n\t}\n\n\tprivate getLayersFromRowIdsRaw( rowIds: string[] ) {\n\t\treturn rowIds.map( ( rowId: string ) => this.markers[ rowId ] ? this.markers[ rowId ] : [] );\n\t}\n\n\tprivate flatten( markers: L.Layer[][] ): L.Layer[] {\n\t\treturn markers.reduce( ( result: L.Layer[], layers: L.Layer[] ) => result.concat( layers ), [] );\n\t}\n\n\tpublic show() {\n\t\tsuper.show();\n\t\tthis.lateInit();\n\t}\n\n}\n","import { View } from \"./View\";\n\nexport class TableView extends View {\n\n\tprotected getItemClassName() {\n\t\treturn '.filtered-table-item';\n\t}\n\n}","import { Options } from \"../../types\";\nimport { Controller } from \"../Controller\";\n\nexport class View {\n\n\tprotected id: string = undefined;\n\tprotected target: JQuery = undefined;\n\tprotected controller: Controller = undefined;\n\tprotected options: Options = undefined;\n\tprotected visible: boolean = false;\n\tprotected rows: { [ rowId: string ]: JQuery } = {};\n\n\tpublic constructor( id: string, target: JQuery, c: Controller, options: Options = {} ) {\n\t\tthis.id = id;\n\t\tthis.target = target;\n\t\tthis.controller = c;\n\t\tthis.options = options;\n\t}\n\n\tpublic init() {\n\n\t\tlet rowIds = Object.keys( this.controller.getData() );\n\t\tlet rows = this.target.find( this.getItemClassName() );\n\n\t\trows.each( ( index, elem ) => {\n\t\t\tlet classes = elem.classList;\n\t\t\tfor ( let i = 0; i < classes.length; i++ ) {\n\t\t\t\tif ( rowIds.indexOf( classes[ i ] ) >= 0 ) {\n\t\t\t\t\tthis.rows[ classes[ i ] ] = $( rows[ index ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\tprotected getItemClassName() {\n\t\treturn '.filtered-item';\n\t}\n\n\tpublic getTargetElement(): JQuery {\n\t\treturn this.target;\n\t}\n\n\tpublic showRows( rowIds: string[] ) {\n\n\t\tif ( this.visible && rowIds.length < 200 ) {\n\n\t\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\t\tthis.rows[ rowId ].slideDown( 400 );\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\t\tthis.rows[ rowId ].css( 'display', '');\n\t\t\t} );\n\n\t\t}\n\t}\n\n\tpublic hideRows( rowIds: string[] ) {\n\n\t\tif ( this.visible && rowIds.length < 200 ) {\n\n\t\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\t\tthis.rows[ rowId ].slideUp( 400 );\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\t\tthis.rows[ rowId ].css( 'display', 'none');\n\t\t\t} );\n\n\t\t}\n\t}\n\n\tpublic show() {\n\t\tthis.target.show();\n\t\tthis.visible = true;\n\t}\n\n\tpublic hide() {\n\t\tthis.target.hide();\n\t\tthis.visible = false;\n\t}\n}\n","import { Controller } from \"./Controller\";\nexport class ViewSelector {\n\n\tprivate target: JQuery = undefined;\n\tprivate viewIDs: string[] = undefined;\n\n\tprivate controller: Controller = undefined;\n\n\tpublic constructor( target: JQuery, viewIDs: string[], controller: Controller ) {\n\t\tthis.target = target;\n\t\tthis.viewIDs = viewIDs;\n\t\tthis.controller = controller;\n\t}\n\n\tpublic init() {\n\t\tif ( this.viewIDs.length > 1 ) {\n\t\t\tthis.viewIDs.forEach( ( id: string) => { this.target.on( 'click', '.' + id, { 'target': id, 'controller' : this.controller }, ViewSelector.onSelectorSelected ); } );\n\t\t\tthis.target.children().first().addClass( 'selected');\n\t\t\tthis.target.show();\n\t\t}\n\t}\n\n\tprivate static onSelectorSelected( event: JQueryEventObject ) {\n\n\t\tevent.data.controller.onViewSelected( event.data.target );\n\n\t\t$( event.target )\n\t\t.addClass( 'selected')\n\t\t.siblings().removeClass( 'selected' );\n\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n\n}","import { Filtered } from \"./Filtered/Filtered\";\n\ndeclare let mw: any;\nlet config = mw.config.get( 'srfFilteredConfig' );\n\nfor ( let id in config ) {\n\tif ( config.hasOwnProperty( id ) ) {\n\t\tlet f = new Filtered( $( '#' + id ), config[ id ] );\n\t\tmw.hook( 'wikipage.content' ).add( () => f.run() );\n\t}\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJyZXNvdXJjZXMvdHMvRmlsdGVyZWQvQ29udHJvbGxlci50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9GaWx0ZXIvRGlzdGFuY2VGaWx0ZXIudHMiLCJyZXNvdXJjZXMvdHMvRmlsdGVyZWQvRmlsdGVyL0ZpbHRlci50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9GaWx0ZXIvTnVtYmVyRmlsdGVyLnRzIiwicmVzb3VyY2VzL3RzL0ZpbHRlcmVkL0ZpbHRlci9WYWx1ZUZpbHRlci50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9GaWx0ZXJlZC50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L0NhbGVuZGFyVmlldy50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L0xpc3RWaWV3LnRzIiwicmVzb3VyY2VzL3RzL0ZpbHRlcmVkL1ZpZXcvTWFwVmlldy50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L1RhYmxlVmlldy50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L1ZpZXcudHMiLCJyZXNvdXJjZXMvdHMvRmlsdGVyZWQvVmlld1NlbGVjdG9yLnRzIiwicmVzb3VyY2VzL3RzL2Jvb3RzdHJhcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUNBQSxnQ0FBZ0M7O0FBS2hDLG9DQUFtQztBQUduQztJQVVDLG9CQUFvQixNQUFjLEVBQUUsSUFBZ0IsRUFBRSxhQUFzQjtRQVRwRSxXQUFNLEdBQVcsU0FBUyxDQUFDO1FBQzNCLGtCQUFhLEdBQVcsU0FBUyxDQUFDO1FBRWxDLFVBQUssR0FBNEIsRUFBRSxDQUFDO1FBQ3BDLFlBQU8sR0FBOEIsRUFBRSxDQUFDO1FBQ3hDLGdCQUFXLEdBQVMsU0FBUyxDQUFDO1FBS3JDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBRXJCLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxNQUFNLEtBQUssU0FBVSxDQUFDLENBQUMsQ0FBQztZQUNqQyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFFLDZCQUE2QixDQUFFLENBQUM7UUFDeEUsQ0FBQztRQUVELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBRW5DLEdBQUcsQ0FBQyxDQUFFLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxJQUFLLENBQUMsQ0FBQyxDQUFDO1lBQy9CLEVBQUUsQ0FBQyxDQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBRSxLQUFLLENBQUUsQ0FBQyxjQUFjLENBQUUsU0FBUyxDQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUN2RCxJQUFJLENBQUMsSUFBSSxDQUFFLEtBQUssQ0FBRSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7WUFDakMsQ0FBQztRQUNGLENBQUM7SUFDRixDQUFDO0lBRU0sNEJBQU8sR0FBZDtRQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ2xCLENBQUM7SUFFTSxxQ0FBZ0IsR0FBdkI7UUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUMzQixDQUFDO0lBRU0sNEJBQU8sR0FBZDtRQUNDLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBRSxnQkFBZ0IsQ0FBRSxHQUFHLDhCQUE4QixDQUFDO0lBQzlFLENBQUM7SUFFTSwrQkFBVSxHQUFqQixVQUFtQixNQUFjLEVBQUUsSUFBVTtRQUU1QyxJQUFJLENBQUMsS0FBSyxDQUFFLE1BQU0sQ0FBRSxHQUFHLElBQUksQ0FBQztRQUU1QixFQUFFLENBQUMsQ0FBRSxJQUFJLENBQUMsV0FBVyxLQUFLLFNBQVUsQ0FBQyxDQUFDLENBQUM7WUFDdEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7WUFDeEIsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2IsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ1AsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2IsQ0FBQztRQUVELE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRU0sNEJBQU8sR0FBZCxVQUFnQixNQUFjO1FBQzdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFFLE1BQU0sQ0FBRSxDQUFDO0lBQzdCLENBQUM7SUFFTSxpQ0FBWSxHQUFuQixVQUFxQixNQUFjO1FBQ2xDLElBQUksUUFBUSxHQUFHLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUU5QixJQUFJLENBQUMsT0FBTyxDQUFFLFFBQVEsQ0FBRSxHQUFHLE1BQU0sQ0FBQztRQUVsQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7UUFFZCxNQUFNLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBRSxRQUFRLENBQUUsQ0FBQztJQUN6QyxDQUFDO0lBRU0sOEJBQVMsR0FBaEIsVUFBa0IsUUFBZ0I7UUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUUsUUFBUSxDQUFFLENBQUM7SUFDakMsQ0FBQztJQUVNLHlCQUFJLEdBQVg7UUFDQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUN6QixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBRSxtQkFBbUIsQ0FBRSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3JELElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDOUIsSUFBSSxDQUFDLFlBQVksQ0FBRSxJQUFJLENBQUMsV0FBVyxDQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVPLGlDQUFZLEdBQXBCLFVBQXNCLElBQVU7UUFFL0IsRUFBRSxDQUFDLENBQUUsSUFBSSxDQUFDLFdBQVcsWUFBWSxXQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ3hDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDekIsQ0FBQztRQUVELElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBRXhCLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxXQUFXLFlBQVksV0FBSyxDQUFDLENBQUMsQ0FBQztZQUN4QyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDYixDQUFDO0lBRUYsQ0FBQztJQUVPLHNDQUFpQixHQUF6QjtRQUNDLElBQUksTUFBTSxHQUFhLEVBQUUsQ0FBQztRQUMxQixJQUFJLE1BQU0sR0FBYSxFQUFFLENBQUM7UUFFMUIsR0FBRyxDQUFDLENBQUUsSUFBSSxLQUFLLElBQUksSUFBSSxDQUFDLElBQUssQ0FBQyxDQUFDLENBQUM7WUFDL0IsR0FBRyxDQUFDLENBQUUsSUFBSSxRQUFRLElBQUksSUFBSSxDQUFDLE9BQVEsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JDLElBQUksQ0FBQyxJQUFJLENBQUUsS0FBSyxDQUFFLENBQUMsT0FBTyxDQUFFLFFBQVEsQ0FBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUUsUUFBUSxDQUFFLENBQUMsVUFBVSxFQUFFLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBRSxRQUFRLENBQUUsQ0FBQyxTQUFTLENBQUUsS0FBSyxDQUFFLENBQUM7WUFDL0gsQ0FBQztZQUNELEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxTQUFTLENBQUUsS0FBSyxDQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUMvQixNQUFNLENBQUMsSUFBSSxDQUFFLEtBQUssQ0FBRSxDQUFDO1lBQ3RCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDUCxNQUFNLENBQUMsSUFBSSxDQUFFLEtBQUssQ0FBRSxDQUFDO1lBQ3RCLENBQUM7UUFDRixDQUFDO1FBRUQsSUFBSSxDQUFDLFFBQVEsQ0FBRSxNQUFNLENBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsUUFBUSxDQUFFLE1BQU0sQ0FBRSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxtQ0FBYyxHQUFyQixVQUF1QixNQUFjO1FBQ3BDLElBQUksQ0FBQyxZQUFZLENBQUUsSUFBSSxDQUFDLEtBQUssQ0FBRSxNQUFNLENBQUUsQ0FBRSxDQUFDO0lBQzNDLENBQUM7SUFFTSxvQ0FBZSxHQUF0QixVQUF3QixRQUFnQjtRQUF4QyxpQkE4QkM7UUE1QkEsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUU7YUFDeEIsSUFBSSxDQUFDO1lBRUwsSUFBSSxNQUFNLEdBQWEsRUFBRSxDQUFDO1lBQzFCLElBQUksTUFBTSxHQUFhLEVBQUUsQ0FBQztZQUUxQixJQUFJLFFBQVEsR0FBRyxLQUFJLENBQUMsT0FBTyxDQUFFLFFBQVEsQ0FBRSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBRXJELEdBQUcsQ0FBQyxDQUFFLElBQUksS0FBSyxJQUFJLEtBQUksQ0FBQyxJQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUUvQixJQUFJLFVBQVUsR0FBWSxRQUFRLElBQUksS0FBSSxDQUFDLE9BQU8sQ0FBRSxRQUFRLENBQUUsQ0FBQyxTQUFTLENBQUUsS0FBSyxDQUFFLENBQUM7Z0JBRWxGLEVBQUUsQ0FBQyxDQUFFLEtBQUksQ0FBQyxJQUFJLENBQUUsS0FBSyxDQUFFLENBQUMsT0FBTyxDQUFFLFFBQVEsQ0FBRSxLQUFLLFVBQVcsQ0FBQyxDQUFDLENBQUM7b0JBRTdELEtBQUksQ0FBQyxJQUFJLENBQUUsS0FBSyxDQUFFLENBQUMsT0FBTyxDQUFFLFFBQVEsQ0FBRSxHQUFHLFVBQVUsQ0FBQztvQkFFcEQsRUFBRSxDQUFDLENBQUUsVUFBVSxJQUFJLEtBQUksQ0FBQyxTQUFTLENBQUUsS0FBSyxDQUFHLENBQUMsQ0FBQyxDQUFDO3dCQUM3QyxNQUFNLENBQUMsSUFBSSxDQUFFLEtBQUssQ0FBRSxDQUFDO29CQUN0QixDQUFDO29CQUFDLElBQUksQ0FBQyxDQUFDO3dCQUNQLE1BQU0sQ0FBQyxJQUFJLENBQUUsS0FBSyxDQUFFLENBQUM7b0JBQ3RCLENBQUM7Z0JBQ0YsQ0FBQztZQUNGLENBQUM7WUFFRCxLQUFJLENBQUMsUUFBUSxDQUFFLE1BQU0sQ0FBRSxDQUFDO1lBQ3hCLEtBQUksQ0FBQyxRQUFRLENBQUUsTUFBTSxDQUFFLENBQUM7UUFDekIsQ0FBQyxDQUFDO2FBQ0QsSUFBSSxDQUFFLGNBQVEsS0FBSSxDQUFDLFdBQVcsRUFBRSxDQUFBLENBQUMsQ0FBQyxDQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVNLDhCQUFTLEdBQWhCLFVBQWtCLEtBQVU7UUFDM0IsR0FBRyxDQUFDLENBQUUsSUFBSSxRQUFRLElBQUksSUFBSSxDQUFDLElBQUksQ0FBRSxLQUFLLENBQUUsQ0FBQyxPQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ25ELEVBQUUsQ0FBQyxDQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBRSxLQUFLLENBQUUsQ0FBQyxPQUFPLENBQUUsUUFBUSxDQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUMvQyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2QsQ0FBQztRQUNGLENBQUM7UUFDRCxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVPLDZCQUFRLEdBQWhCLFVBQWtCLE1BQWdCO1FBQ2pDLEVBQUUsQ0FBQyxDQUFFLE1BQU0sQ0FBQyxNQUFNLEtBQUssQ0FBRSxDQUFDLENBQUMsQ0FBQztZQUMzQixNQUFNLENBQUM7UUFDUixDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUUsSUFBSSxNQUFNLElBQUksSUFBSSxDQUFDLEtBQU0sQ0FBQyxDQUFDLENBQUM7WUFDakMsSUFBSSxDQUFDLEtBQUssQ0FBRSxNQUFNLENBQUUsQ0FBQyxRQUFRLENBQUUsTUFBTSxDQUFFLENBQUM7UUFDekMsQ0FBQztJQUNGLENBQUM7SUFFTyw2QkFBUSxHQUFoQixVQUFrQixNQUFnQjtRQUNqQyxFQUFFLENBQUMsQ0FBRSxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUUsQ0FBQyxDQUFDLENBQUM7WUFDM0IsTUFBTSxDQUFDO1FBQ1IsQ0FBQztRQUNELEdBQUcsQ0FBQyxDQUFFLElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxLQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxLQUFLLENBQUUsTUFBTSxDQUFFLENBQUMsUUFBUSxDQUFFLE1BQU0sQ0FBRSxDQUFDO1FBQ3pDLENBQUM7SUFDRixDQUFDO0lBRU8sZ0NBQVcsR0FBbkI7UUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFTyxnQ0FBVyxHQUFuQjtRQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFFLEtBQUssQ0FBRSxDQUFDO0lBQ3JDLENBQUM7SUFFTyxtQ0FBYyxHQUF0QixVQUF3QixJQUFvQjtRQUFwQixxQkFBQSxFQUFBLFdBQW9CO1FBRTNDLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxhQUFhLEtBQUssU0FBVSxDQUFDLENBQUMsQ0FBQztZQUN4QyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3RCLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBRSxJQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ1osTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFFLEdBQUcsQ0FBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ25ELENBQUM7UUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUUsR0FBRyxDQUFFLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDcEQsQ0FBQztJQUVGLGlCQUFDO0FBQUQsQ0FuTUEsQUFtTUMsSUFBQTtBQW5NWSxnQ0FBVTs7Ozs7Ozs7Ozs7Ozs7O0FDUnZCLG1DQUFrQztBQUlsQztJQUFvQyxrQ0FBTTtJQUExQztRQUFBLHFFQXlJQztRQS9IUSxzQkFBZ0IsR0FBVyxjQUFjLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQztRQUN6RCxpQkFBVyxHQUFXLENBQUMsQ0FBQzs7SUE4SGpDLENBQUM7SUE1SE8sNkJBQUksR0FBWDtRQUVDLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUM7UUFFdkMsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBRSxRQUFRLENBQUUsQ0FBQztRQUV0QyxFQUFFLENBQUMsQ0FBRSxDQUFDLENBQUUsTUFBTSxLQUFLLFNBQVMsSUFBSSxNQUFNLENBQUMsY0FBYyxDQUFFLEtBQUssQ0FBRSxJQUFJLE1BQU0sQ0FBQyxjQUFjLENBQUUsS0FBSyxDQUFFLENBQUcsQ0FBQyxDQUFDLENBQUM7WUFDckcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNyQixNQUFNLENBQUM7UUFDUixDQUFDO1FBRUQsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBRWhCLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxPQUFPLENBQUUsTUFBTSxDQUFFLElBQUksY0FBYyxDQUFDLFdBQVcsQ0FBRSxJQUFJLENBQUMsT0FBTyxDQUFFLE1BQU0sQ0FBRSxDQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3RGLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFFLE1BQU0sQ0FBRSxDQUFDO1FBQy9CLENBQUM7UUFFRCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsY0FBYyxDQUFDLFdBQVcsQ0FBRSxJQUFJLENBQUUsQ0FBQztRQUUzRCxJQUFJLFFBQVEsR0FBVyxJQUFJLENBQUMsZUFBZSxDQUFFLE1BQU0sQ0FBRSxDQUFDO1FBRXRELElBQUksU0FBUyxHQUFHLFNBQUEsRUFBRSxFQUFJLENBQUUsSUFBSSxDQUFDLEtBQUssQ0FBRSxJQUFJLENBQUMsR0FBRyxDQUFFLFFBQVEsQ0FBRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQSxDQUFDO1FBRTlFLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxPQUFPLENBQUUsS0FBSyxDQUFFLEtBQUssU0FBUyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUUsS0FBSyxDQUFFLEdBQUcsUUFBUyxDQUFDLENBQUMsQ0FBQztZQUMvRSxRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBRSxLQUFLLENBQUUsQ0FBQztRQUNsQyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDUCxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBRSxRQUFRLEdBQUcsU0FBUyxDQUFFLEdBQUcsU0FBUyxDQUFDO1FBQzFELENBQUM7UUFFRCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUUsZUFBZSxDQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBRSxJQUFJLENBQUMsT0FBTyxDQUFFLGVBQWUsQ0FBRSxFQUFFLFFBQVEsQ0FBRSxHQUFHLFFBQVEsQ0FBQztRQUV0SCx3QkFBd0I7UUFDeEIsSUFBSSxjQUFjLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFFOUMsSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFFLHlDQUF5QyxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFFLENBQUM7UUFFM0YsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFFLGlHQUFpRztZQUMvRyw2RkFBNkY7WUFDN0YseUNBQXlDLEdBQUcsUUFBUSxHQUFHLFlBQVk7WUFDbkUsd0RBQXdELEdBQUcsSUFBSSxHQUFHLDRCQUE0QixDQUFFLENBQUM7UUFFbEcsY0FBYyxDQUFDLE1BQU0sQ0FBRSxLQUFLLENBQUUsQ0FBQztRQUUvQixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUUsa0JBQWtCLENBQUUsQ0FBQyxJQUFJLENBQUU7WUFFM0MsS0FBSyxDQUFDLElBQUksQ0FBRSwyQkFBMkIsQ0FBRTtpQkFDeEMsTUFBTSxDQUFFO2dCQUNSLE9BQU8sRUFBRSxJQUFJO2dCQUNiLEdBQUcsRUFBRSxRQUFRO2dCQUNiLEtBQUssRUFBRSxJQUFJLENBQUMsV0FBVztnQkFDdkIsSUFBSSxFQUFFLFNBQVMsR0FBRyxHQUFHO2FBQ3JCLENBQUU7aUJBQ0YsRUFBRSxDQUFFLGFBQWEsRUFBRSxTQUFTLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEVBQUUsVUFBVyxXQUE4QixFQUFFLEVBQU87Z0JBQ3BHLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztnQkFDekIsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFFLFdBQVcsQ0FBRSxDQUFDO1lBQ3hELENBQUMsQ0FBRTtpQkFDRixFQUFFLENBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxVQUFXLFdBQThCLEVBQUUsRUFBTztnQkFDOUYsT0FBTyxDQUFDLElBQUksQ0FBRSxFQUFFLENBQUMsS0FBSyxDQUFFLENBQUM7WUFDMUIsQ0FBQyxDQUFFO2lCQUNGLElBQUksQ0FBRSxtQkFBbUIsQ0FBRTtpQkFDM0IsTUFBTSxDQUFFLE9BQU8sQ0FBRSxDQUFDO1FBRXBCLENBQUMsQ0FBRSxDQUFDO1FBRUosTUFBTSxDQUFDLElBQUksQ0FBQztJQUNiLENBQUM7SUFFTyx3Q0FBZSxHQUF2QixVQUF5QixNQUF1QjtRQUFoRCxpQkFxQkM7UUFuQkEsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN2QyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFFWixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBRS9CLEdBQUcsQ0FBQyxDQUFFLElBQUksS0FBSyxJQUFJLE1BQU8sQ0FBQyxDQUFDLENBQUM7WUFFNUIsRUFBRSxDQUFDLENBQUUsTUFBTSxDQUFFLEtBQUssQ0FBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDNUQsSUFBSSxTQUFTLEdBQWEsTUFBTSxDQUFFLEtBQUssQ0FBRSxDQUFDLElBQUksQ0FBRSxJQUFJLENBQUMsUUFBUSxDQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBRSxVQUFFLEdBQW9CLElBQU0sT0FBQSxLQUFJLENBQUMsUUFBUSxDQUFFLE1BQU0sRUFBRSxHQUFHLENBQUUsRUFBNUIsQ0FBNEIsQ0FBRSxDQUFDO2dCQUMxSSxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxPQUFSLElBQUksRUFBUyxTQUFTLENBQUUsQ0FBQztnQkFFcEMsTUFBTSxDQUFFLEtBQUssQ0FBRSxDQUFDLElBQUksQ0FBRSxJQUFJLENBQUMsUUFBUSxDQUFFLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztnQkFDdEQsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUUsR0FBRyxFQUFFLElBQUksQ0FBRSxDQUFDO1lBQzdCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDUCxNQUFNLENBQUUsS0FBSyxDQUFFLENBQUMsSUFBSSxDQUFFLElBQUksQ0FBQyxRQUFRLENBQUUsQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1lBQzNELENBQUM7UUFDRixDQUFDO1FBRUQsTUFBTSxDQUFDLEdBQUcsQ0FBQztJQUNaLENBQUM7SUFFTSx3Q0FBZSxHQUF0QixVQUF3QixXQUE4QjtRQUNyRCxJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQztRQUM3QyxJQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBRSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUUsQ0FBQztJQUNqRCxDQUFDO0lBRU8saUNBQVEsR0FBaEIsVUFBa0IsQ0FBa0IsRUFBRSxDQUFrQjtRQUV2RCxJQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsRUFBRSxHQUFHLEtBQUssQ0FBQztRQUVoQyxpQkFBa0IsQ0FBUztZQUMxQixNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQTtRQUNiLENBQUM7UUFFRCxJQUFJLENBQUMsR0FDSixPQUFPLENBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBRSxDQUFFLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBRSxHQUFHLE9BQU8sR0FBRyxHQUFHLENBQUUsQ0FBRTtZQUN4RCxJQUFJLENBQUMsR0FBRyxDQUFFLENBQUMsQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBRSxDQUFDLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBRTtnQkFDekQsT0FBTyxDQUFFLElBQUksQ0FBQyxHQUFHLENBQUUsQ0FBRSxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUUsR0FBRyxPQUFPLEdBQUcsR0FBRyxDQUFFLENBQUUsQ0FBQztRQUUxRCxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFFLElBQUksQ0FBQyxJQUFJLENBQUUsQ0FBQyxDQUFFLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBRSxDQUFDLEdBQUcsQ0FBQyxDQUFFLENBQUUsQ0FBQztJQUNyRixDQUFDO0lBRU0sa0NBQVMsR0FBaEIsVUFBa0IsS0FBYTtRQUU5QixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFFLEtBQUssQ0FBRSxDQUFDLElBQUksQ0FBQztRQUV0RCxFQUFFLENBQUMsQ0FBRSxPQUFPLENBQUMsY0FBYyxDQUFFLElBQUksQ0FBQyxRQUFRLENBQUcsQ0FBQyxDQUFDLENBQUM7WUFDL0MsTUFBTSxDQUFDLE9BQU8sQ0FBRSxJQUFJLENBQUMsUUFBUSxDQUFFLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDOUQsQ0FBQztRQUVELE1BQU0sQ0FBQyxpQkFBTSxTQUFTLFlBQUUsS0FBSyxDQUFFLENBQUM7SUFFakMsQ0FBQztJQXJJdUIsMEJBQVcsR0FBOEI7UUFDaEUsQ0FBQyxFQUFFLFNBQVM7UUFDWixFQUFFLEVBQUUsU0FBUztRQUNiLEVBQUUsRUFBRSxTQUFTO1FBQ2IsRUFBRSxFQUFFLFNBQVM7UUFDYixDQUFDLEVBQUUsaUJBQWlCO0tBQ3BCLENBQUM7SUFpSUgscUJBQUM7Q0F6SUQsQUF5SUMsQ0F6SW1DLGVBQU0sR0F5SXpDO0FBeklZLHdDQUFjOzs7OztBQ0QzQjtJQVdDLGdCQUFvQixRQUFnQixFQUFFLE1BQWMsRUFBRSxjQUFzQixFQUFFLFVBQXNCLEVBQUUsT0FBaUI7UUFUL0csZ0JBQVcsR0FBVyxTQUFTLENBQUM7UUFDOUIsV0FBTSxHQUFXLFNBQVMsQ0FBQztRQUkzQixZQUFPLEdBQVksU0FBUyxDQUFDO1FBQzdCLGFBQVEsR0FBWSxLQUFLLENBQUM7UUFDMUIsY0FBUyxHQUFZLEtBQUssQ0FBQztRQUdwQyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQztRQUMxQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVNLHFCQUFJLEdBQVgsY0FBZSxDQUFDO0lBQUEsQ0FBQztJQUVWLDJCQUFVLEdBQWpCO1FBQ0MsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdEIsQ0FBQztJQUVNLHdCQUFPLEdBQWQ7UUFBQSxpQkFVQztRQVRBLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBRXJCLElBQUksQ0FBQyxXQUFXO2FBQ2YsV0FBVyxDQUFFLFNBQVMsQ0FBRTthQUN4QixRQUFRLENBQUUsVUFBVSxDQUFFLENBQUM7UUFFeEIsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBRWhCLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFFLGNBQU0sT0FBQSxLQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBRSxLQUFJLENBQUMsUUFBUSxDQUFFLEVBQWhELENBQWdELENBQUUsQ0FBQztJQUN0RixDQUFDO0lBRU0sdUJBQU0sR0FBYjtRQUFBLGlCQVlDO1FBWEEsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFFdEIsSUFBSSxDQUFDLFdBQVc7YUFDZixXQUFXLENBQUUsVUFBVSxDQUFFO2FBQ3pCLFFBQVEsQ0FBRSxTQUFTLENBQUUsQ0FBQztRQUV2QixFQUFFLENBQUMsQ0FBRSxDQUFFLElBQUksQ0FBQyxTQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNuQixDQUFDO1FBRUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUUsY0FBTSxPQUFBLEtBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUFFLEtBQUksQ0FBQyxRQUFRLENBQUUsRUFBaEQsQ0FBZ0QsQ0FBRSxDQUFDO0lBQ3RGLENBQUM7SUFFTyx5QkFBUSxHQUFoQixVQUFrQixRQUF1QjtRQUF6QyxpQkFnQkM7UUFoQmlCLHlCQUFBLEVBQUEsY0FBdUI7UUFFeEMsRUFBRSxDQUFDLENBQUUsQ0FBRSxJQUFJLENBQUMsU0FBVSxDQUFDLENBQUMsQ0FBQztZQUV4QixJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRTtpQkFDekIsSUFBSSxDQUFFO2dCQUVOLEtBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFFLFFBQVEsQ0FBRSxDQUFDO2dCQUVoQyxLQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBRTtvQkFDekIsYUFBYSxFQUFFLENBQUM7b0JBQ2hCLGdCQUFnQixFQUFFLENBQUM7b0JBQ25CLGVBQWUsRUFBRSxLQUFLO2lCQUN0QixFQUFFLFFBQVEsQ0FBRSxDQUFDO1lBQ2YsQ0FBQyxDQUFFLENBQUM7UUFDTCxDQUFDO0lBQ0YsQ0FBQztJQUVPLDJCQUFVLEdBQWxCO1FBQUEsaUJBWUM7UUFYQSxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRTthQUN6QixJQUFJLENBQUU7WUFDTixLQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBRXhCLElBQUksS0FBSyxHQUFHLEtBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFFLE9BQU8sQ0FBRSxDQUFDO1lBQzdDLEtBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFFLE9BQU8sQ0FBRSxDQUFDO1lBQ3ZDLElBQUksY0FBYyxHQUFHLEtBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFFLENBQUUsYUFBYSxFQUFFLGdCQUFnQixFQUFFLGVBQWUsQ0FBRSxDQUFFLENBQUM7WUFDbEcsS0FBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUUsT0FBTyxFQUFFLEtBQUssQ0FBRSxDQUFDO1lBRXhDLEtBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFFLGNBQWMsQ0FBRSxDQUFDO1FBQzVDLENBQUMsQ0FBRSxDQUFDO0lBQ0wsQ0FBQztJQUVNLDBCQUFTLEdBQWhCLFVBQWtCLEtBQWE7UUFDOUIsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFFLG1CQUFtQixDQUFFLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBRSxtQkFBbUIsQ0FBRSxLQUFLLElBQUksQ0FBQztJQUMzRyxDQUFDO0lBRU0sc0JBQUssR0FBWjtRQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3RCLENBQUM7SUFFUyxrQ0FBaUIsR0FBM0I7UUFFQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBRSx5Q0FBeUMsQ0FBRSxDQUFDO1FBRTdELElBQUksQ0FBQyxXQUFXO2FBQ2YsTUFBTSxDQUFFLElBQUksQ0FBQyxNQUFNLENBQUU7YUFDckIsUUFBUSxDQUFFLFNBQVMsQ0FBRSxDQUFDO1FBRXZCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLHVCQUF1QixFQUFFLENBQUM7UUFFL0IsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDcEIsQ0FBQztJQUVPLHlCQUFRLEdBQWhCO1FBQ0MsMERBQTBEO1FBQzFELElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFFLDBDQUFzQyxJQUFJLENBQUMsT0FBTyxDQUFFLE9BQU8sQ0FBRSxXQUFRLENBQUUsQ0FBQztJQUM3RixDQUFDO0lBRVMsK0JBQWMsR0FBeEI7UUFBQSxpQkF1QkM7UUFyQkEsRUFBRSxDQUFDLENBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUUsVUFBVSxDQUFHLENBQUMsQ0FBQyxDQUFDO1lBRWpELElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUUsVUFBVSxDQUFFLENBQUM7WUFFMUMsRUFBRSxDQUFDLENBQUUsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBRSxRQUFRLEVBQUUsUUFBUSxDQUFFLElBQUksQ0FBRSxDQUFDLENBQUMsQ0FBQztnQkFFbkUsSUFBSSxZQUFZLEdBQUcsQ0FBQyxDQUFFLGdEQUE4QyxDQUFFLENBQUM7Z0JBRXZFLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFFLFlBQVksQ0FBRSxDQUFDO2dCQUVuQyxZQUFZLENBQUMsS0FBSyxDQUFFO29CQUVuQixFQUFFLENBQUMsQ0FBRSxLQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUcsQ0FBQyxDQUFDLENBQUM7d0JBQzdDLEtBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztvQkFDaEIsQ0FBQztvQkFBQyxJQUFJLENBQUMsQ0FBQzt3QkFDUCxLQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7b0JBQ2YsQ0FBQztnQkFFRixDQUFDLENBQUUsQ0FBQztZQUNMLENBQUM7UUFDRixDQUFDO0lBQ0YsQ0FBQztJQUVTLHdDQUF1QixHQUFqQztRQUFBLGlCQXFDQztRQXBDQSxJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBRSxhQUFhLENBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFFLGFBQWEsQ0FBRSxHQUFHLFNBQVMsQ0FBQztRQUMzRyxFQUFFLENBQUMsQ0FBRSxXQUFXLEtBQUssV0FBVyxJQUFJLFdBQVcsS0FBSyxhQUFjLENBQUMsQ0FBQyxDQUFDO1lBRXBFLElBQUksaUJBQWUsR0FBRyxDQUFDLENBQUUseUNBQXlDLENBQUUsQ0FBQztZQUVyRSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBRSxpQkFBZSxDQUFFLENBQUM7WUFFdEMsaUJBQWUsQ0FBQyxLQUFLLENBQUU7Z0JBQ3RCLEVBQUUsQ0FBQyxDQUFFLGlCQUFlLENBQUMsUUFBUSxDQUFFLFdBQVcsQ0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDL0MsS0FBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO29CQUNsQixLQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztvQkFFdkIsaUJBQWU7eUJBQ2QsV0FBVyxDQUFFLFdBQVcsQ0FBRTt5QkFDMUIsUUFBUSxDQUFFLGFBQWEsQ0FBRSxDQUFDO2dCQUM1QixDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNQLEtBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztvQkFDaEIsS0FBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7b0JBRXRCLGlCQUFlO3lCQUNkLFdBQVcsQ0FBRSxhQUFhLENBQUU7eUJBQzVCLFFBQVEsQ0FBRSxXQUFXLENBQUUsQ0FBQztnQkFDMUIsQ0FBQztZQUVGLENBQUMsQ0FBRSxDQUFDO1lBRUosRUFBRSxDQUFDLENBQUUsV0FBVyxLQUFLLFdBQVksQ0FBQyxDQUFDLENBQUM7Z0JBRW5DLElBQUksQ0FBQyxRQUFRLENBQUUsQ0FBQyxDQUFFLENBQUM7Z0JBQ25CLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO2dCQUN0QixpQkFBZSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUV2QyxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ1AsaUJBQWUsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDekMsQ0FBQztRQUNGLENBQUM7SUFDRixDQUFDO0lBRUYsYUFBQztBQUFELENBaExBLEFBZ0xDLElBQUE7QUFoTHFCLHdCQUFNOzs7Ozs7Ozs7Ozs7Ozs7QUNINUIsaUZBQWlGO0FBQ2pGLG1DQUFrQztBQUtsQztJQUFrQyxnQ0FBTTtJQUF4QztRQUFBLHFFQXlSQztRQXZSUSxnQkFBVSxHQUFHLENBQUMsQ0FBQztRQUNmLGNBQVEsR0FBRyxDQUFDLENBQUM7UUFDYixjQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ2IsaUJBQVcsR0FBRyxDQUFDLENBQUM7UUFFaEIsc0JBQWdCLEdBQVcsQ0FBQyxDQUFDO1FBQzdCLHNCQUFnQixHQUFXLENBQUMsQ0FBQztRQUM3QixVQUFJLEdBQUcsS0FBSSxDQUFDLFVBQVUsQ0FBQzs7SUFnUmhDLENBQUM7SUE5UU8sMkJBQUksR0FBWDtRQUVDLElBQUksTUFBTSxHQUFhLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUVwQyxJQUFBLG9DQUFxRSxFQUFuRSxzQkFBUSxFQUFFLHNCQUFRLEVBQUUsd0JBQVMsQ0FBdUM7UUFFMUUsSUFBSSxhQUFhLEdBQTBCO1lBQzFDLGdCQUFnQixFQUFFLEtBQUs7WUFDdkIsV0FBVyxFQUFFLElBQUk7WUFDakIsSUFBSSxFQUFFLElBQUk7U0FDVixDQUFDO1FBRUYsRUFBRSxDQUFDLENBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUUsUUFBUSxDQUFHLENBQUMsQ0FBQyxDQUFDO1lBQy9DLGFBQWEsR0FBRyxJQUFJLENBQUMsNkJBQTZCLENBQUUsYUFBYSxFQUFFLE1BQU0sQ0FBRSxDQUFDO1FBRTdFLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNQLGFBQWEsR0FBRyxJQUFJLENBQUMsc0NBQXNDLENBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsU0FBUyxDQUFFLENBQUM7UUFDN0csQ0FBQztRQUVELE1BQU0sQ0FBQSxDQUFFLElBQUksQ0FBQyxPQUFPLENBQUUsU0FBUyxDQUFHLENBQUMsQ0FBQyxDQUFDO1lBRXBDLEtBQUssS0FBSztnQkFFVCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQzFCLGFBQWEsQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDO2dCQUM5QixLQUFLLENBQUM7WUFFUCxLQUFLLEtBQUs7Z0JBRVQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO2dCQUMxQixhQUFhLENBQUMsSUFBSSxHQUFHLGFBQWEsQ0FBQyxFQUFFLENBQUM7Z0JBQ3RDLGFBQWEsQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDO2dCQUM5QixLQUFLLENBQUM7WUFFUCxLQUFLLFFBQVE7Z0JBRVosSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO2dCQUM3QixRQUFRLEdBQUcsUUFBUSxDQUFDO2dCQUNwQixhQUFhLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQztnQkFDOUIsS0FBSyxDQUFDO1lBRVAsUUFBUyxrQkFBa0I7Z0JBRTFCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztnQkFDNUIsYUFBYSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUM7UUFDaEMsQ0FBQztRQUVELElBQUksQ0FBQyxtQkFBbUIsQ0FBRSxhQUFhLENBQUUsQ0FBQztRQUUxQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsUUFBUSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxRQUFRLENBQUM7UUFFakMsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNiLENBQUM7SUFFTyw2REFBc0MsR0FBOUMsVUFBZ0QsYUFBb0MsRUFBRSxRQUFnQixFQUFFLFFBQWdCLEVBQUUsU0FBaUI7UUFBM0ksaUJBYUM7UUFYQSxhQUFhLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQztRQUM3QixhQUFhLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQztRQUM3QixhQUFhLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUUsU0FBUyxDQUFFLENBQUM7UUFDL0MsYUFBYSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFFLENBQUUsUUFBUSxHQUFHLFFBQVEsQ0FBRSxHQUFHLGFBQWEsQ0FBQyxJQUFJLENBQUUsQ0FBRSxDQUFDO1FBRW5HLGFBQWEsQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDO1FBQzlCLGFBQWEsQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDO1FBRTVCLGFBQWEsQ0FBQyxRQUFRLEdBQUcsVUFBRSxJQUF5QixJQUFNLE9BQUEsS0FBSSxDQUFDLGVBQWUsQ0FBRSxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUUsRUFBMUMsQ0FBMEMsQ0FBQztRQUVyRyxNQUFNLENBQUMsYUFBYSxDQUFDO0lBQ3RCLENBQUM7SUFFTyxvREFBNkIsR0FBckMsVUFBdUMsYUFBb0MsRUFBRSxNQUFnQjtRQUE3RixpQkFVQztRQVJBLGFBQWEsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBRTlCLGFBQWEsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLGFBQWEsQ0FBQyxFQUFFLEdBQUcsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFFckMsYUFBYSxDQUFDLFFBQVEsR0FBRyxVQUFFLElBQXlCLElBQU0sT0FBQSxLQUFJLENBQUMsZUFBZSxDQUFFLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBRSxFQUF0RCxDQUFzRCxDQUFDO1FBRWpILE1BQU0sQ0FBQyxhQUFhLENBQUM7SUFDdEIsQ0FBQztJQUVPLHlDQUFrQixHQUExQixVQUE0QixNQUFnQjtRQUUzQyxJQUFJLFFBQVEsR0FBRyxNQUFNLENBQUUsQ0FBQyxDQUFFLENBQUM7UUFDM0IsSUFBSSxRQUFRLEdBQUcsTUFBTSxDQUFFLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFFLENBQUM7UUFDM0MsSUFBSSxTQUFTLEdBQVcsSUFBSSxDQUFDLFlBQVksQ0FBRSxRQUFRLEVBQUUsUUFBUSxDQUFFLENBQUM7UUFFaEUsRUFBRSxDQUFDLENBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBRSxRQUFRLENBQUcsQ0FBQyxDQUFDLENBQUM7WUFDaEQsUUFBUSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBRSxRQUFRLEVBQUUsU0FBUyxDQUFFLENBQUM7WUFDekQsUUFBUSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBRSxRQUFRLEVBQUUsU0FBUyxDQUFFLENBQUM7UUFDMUQsQ0FBQztRQUVELE1BQU0sQ0FBQyxFQUFFLFFBQVEsVUFBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLFNBQVMsV0FBQSxFQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVPLGdDQUFTLEdBQWpCO1FBQ0MsSUFBSSxNQUFnQixDQUFDO1FBQ3JCLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFFLFFBQVEsQ0FBRSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUUsUUFBUSxDQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssTUFBTyxDQUFDLENBQUMsQ0FBQztZQUN6RixNQUFNLEdBQUksSUFBSSxDQUFDLE9BQU8sQ0FBRSxRQUFRLENBQUUsQ0FBQTtRQUNuQyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDUCxNQUFNLEdBQUksSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ2xDLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBRSxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUUsQ0FBQyxDQUFDLENBQUM7WUFDM0IsTUFBTSxHQUFHLENBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBRSxDQUFDO1FBQ25CLENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUUsTUFBTSxDQUFDLE1BQU0sS0FBSyxDQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ2xDLE1BQU0sQ0FBQyxJQUFJLENBQUUsTUFBTSxDQUFFLENBQUMsQ0FBRSxDQUFFLENBQUM7UUFDNUIsQ0FBQztRQUVELE1BQU0sQ0FBQyxNQUFNLENBQUM7SUFDZixDQUFDO0lBRU8sMENBQW1CLEdBQTNCLFVBQTZCLGFBQW9DO1FBRWhFLElBQUksZ0JBQWdCLEdBQVEsRUFBRSxDQUFDO1FBQy9CLGdCQUFnQixDQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUUsR0FBRyxVQUFVLENBQUM7UUFDMUQsZ0JBQWdCLENBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBRSxHQUFHLFVBQVUsQ0FBQztRQUMvQyxnQkFBZ0IsQ0FBRSxJQUFJLENBQUMsVUFBVSxDQUFFLEdBQUcsWUFBWSxDQUFDO1FBQ25ELGdCQUFnQixDQUFFLElBQUksQ0FBQyxXQUFXLENBQUUsR0FBRyxhQUFhLENBQUM7UUFFckQsSUFBSSxjQUFjLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFFOUMsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFFLGdDQUFnQyxDQUFFLENBQUM7UUFDbkQsSUFBSSxlQUFlLEdBQUcsQ0FBQyxDQUFFLHlDQUFzQyxnQkFBZ0IsQ0FBRSxJQUFJLENBQUMsSUFBSSxDQUFFLFVBQU0sQ0FBRSxDQUFDLE1BQU0sQ0FBRSxNQUFNLENBQUUsQ0FBQztRQUN0SCxjQUFjLENBQUMsTUFBTSxDQUFFLGVBQWUsQ0FBRSxDQUFDO1FBRXpDLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFFLFNBQVMsQ0FBRyxDQUFDLENBQUMsQ0FBQztZQUNoRCxJQUFJLE9BQU8sR0FBRyw0Q0FBd0MsSUFBSSxDQUFDLE9BQU8sQ0FBRSxTQUFTLENBQUUsV0FBUSxDQUFDO1lBQ3hGLGNBQWMsQ0FBQyxNQUFNLENBQUUsT0FBTyxDQUFFLENBQUM7UUFDbEMsQ0FBQztRQUVELEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFFLHlCQUF5QixDQUFFLENBQUMsSUFBSSxDQUFFLGNBQU0sT0FBQSxNQUFNLENBQUMsY0FBYyxDQUFFLGFBQWEsQ0FBRSxFQUF0QyxDQUFzQyxDQUFFLENBQUM7SUFDbkcsQ0FBQztJQUVPLHdDQUFpQixHQUF6QixVQUEyQixRQUFnQixFQUFFLFNBQWlCO1FBQzdELElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUUsS0FBSyxDQUFFLENBQUM7UUFFekMsRUFBRSxDQUFDLENBQUUsWUFBWSxLQUFLLFNBQVMsSUFBSSxLQUFLLENBQUUsTUFBTSxDQUFFLFlBQVksQ0FBRSxDQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3JFLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFFLFFBQVEsR0FBRyxTQUFTLENBQUUsR0FBRyxTQUFTLENBQUM7UUFDdkQsQ0FBQztRQUVELE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFFLFlBQVksRUFBRSxRQUFRLENBQUUsQ0FBQztJQUMzQyxDQUFDO0lBRU8sd0NBQWlCLEdBQXpCLFVBQTJCLFFBQWdCLEVBQUUsU0FBaUI7UUFDN0QsSUFBSSxZQUFZLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBRSxLQUFLLENBQUUsQ0FBQztRQUV6QyxFQUFFLENBQUMsQ0FBRSxZQUFZLEtBQUssU0FBUyxJQUFJLEtBQUssQ0FBRSxNQUFNLENBQUUsWUFBWSxDQUFFLENBQUcsQ0FBQyxDQUFDLENBQUM7WUFDckUsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUUsUUFBUSxHQUFHLFNBQVMsQ0FBRSxHQUFHLFNBQVMsQ0FBQztRQUN0RCxDQUFDO1FBRUQsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUUsWUFBWSxFQUFFLFFBQVEsQ0FBRSxDQUFDO0lBQzNDLENBQUM7SUFFTyxtQ0FBWSxHQUFwQixVQUFzQixRQUFnQixFQUFFLFFBQWdCO1FBQ3ZELEVBQUUsQ0FBQyxDQUFFLFFBQVEsR0FBRyxRQUFRLEdBQUcsQ0FBRSxDQUFDLENBQUMsQ0FBQztZQUMvQixNQUFNLENBQUMsU0FBQSxFQUFFLEVBQUksQ0FBRSxJQUFJLENBQUMsS0FBSyxDQUFFLElBQUksQ0FBQyxHQUFHLENBQUUsUUFBUSxHQUFHLFFBQVEsQ0FBRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUUsR0FBRyxDQUFDLENBQUUsQ0FBQSxDQUFDO1FBQ2xGLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNQLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDVixDQUFDO0lBQ0YsQ0FBQztJQUVPLDhCQUFPLEdBQWYsVUFBaUIsU0FBaUI7UUFFakMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBRSxNQUFNLENBQUUsQ0FBQztRQUVsQyxFQUFFLENBQUMsQ0FBRSxJQUFJLEtBQUssU0FBVSxDQUFDLENBQUMsQ0FBQztZQUUxQixJQUFJLEdBQUcsTUFBTSxDQUFFLElBQUksQ0FBRSxDQUFDO1lBRXRCLEVBQUUsQ0FBQyxDQUFFLENBQUMsS0FBSyxDQUFFLElBQUksQ0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDdEIsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNiLENBQUM7UUFDRixDQUFDO1FBRUQsTUFBTSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVPLHlDQUFrQixHQUExQjtRQUVDLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDckMsSUFBSSxHQUFHLEdBQUcsUUFBUSxDQUFDO1FBQ25CLElBQUksR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDO1FBRXBCLEdBQUcsQ0FBQyxDQUFFLElBQUksS0FBSyxJQUFJLElBQUssQ0FBQyxDQUFDLENBQUM7WUFFMUIsRUFBRSxDQUFDLENBQUUsSUFBSSxDQUFFLEtBQUssQ0FBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDMUQsSUFBSSxNQUFNLEdBQWEsSUFBSSxDQUFFLEtBQUssQ0FBRSxDQUFDLElBQUksQ0FBRSxJQUFJLENBQUMsUUFBUSxDQUFFLENBQUMsTUFBTSxDQUFDO2dCQUNsRSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsT0FBUixJQUFJLEdBQU0sR0FBRyxTQUFLLE1BQU0sRUFBRSxDQUFDO2dCQUNqQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsT0FBUixJQUFJLEdBQU0sR0FBRyxTQUFLLE1BQU0sRUFBRSxDQUFDO1lBQ2xDLENBQUM7UUFDRixDQUFDO1FBRUQsTUFBTSxDQUFDLENBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBRSxDQUFDO0lBQ3JCLENBQUM7SUFFTyxzQ0FBZSxHQUF2QjtRQUVDLElBQUksVUFBVSxHQUFhLEVBQUUsQ0FBQztRQUM5QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBRXJDLEdBQUcsQ0FBQyxDQUFFLElBQUksS0FBSyxJQUFJLElBQUssQ0FBQyxDQUFDLENBQUM7WUFFMUIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFFLEtBQUssQ0FBRSxDQUFDLElBQUksQ0FBQztZQUUvQixFQUFFLENBQUMsQ0FBRSxLQUFLLENBQUMsY0FBYyxDQUFFLElBQUksQ0FBQyxRQUFRLENBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBRTdDLElBQUksTUFBTSxHQUFHLEtBQUssQ0FBRSxJQUFJLENBQUMsUUFBUSxDQUFFLENBQUMsTUFBTSxDQUFDO2dCQUUzQyxHQUFHLENBQUMsQ0FBRSxJQUFJLE9BQU8sSUFBSSxNQUFPLENBQUMsQ0FBQyxDQUFDO29CQUU5QixJQUFJLEtBQUssR0FBRyxNQUFNLENBQUUsTUFBTSxDQUFFLE9BQU8sQ0FBRSxDQUFFLENBQUM7b0JBRXhDLEVBQUUsQ0FBQyxDQUFFLFVBQVUsQ0FBQyxPQUFPLENBQUUsS0FBSyxDQUFFLEtBQUssQ0FBQyxDQUFFLENBQUMsQ0FBQyxDQUFDO3dCQUMxQyxVQUFVLENBQUMsSUFBSSxDQUFFLEtBQUssQ0FBRSxDQUFDO29CQUMxQixDQUFDO2dCQUNGLENBQUM7WUFDRixDQUFDO1FBQ0YsQ0FBQztRQUVELE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFFLFVBQUUsQ0FBTSxFQUFFLENBQU0sSUFBTSxPQUFBLENBQUMsR0FBRyxDQUFDLEVBQUwsQ0FBSyxDQUFFLENBQUM7SUFDdkQsQ0FBQztJQUVNLHNDQUFlLEdBQXRCLFVBQXdCLElBQVksRUFBRSxFQUFVO1FBRS9DLE1BQU0sQ0FBQyxDQUFFLElBQUksQ0FBQyxJQUFLLENBQUMsQ0FBQyxDQUFDO1lBRXJCLEtBQUssSUFBSSxDQUFDLFFBQVE7Z0JBRWpCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7Z0JBQzdCLEtBQUssQ0FBQztZQUVQLEtBQUssSUFBSSxDQUFDLFFBQVE7Z0JBRWpCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7Z0JBQzdCLEtBQUssQ0FBQztZQUVQLEtBQUssSUFBSSxDQUFDLFdBQVc7Z0JBRXBCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7Z0JBQzdCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7Z0JBQzdCLEtBQUssQ0FBQztZQUVQLFFBQVMsd0JBQXdCO2dCQUVoQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDO2dCQUM3QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO1FBQzdCLENBQUM7UUFFRCxJQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBRSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUUsQ0FBQztJQUNqRCxDQUFDO0lBRU0sZ0NBQVMsR0FBaEIsVUFBa0IsS0FBYTtRQUM5QixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFFLEtBQUssQ0FBRSxDQUFDLElBQUksQ0FBQztRQUV0RCxFQUFFLENBQUMsQ0FBRSxPQUFPLENBQUMsY0FBYyxDQUFFLElBQUksQ0FBQyxRQUFRLENBQUUsSUFBSSxPQUFPLENBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBRSxDQUFDLENBQUMsQ0FBQztZQUU3RixHQUFHLENBQUMsQ0FBZSxVQUErQixFQUEvQixLQUFBLE9BQU8sQ0FBRSxJQUFJLENBQUMsUUFBUSxDQUFFLENBQUMsTUFBTSxFQUEvQixjQUErQixFQUEvQixJQUErQjtnQkFBNUMsSUFBSSxLQUFLLFNBQUE7Z0JBQ2QsRUFBRSxDQUFDLENBQUUsS0FBSyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxLQUFLLElBQUksSUFBSSxDQUFDLGdCQUFpQixDQUFDLENBQUMsQ0FBQztvQkFDeEUsTUFBTSxDQUFDLElBQUksQ0FBQztnQkFDYixDQUFDO2FBQ0Q7WUFFRCxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQ2QsQ0FBQztRQUVELE1BQU0sQ0FBQyxpQkFBTSxTQUFTLFlBQUUsS0FBSyxDQUFFLENBQUM7SUFDakMsQ0FBQztJQUVGLG1CQUFDO0FBQUQsQ0F6UkEsQUF5UkMsQ0F6UmlDLGVBQU0sR0F5UnZDO0FBelJZLG9DQUFZOzs7O0FDTnpCLHlFQUF5RTs7Ozs7Ozs7Ozs7O0FBRXpFLG1DQUFrQztBQUlsQztJQUFpQywrQkFBTTtJQUF2QztRQUFBLHFFQXVPQztRQXJPUSxZQUFNLEdBQVEsRUFBRSxDQUFDO1FBQ2pCLG1CQUFhLEdBQWEsRUFBRSxDQUFDO1FBRTdCLFlBQU0sR0FBRyxJQUFJLENBQUM7O0lBa092QixDQUFDO0lBaE9PLDBCQUFJLEdBQVg7UUFDQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUNyQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVNLDJCQUFLLEdBQVosVUFBYyxLQUFjO1FBQzNCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBRSxDQUFDO0lBQ2pELENBQUM7SUFFTyxxQ0FBZSxHQUF2QjtRQUVDLDRDQUE0QztRQUM1QyxJQUFJLGNBQWMsR0FBUSxFQUFFLENBQUM7UUFDN0IsaURBQWlEO1FBQ2pELElBQUksa0JBQWtCLEdBQVEsRUFBRSxDQUFDO1FBRWpDLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFFLFFBQVEsQ0FBRyxDQUFDLENBQUMsQ0FBQztZQUUvQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBRSxRQUFRLENBQUUsQ0FBQyxHQUFHLENBQ2xDLFVBQUUsSUFBWTtnQkFDYixNQUFNLENBQUM7b0JBQ04sYUFBYSxFQUFFLElBQUk7b0JBQ25CLGNBQWMsRUFBRSxJQUFJO2lCQUNwQixDQUFDO1lBQ0gsQ0FBQyxDQUNELENBQUM7UUFFSCxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDUCwwREFBMEQ7WUFDMUQsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNyQyxJQUFJLGFBQWEsR0FBVSxFQUFFLENBQUM7WUFDOUIsR0FBRyxDQUFDLENBQUUsSUFBSSxFQUFFLElBQUksSUFBSyxDQUFDLENBQUMsQ0FBQztnQkFFdkIsSUFBSSxjQUFjLEdBQVEsSUFBSSxDQUFFLEVBQUUsQ0FBRSxDQUFFLFdBQVcsQ0FBRSxDQUFFLElBQUksQ0FBQyxjQUFjLENBQUUsQ0FBRSxRQUFRLENBQUUsQ0FBQztnQkFDdkYsSUFBSSx1QkFBdUIsR0FBRyxJQUFJLENBQUUsRUFBRSxDQUFFLENBQUUsV0FBVyxDQUFFLENBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBRSxDQUFFLGtCQUFrQixDQUFFLENBQUM7Z0JBQ3JHLElBQUksa0JBQWtCLEdBQVEsSUFBSSxDQUFFLEVBQUUsQ0FBRSxDQUFFLFdBQVcsQ0FBRSxDQUFFLElBQUksQ0FBQyxjQUFjLENBQUUsQ0FBRSxhQUFhLENBQUUsQ0FBQztnQkFFaEcsR0FBRyxDQUFDLENBQUUsSUFBSSxDQUFDLElBQUksY0FBZSxDQUFDLENBQUMsQ0FBQztvQkFDaEMsSUFBSSxzQkFBc0IsR0FBRyx1QkFBdUIsQ0FBRSxDQUFDLENBQUUsQ0FBQztvQkFFMUQsRUFBRSxDQUFDLENBQUUsc0JBQXNCLENBQUMsT0FBTyxDQUFFLElBQUksQ0FBRSxHQUFHLENBQUMsQ0FBRSxDQUFDLENBQUMsQ0FBQzt3QkFDbkQsc0JBQXNCLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFFLHNCQUFzQixDQUFFLENBQUUsQ0FBQyxDQUFFLENBQUM7b0JBQ2hGLENBQUM7b0JBRUQsY0FBYyxDQUFFLGNBQWMsQ0FBRSxDQUFDLENBQUUsQ0FBRSxHQUFHLHNCQUFzQixDQUFDO29CQUMvRCxrQkFBa0IsQ0FBRSxjQUFjLENBQUUsQ0FBQyxDQUFFLENBQUUsR0FBRyxrQkFBa0IsQ0FBRSxDQUFDLENBQUUsQ0FBQztnQkFDckUsQ0FBQztZQUVGLENBQUM7WUFFRCxHQUFHLENBQUMsQ0FBRSxJQUFJLGFBQWEsSUFBSSxrQkFBbUIsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hELGFBQWEsQ0FBQyxJQUFJLENBQUU7b0JBQ25CLGFBQWEsRUFBRSxhQUFhO29CQUM1QixTQUFTLEVBQUUsa0JBQWtCLENBQUUsYUFBYSxDQUFFO29CQUM5QyxjQUFjLEVBQUUsY0FBYyxDQUFFLGFBQWEsQ0FBRTtpQkFDL0MsQ0FBRSxDQUFDO1lBQ0wsQ0FBQztZQUVELGFBQWEsQ0FBQyxJQUFJLENBQ2pCLFVBQUUsQ0FBTSxFQUFFLENBQU07Z0JBQ2YsTUFBTSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFFLENBQUMsQ0FBQyxTQUFTLENBQUUsQ0FBQztZQUNqRCxDQUFDLENBQUUsQ0FBQztZQUNMLE1BQU0sQ0FBQyxhQUFhLENBQUM7UUFFdEIsQ0FBQztJQUVGLENBQUM7SUFFTyxrQ0FBWSxHQUFwQjtRQUVDLElBQUksY0FBYyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBRTlDLGNBQWMsR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUUsY0FBYyxDQUFFLENBQUM7UUFFOUQsSUFBSSxhQUFhLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUUsZ0JBQWdCLENBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFFLGdCQUFnQixDQUFFLEdBQUcsQ0FBQyxDQUFDO1FBRTNHLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLGFBQWMsQ0FBQyxDQUFDLENBQUM7WUFDMUMsY0FBYyxDQUFDLE1BQU0sQ0FBRSxJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBRSxDQUFDO1FBQ3JELENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNQLGNBQWMsQ0FBQyxNQUFNLENBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUUsQ0FBQztRQUN0RCxDQUFDO0lBRUYsQ0FBQztJQUVPLDBDQUFvQixHQUE1QjtRQUFBLGlCQWlCQztRQWZBLElBQUksVUFBVSxHQUFHLENBQUMsQ0FBRSw4REFBOEQsQ0FBRSxDQUFDO1FBRXJGLHlDQUF5QztRQUN6QyxHQUFHLENBQUMsQ0FBZSxVQUFXLEVBQVgsS0FBQSxJQUFJLENBQUMsTUFBTSxFQUFYLGNBQVcsRUFBWCxJQUFXO1lBQXhCLElBQUksS0FBSyxTQUFBO1lBQ2QsVUFBVSxDQUFDLE1BQU0sQ0FBRSxrRkFBMkUsS0FBSyxDQUFDLGFBQWEsd0RBQStDLEtBQUssQ0FBQyxjQUFjLElBQUksS0FBSyxDQUFDLGFBQWEsMEJBQXNCLENBQUUsQ0FBQztTQUNwTztRQUVELHVCQUF1QjtRQUN2QixVQUFVO2FBQ1QsRUFBRSxDQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsVUFBRSxXQUE4QjtZQUMzRCxJQUFJLGVBQWUsR0FBc0IsV0FBVyxDQUFDLGFBQWEsQ0FBQztZQUNuRSxLQUFJLENBQUMsZUFBZSxDQUFFLGVBQWUsQ0FBQyxLQUFLLEVBQUUsZUFBZSxDQUFDLE9BQU8sQ0FBRSxDQUFDO1FBQ3hFLENBQUMsQ0FBRSxDQUFDO1FBRUosTUFBTSxDQUFDLFVBQVUsQ0FBQztJQUNuQixDQUFDO0lBRU8seUNBQW1CLEdBQTNCO1FBQUEsaUJBaUNDO1FBL0JBLElBQUksTUFBTSxHQUFHLENBQUMsQ0FBRSw2REFBNkQsQ0FBRSxDQUFDO1FBRWhGLElBQUksSUFBSSxHQUFpQixFQUFFLENBQUM7UUFFNUIsbUVBQW1FO1FBQ25FLEdBQUcsQ0FBQyxDQUFlLFVBQVcsRUFBWCxLQUFBLElBQUksQ0FBQyxNQUFNLEVBQVgsY0FBVyxFQUFYLElBQVc7WUFBeEIsSUFBSSxLQUFLLFNBQUE7WUFDZCxpREFBaUQ7WUFDakQsSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQztZQUNoQyxJQUFJLENBQUMsSUFBSSxDQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxhQUFhLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFFLENBQUM7U0FFdEQ7UUFFRCxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBRSxzQ0FBc0MsQ0FBRSxDQUFDLElBQUksQ0FBRTtZQUUvRCxNQUFNLENBQUMsT0FBTyxDQUFFO2dCQUNmLFFBQVEsRUFBRSxJQUFJO2dCQUNkLFdBQVcsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFFLHVDQUF1QyxDQUFFLENBQUMsSUFBSSxFQUFFO2dCQUN6RSxJQUFJLEVBQUUsSUFBSTthQUNWLENBQUUsQ0FBQztZQUVKLE1BQU0sQ0FBQyxFQUFFLENBQUUsZ0JBQWdCLEVBQUUsVUFBRSxDQUFNO2dCQUNwQyxLQUFJLENBQUMsZUFBZSxDQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUUsQ0FBQztZQUNoRCxDQUFDLENBQUUsQ0FBQztZQUVKLE1BQU0sQ0FBQyxFQUFFLENBQUUsa0JBQWtCLEVBQUUsVUFBRSxDQUFNO2dCQUN0QyxLQUFJLENBQUMsZUFBZSxDQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUUsQ0FBQztZQUNqRCxDQUFDLENBQUUsQ0FBQztRQUVMLENBQUMsQ0FBRSxDQUFDO1FBRUosTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNmLENBQUM7SUFFTywyQ0FBcUIsR0FBN0IsVUFBK0IsY0FBc0I7UUFDcEQsa0JBQWtCO1FBQ2xCLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFFLFVBQVUsQ0FBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUUsVUFBVSxDQUFFLEdBQUcsU0FBUyxDQUFDO1FBRWxHLEVBQUUsQ0FBQyxDQUFFLFFBQVEsS0FBSyxTQUFTLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBRSxRQUFRLEVBQUUsUUFBUSxDQUFFLElBQUksQ0FBRSxDQUFDLENBQUMsQ0FBQztZQUV0RSxJQUFJLGNBQWMsR0FBRyxDQUFDLENBQUUsdUNBQXVDLENBQUUsQ0FBQztZQUVsRSxJQUFJLFlBQVksR0FBRyxDQUFDLENBQUUsb0NBQW9DLENBQUUsQ0FBQztZQUU3RCxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFFLElBQUksRUFBRSxJQUFJLENBQUUsQ0FBQztZQUNuRCxJQUFJLFVBQVUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFFLEtBQUssQ0FBRSxDQUFDO1lBRS9DLFlBQVk7aUJBQ1gsTUFBTSxDQUFFLFNBQVMsQ0FBRTtpQkFDbkIsTUFBTSxDQUFFLFVBQVUsQ0FBRTtpQkFDcEIsUUFBUSxDQUFFLGNBQWMsQ0FBRSxDQUFDO1lBRTVCLFlBQVk7aUJBQ1gsSUFBSSxDQUFFLE9BQU8sQ0FBRTtpQkFDZixFQUFFLENBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxVQUFFLFdBQThCO2dCQUM3RSxPQUFBLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBRSxXQUFXLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBRSxPQUFPLENBQUUsS0FBSyxJQUFJLENBQUU7WUFBcEYsQ0FBb0YsQ0FDcEYsQ0FBQztZQUdGLGNBQWMsQ0FBQyxNQUFNLENBQUUsY0FBYyxDQUFFLENBQUM7UUFDekMsQ0FBQztRQUVELE1BQU0sQ0FBQyxjQUFjLENBQUM7SUFDdkIsQ0FBQztJQUVPLHFDQUFlLEdBQXZCLFVBQXlCLElBQVksRUFBRSxTQUEwQjtRQUExQiwwQkFBQSxFQUFBLGlCQUEwQjtRQUVoRSxJQUFJLFdBQVcsR0FBRyxTQUFTLEdBQUMsU0FBUyxHQUFDLEVBQUUsQ0FBQztRQUN6QyxJQUFJLFNBQVMsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFFLDRCQUE0QixHQUFHLElBQUksQ0FBRSxDQUFDLElBQUksRUFBRSxDQUFDO1FBRXpFLElBQUksV0FBVyxHQUNkLGlDQUE4QixJQUFJLFNBQUksSUFBSSxDQUFDLGNBQWMsUUFBSTthQUM3RCxpREFBNEMsSUFBSSxDQUFDLGNBQWMsbUNBQTRCLElBQUksK0JBQXdCLElBQUksU0FBSSxJQUFJLENBQUMsY0FBYyxtQkFBWSxJQUFJLFdBQUssV0FBVyxNQUFHLENBQUE7YUFDbEwsU0FBUyxhQUFVLENBQUEsQ0FBQztRQUV4QixNQUFNLENBQUMsQ0FBQyxDQUFFLFdBQVcsQ0FBRSxDQUFDO0lBQ3pCLENBQUM7SUFFTSwrQkFBUyxHQUFoQixVQUFrQixLQUFhO1FBRTlCLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxLQUFLLENBQUUsQ0FBQyxDQUFDLENBQUM7WUFDdkMsTUFBTSxDQUFDLElBQUksQ0FBQztRQUNiLENBQUM7UUFFRCxJQUFJLE1BQU0sR0FBYSxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFFLEtBQUssQ0FBRSxDQUFDLFNBQVMsQ0FBRSxJQUFJLENBQUMsY0FBYyxDQUFFLENBQUMsTUFBTSxDQUFDO1FBRWxHLEVBQUUsQ0FBQyxDQUFFLE1BQU0sQ0FBQyxNQUFNLEtBQUssQ0FBRSxDQUFDLENBQUMsQ0FBQztZQUMzQixNQUFNLENBQUMsaUJBQU0sU0FBUyxZQUFFLEtBQUssQ0FBRSxDQUFDO1FBQ2pDLENBQUM7UUFHRCxFQUFFLENBQUMsQ0FBRSxJQUFJLENBQUMsTUFBTyxDQUFDLENBQUMsQ0FBQztZQUNuQixHQUFHLENBQUMsQ0FBdUIsVUFBa0IsRUFBbEIsS0FBQSxJQUFJLENBQUMsYUFBYSxFQUFsQixjQUFrQixFQUFsQixJQUFrQjtnQkFBdkMsSUFBSSxhQUFhLFNBQUE7Z0JBQ3RCLEVBQUUsQ0FBQyxDQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUUsYUFBYSxDQUFFLElBQUksQ0FBRSxDQUFDLENBQUMsQ0FBQztvQkFDNUMsTUFBTSxDQUFDLElBQUksQ0FBQztnQkFDYixDQUFDO2FBQ0Q7WUFDRCxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQ2QsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ1AsR0FBRyxDQUFDLENBQXVCLFVBQWtCLEVBQWxCLEtBQUEsSUFBSSxDQUFDLGFBQWEsRUFBbEIsY0FBa0IsRUFBbEIsSUFBa0I7Z0JBQXZDLElBQUksYUFBYSxTQUFBO2dCQUN0QixFQUFFLENBQUMsQ0FBRSxNQUFNLENBQUMsT0FBTyxDQUFFLGFBQWEsQ0FBRSxHQUFHLENBQUUsQ0FBQyxDQUFDLENBQUM7b0JBQzNDLE1BQU0sQ0FBQyxLQUFLLENBQUM7Z0JBQ2QsQ0FBQzthQUNEO1lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQztRQUNiLENBQUM7SUFDRixDQUFDO0lBRU0scUNBQWUsR0FBdEIsVUFBd0IsS0FBYSxFQUFFLFNBQWtCO1FBQ3hELElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFFLEtBQUssQ0FBRSxDQUFDO1FBRWhELEVBQUUsQ0FBQyxDQUFFLFNBQVMsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFFLEtBQUssQ0FBRSxDQUFDO1FBQ2xDLENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUUsQ0FBQyxTQUFTLElBQUksS0FBSyxJQUFJLENBQUUsQ0FBQyxDQUFDLENBQUM7WUFDdkMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUUsS0FBSyxFQUFFLENBQUMsQ0FBRSxDQUFDO1FBQ3ZDLENBQUM7UUFFRCxJQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBRSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUUsQ0FBQztJQUNqRCxDQUFDO0lBQ0Ysa0JBQUM7QUFBRCxDQXZPQSxBQXVPQyxDQXZPZ0MsZUFBTSxHQXVPdEM7QUF2T1ksa0NBQVc7Ozs7O0FDTHhCLDJDQUEwQztBQUMxQywrQ0FBOEM7QUFDOUMsb0NBQW1DO0FBQ25DLDRDQUEyQztBQUMzQyw4Q0FBNkM7QUFDN0MsMENBQXlDO0FBQ3pDLG9EQUFtRDtBQUVuRCxvREFBbUQ7QUFDbkQsMERBQXlEO0FBQ3pELHNEQUFxRDtBQUVyRDs7OztHQUlHO0FBQ0g7SUFrQkM7Ozs7T0FJRztJQUNILGtCQUFvQixNQUFjLEVBQUUsTUFBVztRQWxCdkMsY0FBUyxHQUF3RztZQUN4SCxLQUFLLEVBQUUscUJBQVM7WUFDaEIsSUFBSSxFQUFFLG1CQUFRO1lBQ2QsR0FBRyxFQUFFLGlCQUFPO1lBQ1osUUFBUSxFQUFFLDJCQUFZO1NBQ3RCLENBQUM7UUFFTSxnQkFBVyxHQUFzSTtZQUN4SixLQUFLLEVBQUUseUJBQVc7WUFDbEIsUUFBUSxFQUFFLCtCQUFjO1lBQ3hCLE1BQU0sRUFBRSwyQkFBWTtTQUNwQixDQUFDO1FBUUQsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdEIsQ0FBQztJQUVNLHNCQUFHLEdBQVY7UUFFQyxJQUFJLFVBQVUsR0FBRyxJQUFJLHVCQUFVLENBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBRSxDQUFDO1FBRTVGLElBQUksQ0FBQyxhQUFhLENBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFFLHNCQUFzQixDQUFFLENBQUUsQ0FBQztRQUNqRixJQUFJLENBQUMsa0JBQWtCLENBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFFLHdDQUF3QyxDQUFFLENBQUUsQ0FBQztRQUNwRyxJQUFJLENBQUMsV0FBVyxDQUFFLFVBQVUsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBRSw4QkFBOEIsQ0FBRSxDQUFFLENBQUM7UUFFbkYsV0FBVztRQUNYLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUVuQixDQUFDO0lBRU8sZ0NBQWEsR0FBckIsVUFBdUIsVUFBc0IsRUFBRSxnQkFBd0I7UUFFdEUsR0FBRyxDQUFDLENBQUUsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFjLENBQUMsQ0FBQyxDQUFDO1lBRTlDLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFFLElBQUksQ0FBRSxDQUFDO1lBRTNDLEVBQUUsQ0FBQyxDQUFFLEVBQUUsQ0FBQyxjQUFjLENBQUUsU0FBUyxDQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUV0QyxHQUFHLENBQUMsQ0FBRSxJQUFJLFFBQVEsSUFBSSxFQUFFLENBQUMsT0FBUSxDQUFDLENBQUMsQ0FBQztvQkFFbkMsRUFBRSxDQUFDLENBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUUsUUFBUSxDQUFFO3dCQUN6QyxFQUFFLENBQUMsT0FBTyxDQUFFLFFBQVEsQ0FBRSxDQUFDLGNBQWMsQ0FBRSxNQUFNLENBQUU7d0JBQy9DLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUUsUUFBUSxDQUFFLENBQUMsSUFBSSxDQUFHLENBQUMsQ0FBQyxDQUFDO3dCQUVsRSx5Q0FBeUM7d0JBQ3pDLDRDQUE0Qzt3QkFDNUMsSUFBSSxNQUFNLEdBQVcsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUUsUUFBUSxDQUFFLENBQUMsSUFBSSxDQUFFLENBQUUsUUFBUSxFQUFFLGdCQUFnQixDQUFDLFFBQVEsQ0FBRSxHQUFHLEdBQUcsUUFBUSxDQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFFLFFBQVEsQ0FBRSxDQUFFLENBQUM7d0JBRTVLLFVBQVUsQ0FBQyxZQUFZLENBQUUsTUFBTSxDQUFFLENBQUM7b0JBRW5DLENBQUM7Z0JBQ0YsQ0FBQztZQUNGLENBQUM7UUFFRixDQUFDO0lBQ0YsQ0FBQztJQUVPLHFDQUFrQixHQUExQixVQUE0QixVQUFzQixFQUFFLHFCQUE2QjtRQUNoRixJQUFJLFlBQVksR0FBRyxJQUFJLDJCQUFZLENBQUUscUJBQXFCLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBRSxFQUFFLFVBQVUsQ0FBRSxDQUFDO1FBQzNHLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRU8sOEJBQVcsR0FBbkIsVUFBcUIsVUFBc0IsRUFBRSxjQUFzQjtRQUVsRSxlQUFlO1FBQ2YsR0FBRyxDQUFDLENBQUUsSUFBSSxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFNLENBQUMsQ0FBQyxDQUFDO1lBRXhDLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFFLE1BQU0sQ0FBRSxDQUFFLE1BQU0sQ0FBRSxDQUFDO1lBQ3JELElBQUksZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUUsUUFBUSxDQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBRSxRQUFRLENBQUUsR0FBRyxXQUFJLENBQUM7WUFFckcsSUFBSSxJQUFJLEdBQVMsSUFBSSxnQkFBZ0IsQ0FBRSxNQUFNLEVBQUUsY0FBYyxDQUFDLFFBQVEsQ0FBRSxHQUFHLEdBQUcsTUFBTSxDQUFFLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFFLE1BQU0sQ0FBRSxDQUFFLENBQUM7WUFFbEksSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1lBRVosVUFBVSxDQUFDLFVBQVUsQ0FBRSxNQUFNLEVBQUUsSUFBSSxDQUFFLENBQUM7UUFFdkMsQ0FBQztJQUNGLENBQUM7SUFDRixlQUFDO0FBQUQsQ0F6RkEsQUF5RkMsSUFBQTtBQXpGWSw0QkFBUTs7Ozs7Ozs7Ozs7Ozs7O0FDbEJyQiwrQkFBOEI7QUFHOUI7SUFBa0MsZ0NBQUk7SUFBdEM7O0lBd0hBLENBQUM7SUF0SFEsOEJBQU8sR0FBZjtRQUNDLE1BQU0sQ0FBQztZQUNOLFVBQVUsRUFBRSxDQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsU0FBUyxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxVQUFVLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLE9BQU8sQ0FBRTtnQkFDekUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxPQUFPLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLFVBQVUsQ0FBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsTUFBTSxDQUFFO2dCQUN6RCxFQUFFLENBQUMsR0FBRyxDQUFFLE1BQU0sQ0FBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsUUFBUSxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxXQUFXLENBQUU7Z0JBQzNELEVBQUUsQ0FBQyxHQUFHLENBQUUsU0FBUyxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxVQUFVLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLFVBQVUsQ0FBRTthQUMvRDtZQUNELGVBQWUsRUFBRSxDQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsS0FBSyxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLEtBQUssQ0FBRTtnQkFDbkUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLEtBQUssQ0FBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsS0FBSyxDQUFFO2dCQUNqRCxFQUFFLENBQUMsR0FBRyxDQUFFLEtBQUssQ0FBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsS0FBSyxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUU7Z0JBQ2pELEVBQUUsQ0FBQyxHQUFHLENBQUUsS0FBSyxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLEtBQUssQ0FBRTthQUNqRDtZQUNELFFBQVEsRUFBRSxDQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsUUFBUSxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxRQUFRLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLFNBQVMsQ0FBRTtnQkFDdEUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxXQUFXLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLFVBQVUsQ0FBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsUUFBUSxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxVQUFVLENBQUU7YUFDckY7WUFDRCxhQUFhLEVBQUUsQ0FBRSxFQUFFLENBQUMs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SUFBQTtBQWpDWSxvQ0FBWTs7Ozs7QUNEekIsZ0RBQStDO0FBRy9DLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFFLG1CQUFtQixDQUFFLENBQUM7d0JBRXhDLEVBQUU7SUFDWCxFQUFFLENBQUMsQ0FBRSxNQUFNLENBQUMsY0FBYyxDQUFFLEVBQUUsQ0FBRyxDQUFDLENBQUMsQ0FBQztRQUNuQyxJQUFJLEdBQUMsR0FBRyxJQUFJLG1CQUFRLENBQUUsQ0FBQyxDQUFFLEdBQUcsR0FBRyxFQUFFLENBQUUsRUFBRSxNQUFNLENBQUUsRUFBRSxDQUFFLENBQUUsQ0FBQztRQUNwRCxFQUFFLENBQUMsSUFBSSxDQUFFLGtCQUFrQixDQUFFLENBQUMsR0FBRyxDQUFFLGNBQU0sT0FBQSxHQUFDLENBQUMsR0FBRyxFQUFFLEVBQVAsQ0FBTyxDQUFFLENBQUM7SUFDcEQsQ0FBQztBQUNGLENBQUM7QUFMRCxHQUFHLENBQUMsQ0FBRSxJQUFJLEVBQUUsSUFBSSxNQUFPLENBQUM7WUFBZCxFQUFFO0NBS1giLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiLy8vIDxyZWZlcmVuY2UgdHlwZXM9XCJqcXVlcnlcIiAvPlxuXG5pbXBvcnQgeyBPcHRpb25zLCBSZXN1bHREYXRhIH0gZnJvbSBcIi4uL3R5cGVzXCI7XG5kZWNsYXJlIGxldCBzcmY6IGFueTtcblxuaW1wb3J0IHsgVmlldyB9IGZyb20gXCIuL1ZpZXcvVmlld1wiO1xuaW1wb3J0IHsgRmlsdGVyIH0gZnJvbSBcIi4vRmlsdGVyL0ZpbHRlclwiO1xuXG5leHBvcnQgY2xhc3MgQ29udHJvbGxlciB7XG5cdHByaXZhdGUgdGFyZ2V0OiBKUXVlcnkgPSB1bmRlZmluZWQ7XG5cdHByaXZhdGUgZmlsdGVyU3Bpbm5lcjogSlF1ZXJ5ID0gdW5kZWZpbmVkO1xuXG5cdHByaXZhdGUgdmlld3M6IHsgW2tleTogc3RyaW5nXTogVmlldyB9ID0ge307XG5cdHByaXZhdGUgZmlsdGVyczogeyBba2V5OiBzdHJpbmddOiBGaWx0ZXIgfSA9IHt9O1xuXHRwcml2YXRlIGN1cnJlbnRWaWV3OiBWaWV3ID0gdW5kZWZpbmVkO1xuXHRwcml2YXRlIGRhdGE6IFJlc3VsdERhdGE7XG5cdHByaXZhdGUgcHJpbnRSZXF1ZXN0czogT3B0aW9ucztcblxuXHRwdWJsaWMgY29uc3RydWN0b3IoIHRhcmdldDogSlF1ZXJ5LCBkYXRhOiBSZXN1bHREYXRhLCBwcmludFJlcXVlc3RzOiBPcHRpb25zICkge1xuXHRcdHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuXG5cdFx0aWYgKCB0aGlzLnRhcmdldCAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dGhpcy5maWx0ZXJTcGlubmVyID0gdGhpcy50YXJnZXQuZmluZCggJ2Rpdi5maWx0ZXJlZC1maWx0ZXItc3Bpbm5lcicgKTtcblx0XHR9XG5cblx0XHR0aGlzLmRhdGEgPSBkYXRhO1xuXHRcdHRoaXMucHJpbnRSZXF1ZXN0cyA9IHByaW50UmVxdWVzdHM7XG5cblx0XHRmb3IgKCBsZXQgcm93SWQgaW4gdGhpcy5kYXRhICkge1xuXHRcdFx0aWYgKCAhdGhpcy5kYXRhWyByb3dJZCBdLmhhc093blByb3BlcnR5KCAndmlzaWJsZScgKSApIHtcblx0XHRcdFx0dGhpcy5kYXRhWyByb3dJZCBdLnZpc2libGUgPSB7fTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRwdWJsaWMgZ2V0RGF0YSgpOiBhbnkge1xuXHRcdHJldHVybiB0aGlzLmRhdGE7XG5cdH1cblxuXHRwdWJsaWMgZ2V0UHJpbnRSZXF1ZXN0cygpOiBPcHRpb25zIHtcblx0XHRyZXR1cm4gdGhpcy5wcmludFJlcXVlc3RzO1xuXHR9XG5cblx0cHVibGljIGdldFBhdGgoKSB7XG5cdFx0cmV0dXJuIHNyZi5zZXR0aW5ncy5nZXQoICdzcmZnU2NyaXB0UGF0aCcgKSArICcvZm9ybWF0cy9maWx0ZXJlZC9yZXNvdXJjZXMvJztcblx0fVxuXG5cdHB1YmxpYyBhdHRhY2hWaWV3KCB2aWV3aWQ6IHN0cmluZywgdmlldzogVmlldyApIHtcblxuXHRcdHRoaXMudmlld3NbIHZpZXdpZCBdID0gdmlldztcblxuXHRcdGlmICggdGhpcy5jdXJyZW50VmlldyA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dGhpcy5jdXJyZW50VmlldyA9IHZpZXc7XG5cdFx0XHR2aWV3LnNob3coKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dmlldy5oaWRlKCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblxuXHRwdWJsaWMgZ2V0Vmlldyggdmlld0lkOiBzdHJpbmcgKTogVmlldyB7XG5cdFx0cmV0dXJuIHRoaXMudmlld3NbIHZpZXdJZCBdO1xuXHR9XG5cblx0cHVibGljIGF0dGFjaEZpbHRlciggZmlsdGVyOiBGaWx0ZXIgKTogSlF1ZXJ5UHJvbWlzZTwgdm9pZCA+IHtcblx0XHRsZXQgZmlsdGVySWQgPSBmaWx0ZXIuZ2V0SWQoKTtcblxuXHRcdHRoaXMuZmlsdGVyc1sgZmlsdGVySWQgXSA9IGZpbHRlcjtcblxuXHRcdGZpbHRlci5pbml0KCk7XG5cblx0XHRyZXR1cm4gdGhpcy5vbkZpbHRlclVwZGF0ZWQoIGZpbHRlcklkICk7XG5cdH1cblxuXHRwdWJsaWMgZ2V0RmlsdGVyKCBmaWx0ZXJJZDogc3RyaW5nICk6IEZpbHRlciB7XG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyc1sgZmlsdGVySWQgXTtcblx0fVxuXG5cdHB1YmxpYyBzaG93KCkge1xuXHRcdHRoaXMuaW5pdGlhbGl6ZUZpbHRlcnMoKTtcblx0XHR0aGlzLnRhcmdldC5jaGlsZHJlbiggJy5maWx0ZXJlZC1zcGlubmVyJyApLnJlbW92ZSgpO1xuXHRcdHRoaXMudGFyZ2V0LmNoaWxkcmVuKCkuc2hvdygpO1xuXHRcdHRoaXMuc3dpdGNoVG9WaWV3KCB0aGlzLmN1cnJlbnRWaWV3ICk7XG5cdH1cblxuXHRwcml2YXRlIHN3aXRjaFRvVmlldyggdmlldzogVmlldyApIHtcblxuXHRcdGlmICggdGhpcy5jdXJyZW50VmlldyBpbnN0YW5jZW9mIFZpZXcgKSB7XG5cdFx0XHR0aGlzLmN1cnJlbnRWaWV3LmhpZGUoKTtcblx0XHR9XG5cblx0XHR0aGlzLmN1cnJlbnRWaWV3ID0gdmlldztcblxuXHRcdGlmICggdGhpcy5jdXJyZW50VmlldyBpbnN0YW5jZW9mIFZpZXcgKSB7XG5cdFx0XHR2aWV3LnNob3coKTtcblx0XHR9XG5cblx0fVxuXG5cdHByaXZhdGUgaW5pdGlhbGl6ZUZpbHRlcnMoKSB7XG5cdFx0bGV0IHRvU2hvdzogc3RyaW5nW10gPSBbXTtcblx0XHRsZXQgdG9IaWRlOiBzdHJpbmdbXSA9IFtdO1xuXG5cdFx0Zm9yICggbGV0IHJvd0lkIGluIHRoaXMuZGF0YSApIHtcblx0XHRcdGZvciAoIGxldCBmaWx0ZXJJZCBpbiB0aGlzLmZpbHRlcnMgKSB7XG5cdFx0XHRcdHRoaXMuZGF0YVsgcm93SWQgXS52aXNpYmxlWyBmaWx0ZXJJZCBdID0gdGhpcy5maWx0ZXJzWyBmaWx0ZXJJZCBdLmlzRGlzYWJsZWQoKSB8fCB0aGlzLmZpbHRlcnNbIGZpbHRlcklkIF0uaXNWaXNpYmxlKCByb3dJZCApO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCB0aGlzLmlzVmlzaWJsZSggcm93SWQgKSApIHtcblx0XHRcdFx0dG9TaG93LnB1c2goIHJvd0lkICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0b0hpZGUucHVzaCggcm93SWQgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHR0aGlzLmhpZGVSb3dzKCB0b0hpZGUgKTtcblx0XHR0aGlzLnNob3dSb3dzKCB0b1Nob3cgKTtcblx0fVxuXG5cdHB1YmxpYyBvblZpZXdTZWxlY3RlZCggdmlld0lEOiBzdHJpbmcgKSB7XG5cdFx0dGhpcy5zd2l0Y2hUb1ZpZXcoIHRoaXMudmlld3NbIHZpZXdJRCBdICk7XG5cdH1cblxuXHRwdWJsaWMgb25GaWx0ZXJVcGRhdGVkKCBmaWx0ZXJJZDogc3RyaW5nICk6IEpRdWVyeVByb21pc2U8IHZvaWQgPiB7XG5cblx0XHRyZXR1cm4gdGhpcy5zaG93U3Bpbm5lcigpXG5cdFx0LnRoZW4oKCkgPT4ge1xuXG5cdFx0XHRsZXQgdG9TaG93OiBzdHJpbmdbXSA9IFtdO1xuXHRcdFx0bGV0IHRvSGlkZTogc3RyaW5nW10gPSBbXTtcblxuXHRcdFx0bGV0IGRpc2FibGVkID0gdGhpcy5maWx0ZXJzWyBmaWx0ZXJJZCBdLmlzRGlzYWJsZWQoKTtcblxuXHRcdFx0Zm9yICggbGV0IHJvd0lkIGluIHRoaXMuZGF0YSApIHtcblxuXHRcdFx0XHRsZXQgbmV3VmlzaWJsZTogYm9vbGVhbiA9IGRpc2FibGVkIHx8IHRoaXMuZmlsdGVyc1sgZmlsdGVySWQgXS5pc1Zpc2libGUoIHJvd0lkICk7XG5cblx0XHRcdFx0aWYgKCB0aGlzLmRhdGFbIHJvd0lkIF0udmlzaWJsZVsgZmlsdGVySWQgXSAhPT0gbmV3VmlzaWJsZSApIHtcblxuXHRcdFx0XHRcdHRoaXMuZGF0YVsgcm93SWQgXS52aXNpYmxlWyBmaWx0ZXJJZCBdID0gbmV3VmlzaWJsZTtcblxuXHRcdFx0XHRcdGlmICggbmV3VmlzaWJsZSAmJiB0aGlzLmlzVmlzaWJsZSggcm93SWQgKSApIHtcblx0XHRcdFx0XHRcdHRvU2hvdy5wdXNoKCByb3dJZCApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR0b0hpZGUucHVzaCggcm93SWQgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0dGhpcy5oaWRlUm93cyggdG9IaWRlICk7XG5cdFx0XHR0aGlzLnNob3dSb3dzKCB0b1Nob3cgKTtcblx0XHR9KVxuXHRcdC50aGVuKCAoKSA9PiB7IHRoaXMuaGlkZVNwaW5uZXIoKSB9ICk7XG5cdH1cblxuXHRwdWJsaWMgaXNWaXNpYmxlKCByb3dJZDogYW55ICkge1xuXHRcdGZvciAoIGxldCBmaWx0ZXJJZCBpbiB0aGlzLmRhdGFbIHJvd0lkIF0udmlzaWJsZSApIHtcblx0XHRcdGlmICggIXRoaXMuZGF0YVsgcm93SWQgXS52aXNpYmxlWyBmaWx0ZXJJZCBdICkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0cHJpdmF0ZSBoaWRlUm93cyggcm93SWRzOiBzdHJpbmdbXSApIHtcblx0XHRpZiAoIHJvd0lkcy5sZW5ndGggPT09IDAgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdGZvciAoIGxldCB2aWV3SWQgaW4gdGhpcy52aWV3cyApIHtcblx0XHRcdHRoaXMudmlld3NbIHZpZXdJZCBdLmhpZGVSb3dzKCByb3dJZHMgKTtcblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIHNob3dSb3dzKCByb3dJZHM6IHN0cmluZ1tdICkge1xuXHRcdGlmICggcm93SWRzLmxlbmd0aCA9PT0gMCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0Zm9yICggbGV0IHZpZXdJZCBpbiB0aGlzLnZpZXdzICkge1xuXHRcdFx0dGhpcy52aWV3c1sgdmlld0lkIF0uc2hvd1Jvd3MoIHJvd0lkcyApO1xuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgc2hvd1NwaW5uZXIoKTogSlF1ZXJ5UHJvbWlzZTwgdm9pZCA+IHtcblx0XHRyZXR1cm4gdGhpcy5hbmltYXRlU3Bpbm5lcigpO1xuXHR9XG5cblx0cHJpdmF0ZSBoaWRlU3Bpbm5lcigpOiBKUXVlcnlQcm9taXNlPCB2b2lkID4ge1xuXHRcdHJldHVybiB0aGlzLmFuaW1hdGVTcGlubmVyKCBmYWxzZSApO1xuXHR9XG5cblx0cHJpdmF0ZSBhbmltYXRlU3Bpbm5lciggc2hvdzogYm9vbGVhbiA9IHRydWUgKTogSlF1ZXJ5UHJvbWlzZTwgdm9pZCA+IHtcblxuXHRcdGlmICggdGhpcy5maWx0ZXJTcGlubmVyID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LndoZW4oKTtcblx0XHR9XG5cblx0XHRpZiAoIHNob3cgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5maWx0ZXJTcGlubmVyLmZhZGVJbiggMjAwICkucHJvbWlzZSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmZpbHRlclNwaW5uZXIuZmFkZU91dCggMjAwICkucHJvbWlzZSgpO1xuXHR9XG5cbn1cbiIsImltcG9ydCB7IEZpbHRlciB9IGZyb20gXCIuL0ZpbHRlclwiO1xuXG5kZWNsYXJlIGxldCBtdzogYW55O1xuXG5leHBvcnQgY2xhc3MgRGlzdGFuY2VGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuXG5cdHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IGVhcnRoUmFkaXVzOiB7IFtrZXk6IHN0cmluZ106IG51bWJlciB9ID0ge1xuXHRcdG06IDYzNzEwMDguOCxcblx0XHRrbTogNjM3MS4wMDg4LFxuXHRcdG1pOiAzOTU4Ljc2MTMsXG5cdFx0bm06IDM0NDAuMDY5NSxcblx0XHTDhTogNjM3MTAwODgwMDAwMDAwMDBcblx0fTtcblxuXHRwcml2YXRlIGVhcnRoUmFkaXVzVmFsdWU6IG51bWJlciA9IERpc3RhbmNlRmlsdGVyLmVhcnRoUmFkaXVzLmttO1xuXHRwcml2YXRlIGZpbHRlclZhbHVlOiBudW1iZXIgPSAwO1xuXG5cdHB1YmxpYyBpbml0KCkge1xuXG5cdFx0bGV0IHZhbHVlcyA9IHRoaXMuY29udHJvbGxlci5nZXREYXRhKCk7XG5cblx0XHRsZXQgb3JpZ2luID0gdGhpcy5vcHRpb25zWyAnb3JpZ2luJyBdO1xuXG5cdFx0aWYgKCAhKCBvcmlnaW4gIT09IHVuZGVmaW5lZCAmJiBvcmlnaW4uaGFzT3duUHJvcGVydHkoICdsYXQnICkgJiYgb3JpZ2luLmhhc093blByb3BlcnR5KCAnbG5nJyApICkgKSB7XG5cdFx0XHR0aGlzLnRhcmdldC5kZXRhY2goKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRsZXQgdW5pdCA9ICdrbSc7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9uc1sgJ3VuaXQnIF0gJiYgRGlzdGFuY2VGaWx0ZXIuZWFydGhSYWRpdXNbIHRoaXMub3B0aW9uc1sgJ3VuaXQnIF0gXSApIHtcblx0XHRcdHVuaXQgPSB0aGlzLm9wdGlvbnNbICd1bml0JyBdO1xuXHRcdH1cblxuXHRcdHRoaXMuZWFydGhSYWRpdXNWYWx1ZSA9IERpc3RhbmNlRmlsdGVyLmVhcnRoUmFkaXVzWyB1bml0IF07XG5cblx0XHRsZXQgbWF4VmFsdWU6IG51bWJlciA9IHRoaXMudXBkYXRlRGlzdGFuY2VzKCBvcmlnaW4gKTtcblxuXHRcdGxldCBwcmVjaXNpb24gPSAxMCAqKiAoIE1hdGguZmxvb3IoIE1hdGgubG9nKCBtYXhWYWx1ZSApICogTWF0aC5MT0cxMEUgKSAtIDEpO1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnNbICdtYXgnIF0gIT09IHVuZGVmaW5lZCAmJiB0aGlzLm9wdGlvbnNbICdtYXgnIF0gPiBtYXhWYWx1ZSApIHtcblx0XHRcdG1heFZhbHVlID0gdGhpcy5vcHRpb25zWyAnbWF4JyBdO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRtYXhWYWx1ZSA9IE1hdGguY2VpbCggbWF4VmFsdWUgLyBwcmVjaXNpb24gKSAqIHByZWNpc2lvbjtcblx0XHR9XG5cblx0XHR0aGlzLmZpbHRlclZhbHVlID0gdGhpcy5vcHRpb25zWyAnaW5pdGlhbCB2YWx1ZScgXSA/IE1hdGgubWluKCB0aGlzLm9wdGlvbnNbICdpbml0aWFsIHZhbHVlJyBdLCBtYXhWYWx1ZSApIDogbWF4VmFsdWU7XG5cblx0XHQvLyBidWlsZCBmaWx0ZXIgY29udHJvbHNcblx0XHRsZXQgZmlsdGVyY29udHJvbHMgPSB0aGlzLmJ1aWxkRW1wdHlDb250cm9sKCk7XG5cblx0XHRsZXQgcmVhZG91dCA9ICQoICc8ZGl2IGNsYXNzPVwiZmlsdGVyZWQtZGlzdGFuY2UtcmVhZG91dFwiPicgKyB0aGlzLmZpbHRlclZhbHVlICsgJzwvZGl2PicgKTtcblxuXHRcdGxldCB0YWJsZSA9ICQoICc8dGFibGUgY2xhc3M9XCJmaWx0ZXJlZC1kaXN0YW5jZS10YWJsZVwiPjx0Ym9keT48dHI+PHRkIGNsYXNzPVwiZmlsdGVyZWQtZGlzdGFuY2UtbWluLWNlbGxcIj4wPC90ZD4nICtcblx0XHRcdCc8dGQgY2xhc3M9XCJmaWx0ZXJlZC1kaXN0YW5jZS1zbGlkZXItY2VsbFwiPjxkaXYgY2xhc3M9XCJmaWx0ZXJlZC1kaXN0YW5jZS1zbGlkZXJcIj48L2Rpdj48L3RkPicgK1xuXHRcdFx0Jzx0ZCBjbGFzcz1cImZpbHRlcmVkLWRpc3RhbmNlLW1heC1jZWxsXCI+JyArIG1heFZhbHVlICsgJzwvdGQ+PC90cj4nICtcblx0XHRcdCc8dHI+PHRkIGNvbHNwYW49MyBjbGFzcz1cImZpbHRlcmVkLWRpc3RhbmNlLXVuaXQtY2VsbFwiPicgKyB1bml0ICsgJzwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+JyApO1xuXG5cdFx0ZmlsdGVyY29udHJvbHMuYXBwZW5kKCB0YWJsZSApO1xuXG5cdFx0bGV0IHRoYXQgPSB0aGlzO1xuXHRcdG13LmxvYWRlci51c2luZyggJ2pxdWVyeS51aS5zbGlkZXInICkudGhlbiggZnVuY3Rpb24gKCkge1xuXG5cdFx0XHR0YWJsZS5maW5kKCAnLmZpbHRlcmVkLWRpc3RhbmNlLXNsaWRlcicgKVxuXHRcdFx0LnNsaWRlcigge1xuXHRcdFx0XHRhbmltYXRlOiB0cnVlLFxuXHRcdFx0XHRtYXg6IG1heFZhbHVlLFxuXHRcdFx0XHR2YWx1ZTogdGhhdC5maWx0ZXJWYWx1ZSxcblx0XHRcdFx0c3RlcDogcHJlY2lzaW9uIC8gMTAwXG5cdFx0XHR9IClcblx0XHRcdC5vbiggJ3NsaWRlY2hhbmdlJywgdW5kZWZpbmVkLCB7ICdmaWx0ZXInOiB0aGF0IH0sIGZ1bmN0aW9uICggZXZlbnRPYmplY3Q6IEpRdWVyeUV2ZW50T2JqZWN0LCB1aTogYW55ICkge1xuXHRcdFx0XHRldmVudE9iamVjdC5kYXRhLnVpID0gdWk7XG5cdFx0XHRcdGV2ZW50T2JqZWN0LmRhdGEuZmlsdGVyLm9uRmlsdGVyVXBkYXRlZCggZXZlbnRPYmplY3QgKTtcblx0XHRcdH0gKVxuXHRcdFx0Lm9uKCAnc2xpZGUnLCB1bmRlZmluZWQsIHsgJ2ZpbHRlcic6IHRoYXQgfSwgZnVuY3Rpb24gKCBldmVudE9iamVjdDogSlF1ZXJ5RXZlbnRPYmplY3QsIHVpOiBhbnkgKSB7XG5cdFx0XHRcdHJlYWRvdXQudGV4dCggdWkudmFsdWUgKTtcblx0XHRcdH0gKVxuXHRcdFx0LmZpbmQoICcudWktc2xpZGVyLWhhbmRsZScgKVxuXHRcdFx0LmFwcGVuZCggcmVhZG91dCApO1xuXG5cdFx0fSApO1xuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblxuXHRwcml2YXRlIHVwZGF0ZURpc3RhbmNlcyggb3JpZ2luOiBMLkxhdExuZ0xpdGVyYWwgKTogbnVtYmVyIHtcblxuXHRcdGxldCB2YWx1ZXMgPSB0aGlzLmNvbnRyb2xsZXIuZ2V0RGF0YSgpO1xuXHRcdGxldCBtYXggPSAxO1xuXG5cdFx0bGV0IHBySWQgPSB0aGlzLnByaW50cmVxdWVzdElkO1xuXG5cdFx0Zm9yICggbGV0IHJvd0lkIGluIHZhbHVlcyApIHtcblxuXHRcdFx0aWYgKCB2YWx1ZXNbIHJvd0lkIF0uZGF0YS5oYXNPd25Qcm9wZXJ0eSggdGhpcy5maWx0ZXJJZCApICkge1xuXHRcdFx0XHRsZXQgZGlzdGFuY2VzOiBudW1iZXJbXSA9IHZhbHVlc1sgcm93SWQgXS5kYXRhWyB0aGlzLmZpbHRlcklkIF0ucG9zaXRpb25zLm1hcCggKCBwb3M6IEwuTGF0TG5nTGl0ZXJhbCApID0+IHRoaXMuZGlzdGFuY2UoIG9yaWdpbiwgcG9zICkgKTtcblx0XHRcdFx0bGV0IGRpc3QgPSBNYXRoLm1pbiggLi4uZGlzdGFuY2VzICk7XG5cblx0XHRcdFx0dmFsdWVzWyByb3dJZCBdLmRhdGFbIHRoaXMuZmlsdGVySWQgXS5kaXN0YW5jZSA9IGRpc3Q7XG5cdFx0XHRcdG1heCA9IE1hdGgubWF4KCBtYXgsIGRpc3QgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhbHVlc1sgcm93SWQgXS5kYXRhWyB0aGlzLmZpbHRlcklkIF0uZGlzdGFuY2UgPSBJbmZpbml0eTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gbWF4O1xuXHR9XG5cblx0cHVibGljIG9uRmlsdGVyVXBkYXRlZCggZXZlbnRPYmplY3Q6IEpRdWVyeUV2ZW50T2JqZWN0ICkge1xuXHRcdHRoaXMuZmlsdGVyVmFsdWUgPSBldmVudE9iamVjdC5kYXRhLnVpLnZhbHVlO1xuXHRcdHRoaXMuY29udHJvbGxlci5vbkZpbHRlclVwZGF0ZWQoIHRoaXMuZ2V0SWQoKSApO1xuXHR9XG5cblx0cHJpdmF0ZSBkaXN0YW5jZSggYTogTC5MYXRMbmdMaXRlcmFsLCBiOiBMLkxhdExuZ0xpdGVyYWwgKSB7XG5cblx0XHRjb25zdCBERUcyUkFEID0gTWF0aC5QSSAvIDE4MC4wO1xuXG5cdFx0ZnVuY3Rpb24gc3F1YXJlZCggeDogbnVtYmVyICkge1xuXHRcdFx0cmV0dXJuIHggKiB4XG5cdFx0fVxuXG5cdFx0bGV0IGYgPVxuXHRcdFx0c3F1YXJlZCggTWF0aC5zaW4oICggYi5sYXQgLSBhLmxhdCApICogREVHMlJBRCAvIDIuMCApICkgK1xuXHRcdFx0TWF0aC5jb3MoIGEubGF0ICogREVHMlJBRCApICogTWF0aC5jb3MoIGIubGF0ICogREVHMlJBRCApICpcblx0XHRcdHNxdWFyZWQoIE1hdGguc2luKCAoIGIubG5nIC0gYS5sbmcgKSAqIERFRzJSQUQgLyAyLjAgKSApO1xuXG5cdFx0cmV0dXJuIHRoaXMuZWFydGhSYWRpdXNWYWx1ZSAqIDIgKiBNYXRoLmF0YW4yKCBNYXRoLnNxcnQoIGYgKSwgTWF0aC5zcXJ0KCAxIC0gZiApICk7XG5cdH1cblxuXHRwdWJsaWMgaXNWaXNpYmxlKCByb3dJZDogc3RyaW5nICk6IGJvb2xlYW4ge1xuXG5cdFx0bGV0IHJvd2RhdGEgPSB0aGlzLmNvbnRyb2xsZXIuZ2V0RGF0YSgpWyByb3dJZCBdLmRhdGE7XG5cblx0XHRpZiAoIHJvd2RhdGEuaGFzT3duUHJvcGVydHkoIHRoaXMuZmlsdGVySWQgKSApIHtcblx0XHRcdHJldHVybiByb3dkYXRhWyB0aGlzLmZpbHRlcklkIF0uZGlzdGFuY2UgPD0gdGhpcy5maWx0ZXJWYWx1ZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gc3VwZXIuaXNWaXNpYmxlKCByb3dJZCApO1xuXG5cdH1cblxufVxuIiwiaW1wb3J0IHsgT3B0aW9ucyB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuaW1wb3J0IHsgQ29udHJvbGxlciB9IGZyb20gXCIuLi9Db250cm9sbGVyXCI7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBGaWx0ZXJ7XG5cblx0cHJpdmF0ZSBvdXRlclRhcmdldDogSlF1ZXJ5ID0gdW5kZWZpbmVkO1xuXHRwcm90ZWN0ZWQgdGFyZ2V0OiBKUXVlcnkgPSB1bmRlZmluZWQ7XG5cdHByb3RlY3RlZCBmaWx0ZXJJZDogc3RyaW5nO1xuXHRwcm90ZWN0ZWQgcHJpbnRyZXF1ZXN0SWQ6IHN0cmluZztcblx0cHJvdGVjdGVkIGNvbnRyb2xsZXI6IENvbnRyb2xsZXI7XG5cdHByb3RlY3RlZCBvcHRpb25zOiBPcHRpb25zID0gdW5kZWZpbmVkO1xuXHRwcm90ZWN0ZWQgZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblx0cHJvdGVjdGVkIGNvbGxhcHNlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvciggZmlsdGVySWQ6IHN0cmluZywgdGFyZ2V0OiBKUXVlcnksIHByaW50cmVxdWVzdElkOiBzdHJpbmcsIGNvbnRyb2xsZXI6IENvbnRyb2xsZXIsIG9wdGlvbnM/OiBPcHRpb25zICkge1xuXHRcdHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuXHRcdHRoaXMub3V0ZXJUYXJnZXQgPSB0YXJnZXQ7XG5cdFx0dGhpcy5maWx0ZXJJZCA9IGZpbHRlcklkO1xuXHRcdHRoaXMucHJpbnRyZXF1ZXN0SWQgPSBwcmludHJlcXVlc3RJZDtcblx0XHR0aGlzLmNvbnRyb2xsZXIgPSBjb250cm9sbGVyO1xuXHRcdHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cdH1cblxuXHRwdWJsaWMgaW5pdCgpIHt9O1xuXG5cdHB1YmxpYyBpc0Rpc2FibGVkKCkgOiBib29sZWFuIHtcblx0XHRyZXR1cm4gdGhpcy5kaXNhYmxlZDtcblx0fVxuXG5cdHB1YmxpYyBkaXNhYmxlKCkge1xuXHRcdHRoaXMuZGlzYWJsZWQgPSB0cnVlO1xuXG5cdFx0dGhpcy5vdXRlclRhcmdldFxuXHRcdC5yZW1vdmVDbGFzcyggJ2VuYWJsZWQnIClcblx0XHQuYWRkQ2xhc3MoICdkaXNhYmxlZCcgKTtcblxuXHRcdHRoaXMuY29sbGFwc2UoKTtcblxuXHRcdHRoaXMudGFyZ2V0LnByb21pc2UoKS50aGVuKCAoKSA9Plx0dGhpcy5jb250cm9sbGVyLm9uRmlsdGVyVXBkYXRlZCggdGhpcy5maWx0ZXJJZCApICk7XG5cdH1cblxuXHRwdWJsaWMgZW5hYmxlKCkge1xuXHRcdHRoaXMuZGlzYWJsZWQgPSBmYWxzZTtcblxuXHRcdHRoaXMub3V0ZXJUYXJnZXRcblx0XHQucmVtb3ZlQ2xhc3MoICdkaXNhYmxlZCcgKVxuXHRcdC5hZGRDbGFzcyggJ2VuYWJsZWQnICk7XG5cblx0XHRpZiAoICEgdGhpcy5jb2xsYXBzZWQgKSB7XG5cdFx0XHR0aGlzLnVuY29sbGFwc2UoKTtcblx0XHR9XG5cblx0XHR0aGlzLnRhcmdldC5wcm9taXNlKCkudGhlbiggKCkgPT5cdHRoaXMuY29udHJvbGxlci5vbkZpbHRlclVwZGF0ZWQoIHRoaXMuZmlsdGVySWQgKSApO1xuXHR9XG5cblx0cHJpdmF0ZSBjb2xsYXBzZSggZHVyYXRpb24gOiBudW1iZXIgPSA0MDAgKSB7XG5cblx0XHRpZiAoICEgdGhpcy5jb2xsYXBzZWQgKSB7XG5cblx0XHRcdHRoaXMub3V0ZXJUYXJnZXQucHJvbWlzZSgpXG5cdFx0XHQudGhlbiggKCkgPT4ge1xuXG5cdFx0XHRcdHRoaXMudGFyZ2V0LnNsaWRlVXAoIGR1cmF0aW9uICk7XG5cblx0XHRcdFx0dGhpcy5vdXRlclRhcmdldC5hbmltYXRlKCB7XG5cdFx0XHRcdFx0J3BhZGRpbmctdG9wJzogMCxcblx0XHRcdFx0XHQncGFkZGluZy1ib3R0b20nOiAwLFxuXHRcdFx0XHRcdCdtYXJnaW4tYm90dG9tJzogJzJlbSdcblx0XHRcdFx0fSwgZHVyYXRpb24gKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIHVuY29sbGFwc2UoKSB7XG5cdFx0dGhpcy5vdXRlclRhcmdldC5wcm9taXNlKClcblx0XHQudGhlbiggKCkgPT4ge1xuXHRcdFx0dGhpcy50YXJnZXQuc2xpZGVEb3duKCk7XG5cblx0XHRcdGxldCBzdHlsZSA9IHRoaXMub3V0ZXJUYXJnZXQuYXR0ciggJ3N0eWxlJyApO1xuXHRcdFx0dGhpcy5vdXRlclRhcmdldC5yZW1vdmVBdHRyKCAnc3R5bGUnICk7XG5cdFx0XHRsZXQgdW5jb2xsYXBzZWRDc3MgPSB0aGlzLm91dGVyVGFyZ2V0LmNzcyggWyAncGFkZGluZy10b3AnLCAncGFkZGluZy1ib3R0b20nLCAnbWFyZ2luLWJvdHRvbScgXSApO1xuXHRcdFx0dGhpcy5vdXRlclRhcmdldC5hdHRyKCAnc3R5bGUnLCBzdHlsZSApO1xuXG5cdFx0XHR0aGlzLm91dGVyVGFyZ2V0LmFuaW1hdGUoIHVuY29sbGFwc2VkQ3NzICk7XG5cdFx0fSApO1xuXHR9XG5cblx0cHVibGljIGlzVmlzaWJsZSggcm93SWQ6IHN0cmluZyApOiBib29sZWFuIHtcblx0XHRyZXR1cm4gdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnc2hvdyBpZiB1bmRlZmluZWQnICkgJiYgdGhpcy5vcHRpb25zWyAnc2hvdyBpZiB1bmRlZmluZWQnIF0gPT09IHRydWU7XG5cdH1cblxuXHRwdWJsaWMgZ2V0SWQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVySWQ7XG5cdH1cblxuXHRwcm90ZWN0ZWQgYnVpbGRFbXB0eUNvbnRyb2woKSB7XG5cblx0XHR0aGlzLnRhcmdldCA9ICQoICc8ZGl2IGNsYXNzPVwiZmlsdGVyZWQtZmlsdGVyLWNvbnRhaW5lclwiPicgKTtcblxuXHRcdHRoaXMub3V0ZXJUYXJnZXRcblx0XHQuYXBwZW5kKCB0aGlzLnRhcmdldCApXG5cdFx0LmFkZENsYXNzKCAnZW5hYmxlZCcgKTtcblxuXHRcdHRoaXMuYWRkT25PZmZTd2l0Y2goKTtcblx0XHR0aGlzLmFkZExhYmVsKCk7XG5cdFx0dGhpcy5hZGRDb250cm9sRm9yQ29sbGFwc2luZygpO1xuXG5cdFx0cmV0dXJuIHRoaXMudGFyZ2V0O1xuXHR9XG5cblx0cHJpdmF0ZSBhZGRMYWJlbCgpIHtcblx0XHQvLyBpbnNlcnQgdGhlIGxhYmVsIG9mIHRoZSBwcmludG91dCB0aGlzIGZpbHRlciBmaWx0ZXJzIG9uXG5cdFx0dGhpcy50YXJnZXQuYmVmb3JlKCBgPGRpdiBjbGFzcz1cImZpbHRlcmVkLWZpbHRlci1sYWJlbFwiPiR7dGhpcy5vcHRpb25zWyAnbGFiZWwnIF19PC9kaXY+YCApO1xuXHR9XG5cblx0cHJvdGVjdGVkIGFkZE9uT2ZmU3dpdGNoKCkge1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkoICdzd2l0Y2hlcycgKSApIHtcblxuXHRcdFx0bGV0IHN3aXRjaGVzID0gdGhpcy5vcHRpb25zWyAnc3dpdGNoZXMnIF07XG5cblx0XHRcdGlmICggc3dpdGNoZXMubGVuZ3RoID4gMCAmJiAkLmluQXJyYXkoICdvbiBvZmYnLCBzd2l0Y2hlcyApID49IDAgKSB7XG5cblx0XHRcdFx0bGV0IG9uT2ZmQ29udHJvbCA9ICQoIGA8ZGl2IGNsYXNzPVwiZmlsdGVyZWQtZmlsdGVyLW9ub2ZmIG9uXCI+PC9kaXY+YCApO1xuXG5cdFx0XHRcdHRoaXMudGFyZ2V0LmJlZm9yZSggb25PZmZDb250cm9sICk7XG5cblx0XHRcdFx0b25PZmZDb250cm9sLmNsaWNrKCAoKSA9PiB7XG5cblx0XHRcdFx0XHRpZiAoIHRoaXMub3V0ZXJUYXJnZXQuaGFzQ2xhc3MoJ2VuYWJsZWQnICkgKSB7XG5cdFx0XHRcdFx0XHR0aGlzLmRpc2FibGUoKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dGhpcy5lbmFibGUoKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHByb3RlY3RlZCBhZGRDb250cm9sRm9yQ29sbGFwc2luZygpIHtcblx0XHRsZXQgY29sbGFwc2libGUgPSB0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkoICdjb2xsYXBzaWJsZScgKSA/IHRoaXMub3B0aW9uc1sgJ2NvbGxhcHNpYmxlJyBdIDogdW5kZWZpbmVkO1xuXHRcdGlmICggY29sbGFwc2libGUgPT09ICdjb2xsYXBzZWQnIHx8IGNvbGxhcHNpYmxlID09PSAndW5jb2xsYXBzZWQnICkge1xuXG5cdFx0XHRsZXQgY29sbGFwc2VDb250cm9sID0gJCggJzxzcGFuIGNsYXNzPVwiZmlsdGVyZWQtZmlsdGVyLWNvbGxhcHNlXCI+JyApO1xuXG5cdFx0XHR0aGlzLnRhcmdldC5iZWZvcmUoIGNvbGxhcHNlQ29udHJvbCApO1xuXG5cdFx0XHRjb2xsYXBzZUNvbnRyb2wuY2xpY2soICgpID0+IHtcblx0XHRcdFx0aWYgKCBjb2xsYXBzZUNvbnRyb2wuaGFzQ2xhc3MoICdjb2xsYXBzZWQnICkgKSB7XG5cdFx0XHRcdFx0dGhpcy51bmNvbGxhcHNlKCk7XG5cdFx0XHRcdFx0dGhpcy5jb2xsYXBzZWQgPSBmYWxzZTtcblxuXHRcdFx0XHRcdGNvbGxhcHNlQ29udHJvbFxuXHRcdFx0XHRcdC5yZW1vdmVDbGFzcyggJ2NvbGxhcHNlZCcgKVxuXHRcdFx0XHRcdC5hZGRDbGFzcyggJ3VuY29sbGFwc2VkJyApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRoaXMuY29sbGFwc2UoKTtcblx0XHRcdFx0XHR0aGlzLmNvbGxhcHNlZCA9IHRydWU7XG5cblx0XHRcdFx0XHRjb2xsYXBzZUNvbnRyb2xcblx0XHRcdFx0XHQucmVtb3ZlQ2xhc3MoICd1bmNvbGxhcHNlZCcgKVxuXHRcdFx0XHRcdC5hZGRDbGFzcyggJ2NvbGxhcHNlZCcgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHR9ICk7XG5cblx0XHRcdGlmICggY29sbGFwc2libGUgPT09ICdjb2xsYXBzZWQnICkge1xuXG5cdFx0XHRcdHRoaXMuY29sbGFwc2UoIDAgKTtcblx0XHRcdFx0dGhpcy5jb2xsYXBzZWQgPSB0cnVlO1xuXHRcdFx0XHRjb2xsYXBzZUNvbnRyb2wuYWRkQ2xhc3MoJ2NvbGxhcHNlZCcpO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjb2xsYXBzZUNvbnRyb2wuYWRkQ2xhc3MoJ3VuY29sbGFwc2VkJyk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cbn0iLCIvLy88cmVmZXJlbmNlIHBhdGg9XCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHR5cGVzL2lvbi5yYW5nZXNsaWRlci9pbmRleC5kLnRzXCIvPlxuaW1wb3J0IHsgRmlsdGVyIH0gZnJvbSBcIi4vRmlsdGVyXCI7XG5pbXBvcnQgeyBPcHRpb25zIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5cbmRlY2xhcmUgbGV0IG13OiBhbnk7XG5cbmV4cG9ydCBjbGFzcyBOdW1iZXJGaWx0ZXIgZXh0ZW5kcyBGaWx0ZXIge1xuXG5cdHByaXZhdGUgTU9ERV9SQU5HRSA9IDA7XG5cdHByaXZhdGUgTU9ERV9NSU4gPSAxO1xuXHRwcml2YXRlIE1PREVfTUFYID0gMjtcblx0cHJpdmF0ZSBNT0RFX1NFTEVDVCA9IDM7XG5cblx0cHJpdmF0ZSBmaWx0ZXJWYWx1ZVVwcGVyOiBudW1iZXIgPSAwO1xuXHRwcml2YXRlIGZpbHRlclZhbHVlTG93ZXI6IG51bWJlciA9IDA7XG5cdHByaXZhdGUgbW9kZSA9IHRoaXMuTU9ERV9SQU5HRTtcblxuXHRwdWJsaWMgaW5pdCgpIHtcblxuXHRcdGxldCB2YWx1ZXM6IG51bWJlcltdID0gdGhpcy5nZXRWYWx1ZXMoKTtcblxuXHRcdGxldCB7IG1pblZhbHVlLCBtYXhWYWx1ZSwgcHJlY2lzaW9uIH0gPSB0aGlzLmdldFJhbmdlUGFyYW1ldGVycyggdmFsdWVzICk7XG5cblx0XHRsZXQgc2xpZGVyT3B0aW9uczogSW9uUmFuZ2VTbGlkZXJPcHRpb25zID0ge1xuXHRcdFx0cHJldHRpZnlfZW5hYmxlZDogZmFsc2UsXG5cdFx0XHRmb3JjZV9lZGdlczogdHJ1ZSxcblx0XHRcdGdyaWQ6IHRydWVcblx0XHR9O1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkoICd2YWx1ZXMnICkgKSB7XG5cdFx0XHRzbGlkZXJPcHRpb25zID0gdGhpcy5hZGp1c3RTbGlkZXJPcHRpb25zRnJvbVZhbHVlcyggc2xpZGVyT3B0aW9ucywgdmFsdWVzICk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0c2xpZGVyT3B0aW9ucyA9IHRoaXMuYWRqdXN0U2xpZGVyT3B0aW9uc0Zyb21SYW5nZVBhcmFtZXRlcnMoIHNsaWRlck9wdGlvbnMsIG1pblZhbHVlLCBtYXhWYWx1ZSwgcHJlY2lzaW9uICk7XG5cdFx0fVxuXG5cdFx0c3dpdGNoKCB0aGlzLm9wdGlvbnNbICdzbGlkZXJzJyBdICkge1xuXG5cdFx0XHRjYXNlIFwibWluXCI6XG5cblx0XHRcdFx0dGhpcy5tb2RlID0gdGhpcy5NT0RFX01JTjtcblx0XHRcdFx0c2xpZGVyT3B0aW9ucy50eXBlID0gJ3NpbmdsZSc7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlIFwibWF4XCI6XG5cblx0XHRcdFx0dGhpcy5tb2RlID0gdGhpcy5NT0RFX01BWDtcblx0XHRcdFx0c2xpZGVyT3B0aW9ucy5mcm9tID0gc2xpZGVyT3B0aW9ucy50bztcblx0XHRcdFx0c2xpZGVyT3B0aW9ucy50eXBlID0gJ3NpbmdsZSc7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlIFwic2VsZWN0XCI6XG5cblx0XHRcdFx0dGhpcy5tb2RlID0gdGhpcy5NT0RFX1NFTEVDVDtcblx0XHRcdFx0bWF4VmFsdWUgPSBtaW5WYWx1ZTtcblx0XHRcdFx0c2xpZGVyT3B0aW9ucy50eXBlID0gJ3NpbmdsZSc7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRkZWZhdWx0OiAvLyA9PSBjYXNlIFwicmFuZ2VcIlxuXG5cdFx0XHRcdHRoaXMubW9kZSA9IHRoaXMuTU9ERV9SQU5HRTtcblx0XHRcdFx0c2xpZGVyT3B0aW9ucy50eXBlID0gJ2RvdWJsZSc7XG5cdFx0fVxuXG5cdFx0dGhpcy5idWlsZEZpbHRlckNvbnRyb2xzKCBzbGlkZXJPcHRpb25zICk7XG5cblx0XHR0aGlzLmZpbHRlclZhbHVlTG93ZXIgPSBtaW5WYWx1ZTtcblx0XHR0aGlzLmZpbHRlclZhbHVlVXBwZXIgPSBtYXhWYWx1ZTtcblxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cblx0cHJpdmF0ZSBhZGp1c3RTbGlkZXJPcHRpb25zRnJvbVJhbmdlUGFyYW1ldGVycyggc2xpZGVyT3B0aW9uczogSW9uUmFuZ2VTbGlkZXJPcHRpb25zLCBtaW5WYWx1ZTogbnVtYmVyLCBtYXhWYWx1ZTogbnVtYmVyLCBwcmVjaXNpb246IG51bWJlciApIHtcblxuXHRcdHNsaWRlck9wdGlvbnMubWluID0gbWluVmFsdWU7XG5cdFx0c2xpZGVyT3B0aW9ucy5tYXggPSBtYXhWYWx1ZTtcblx0XHRzbGlkZXJPcHRpb25zLnN0ZXAgPSB0aGlzLmdldFN0ZXAoIHByZWNpc2lvbiApO1xuXHRcdHNsaWRlck9wdGlvbnMuZ3JpZF9udW0gPSBNYXRoLm1pbiggNCwgTWF0aC5yb3VuZCggKCBtYXhWYWx1ZSAtIG1pblZhbHVlICkgLyBzbGlkZXJPcHRpb25zLnN0ZXAgKSApO1xuXG5cdFx0c2xpZGVyT3B0aW9ucy5mcm9tID0gbWluVmFsdWU7XG5cdFx0c2xpZGVyT3B0aW9ucy50byA9IG1heFZhbHVlO1xuXG5cdFx0c2xpZGVyT3B0aW9ucy5vbkZpbmlzaCA9ICggZGF0YTogSW9uUmFuZ2VTbGlkZXJFdmVudCApID0+IHRoaXMub25GaWx0ZXJVcGRhdGVkKCBkYXRhLmZyb20sIGRhdGEudG8gKTtcblxuXHRcdHJldHVybiBzbGlkZXJPcHRpb25zO1xuXHR9XG5cblx0cHJpdmF0ZSBhZGp1c3RTbGlkZXJPcHRpb25zRnJvbVZhbHVlcyggc2xpZGVyT3B0aW9uczogSW9uUmFuZ2VTbGlkZXJPcHRpb25zLCB2YWx1ZXM6IG51bWJlcltdICkge1xuXG5cdFx0c2xpZGVyT3B0aW9ucy52YWx1ZXMgPSB2YWx1ZXM7XG5cblx0XHRzbGlkZXJPcHRpb25zLmZyb20gPSAwO1xuXHRcdHNsaWRlck9wdGlvbnMudG8gPSB2YWx1ZXMubGVuZ3RoIC0gMTtcblxuXHRcdHNsaWRlck9wdGlvbnMub25GaW5pc2ggPSAoIGRhdGE6IElvblJhbmdlU2xpZGVyRXZlbnQgKSA9PiB0aGlzLm9uRmlsdGVyVXBkYXRlZCggZGF0YS5mcm9tX3ZhbHVlLCBkYXRhLnRvX3ZhbHVlICk7XG5cblx0XHRyZXR1cm4gc2xpZGVyT3B0aW9ucztcblx0fVxuXG5cdHByaXZhdGUgZ2V0UmFuZ2VQYXJhbWV0ZXJzKCB2YWx1ZXM6IG51bWJlcltdICkge1xuXG5cdFx0bGV0IG1pblZhbHVlID0gdmFsdWVzWyAwIF07XG5cdFx0bGV0IG1heFZhbHVlID0gdmFsdWVzWyB2YWx1ZXMubGVuZ3RoIC0gMSBdO1xuXHRcdGxldCBwcmVjaXNpb246IG51bWJlciA9IHRoaXMuZ2V0UHJlY2lzaW9uKCBtaW5WYWx1ZSwgbWF4VmFsdWUgKTtcblxuXHRcdGlmICggIXRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ3ZhbHVlcycgKSApIHtcblx0XHRcdG1pblZhbHVlID0gdGhpcy5nZXRNaW5TbGlkZXJWYWx1ZSggbWluVmFsdWUsIHByZWNpc2lvbiApO1xuXHRcdFx0bWF4VmFsdWUgPSB0aGlzLmdldE1heFNsaWRlclZhbHVlKCBtYXhWYWx1ZSwgcHJlY2lzaW9uICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHsgbWluVmFsdWUsIG1heFZhbHVlLCBwcmVjaXNpb24gfTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0VmFsdWVzKCk6IG51bWJlcltdIHtcblx0XHRsZXQgdmFsdWVzOiBudW1iZXJbXTtcblx0XHRpZiAoIHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ3ZhbHVlcycgKSAmJiB0aGlzLm9wdGlvbnNbICd2YWx1ZXMnIF1bMF0gIT09ICdhdXRvJyApIHtcblx0XHRcdHZhbHVlcyA9ICB0aGlzLm9wdGlvbnNbICd2YWx1ZXMnIF1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFsdWVzID0gIHRoaXMuZ2V0U29ydGVkVmFsdWVzKCk7XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZXMubGVuZ3RoID09PSAwICkge1xuXHRcdFx0dmFsdWVzID0gWyAwLCAwIF07XG5cdFx0fSBlbHNlIGlmICggdmFsdWVzLmxlbmd0aCA9PT0gMSApIHtcblx0XHRcdHZhbHVlcy5wdXNoKCB2YWx1ZXNbIDAgXSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB2YWx1ZXM7XG5cdH1cblxuXHRwcml2YXRlIGJ1aWxkRmlsdGVyQ29udHJvbHMoIHNsaWRlck9wdGlvbnM6IElvblJhbmdlU2xpZGVyT3B0aW9ucyApIHtcblxuXHRcdGxldCBmaWx0ZXJDbGFzc05hbWVzOiBhbnkgPSB7fTtcblx0XHRmaWx0ZXJDbGFzc05hbWVzWyB0aGlzLk1PREVfTUlOLnRvU3RyaW5nKCkgXSA9IFwibW9kZS1taW5cIjtcblx0XHRmaWx0ZXJDbGFzc05hbWVzWyB0aGlzLk1PREVfTUFYIF0gPSBcIm1vZGUtbWF4XCI7XG5cdFx0ZmlsdGVyQ2xhc3NOYW1lc1sgdGhpcy5NT0RFX1JBTkdFIF0gPSBcIm1vZGUtcmFuZ2VcIjtcblx0XHRmaWx0ZXJDbGFzc05hbWVzWyB0aGlzLk1PREVfU0VMRUNUIF0gPSBcIm1vZGUtc2VsZWN0XCI7XG5cblx0XHRsZXQgZmlsdGVyY29udHJvbHMgPSB0aGlzLmJ1aWxkRW1wdHlDb250cm9sKCk7XG5cblx0XHRsZXQgc2xpZGVyID0gJCggJzxpbnB1dCB0eXBlPVwidGV4dFwiIHZhbHVlPVwiXCIgLz4nICk7XG5cdFx0bGV0IHNsaWRlckNvbnRhaW5lciA9ICQoIGA8ZGl2IGNsYXNzPVwiZmlsdGVyZWQtbnVtYmVyLXNsaWRlciAke2ZpbHRlckNsYXNzTmFtZXNbIHRoaXMubW9kZSBdfVwiIC8+YCApLmFwcGVuZCggc2xpZGVyICk7XG5cdFx0ZmlsdGVyY29udHJvbHMuYXBwZW5kKCBzbGlkZXJDb250YWluZXIgKTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnY2FwdGlvbicgKSApIHtcblx0XHRcdGxldCBjYXB0aW9uID0gYDxkaXYgY2xhc3M9XCJmaWx0ZXJlZC1udW1iZXItY2FwdGlvblwiPiR7dGhpcy5vcHRpb25zWyAnY2FwdGlvbicgXX08L2Rpdj5gO1xuXHRcdFx0ZmlsdGVyY29udHJvbHMuYXBwZW5kKCBjYXB0aW9uICk7XG5cdFx0fVxuXG5cdFx0bXcubG9hZGVyLnVzaW5nKCAnZXh0LnNyZi5maWx0ZXJlZC5zbGlkZXInICkudGhlbiggKCkgPT4gc2xpZGVyLmlvblJhbmdlU2xpZGVyKCBzbGlkZXJPcHRpb25zICkgKTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0TWluU2xpZGVyVmFsdWUoIG1pblZhbHVlOiBudW1iZXIsIHByZWNpc2lvbjogbnVtYmVyICkge1xuXHRcdGxldCByZXF1ZXN0ZWRNaW4gPSB0aGlzLm9wdGlvbnNbICdtaW4nIF07XG5cblx0XHRpZiAoIHJlcXVlc3RlZE1pbiA9PT0gdW5kZWZpbmVkIHx8IGlzTmFOKCBOdW1iZXIoIHJlcXVlc3RlZE1pbiApICkgKSB7XG5cdFx0XHRyZXR1cm4gTWF0aC5mbG9vciggbWluVmFsdWUgLyBwcmVjaXNpb24gKSAqIHByZWNpc2lvbjtcblx0XHR9XG5cblx0XHRyZXR1cm4gTWF0aC5taW4oIHJlcXVlc3RlZE1pbiwgbWluVmFsdWUgKTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0TWF4U2xpZGVyVmFsdWUoIG1heFZhbHVlOiBudW1iZXIsIHByZWNpc2lvbjogbnVtYmVyICkge1xuXHRcdGxldCByZXF1ZXN0ZWRNYXggPSB0aGlzLm9wdGlvbnNbICdtYXgnIF07XG5cblx0XHRpZiAoIHJlcXVlc3RlZE1heCA9PT0gdW5kZWZpbmVkIHx8IGlzTmFOKCBOdW1iZXIoIHJlcXVlc3RlZE1heCApICkgKSB7XG5cdFx0XHRyZXR1cm4gTWF0aC5jZWlsKCBtYXhWYWx1ZSAvIHByZWNpc2lvbiApICogcHJlY2lzaW9uO1xuXHRcdH1cblxuXHRcdHJldHVybiBNYXRoLm1heCggcmVxdWVzdGVkTWF4LCBtYXhWYWx1ZSApO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRQcmVjaXNpb24oIG1pblZhbHVlOiBudW1iZXIsIG1heFZhbHVlOiBudW1iZXIgKTogbnVtYmVyIHtcblx0XHRpZiAoIG1heFZhbHVlIC0gbWluVmFsdWUgPiAwICkge1xuXHRcdFx0cmV0dXJuIDEwICoqICggTWF0aC5mbG9vciggTWF0aC5sb2coIG1heFZhbHVlIC0gbWluVmFsdWUgKSAqIE1hdGguTE9HMTBFICkgLSAxICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiAxO1xuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgZ2V0U3RlcCggcHJlY2lzaW9uOiBudW1iZXIgKTogbnVtYmVyIHtcblxuXHRcdGxldCBzdGVwID0gdGhpcy5vcHRpb25zWyAnc3RlcCcgXTtcblxuXHRcdGlmICggc3RlcCAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRzdGVwID0gTnVtYmVyKCBzdGVwICk7XG5cblx0XHRcdGlmICggIWlzTmFOKCBzdGVwICkgKSB7XG5cdFx0XHRcdHJldHVybiBzdGVwO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBwcmVjaXNpb24gLyAxMDtcblx0fVxuXG5cdHByaXZhdGUgZ2V0UmFuZ2VGcm9tVmFsdWVzKCk6IFsgbnVtYmVyLCBudW1iZXIgXSB7XG5cblx0XHRsZXQgcm93cyA9IHRoaXMuY29udHJvbGxlci5nZXREYXRhKCk7XG5cdFx0bGV0IG1pbiA9IEluZmluaXR5O1xuXHRcdGxldCBtYXggPSAtSW5maW5pdHk7XG5cblx0XHRmb3IgKCBsZXQgcm93SWQgaW4gcm93cyApIHtcblxuXHRcdFx0aWYgKCByb3dzWyByb3dJZCBdLmRhdGEuaGFzT3duUHJvcGVydHkoIHRoaXMuZmlsdGVySWQgKSApIHtcblx0XHRcdFx0bGV0IHZhbHVlczogbnVtYmVyW10gPSByb3dzWyByb3dJZCBdLmRhdGFbIHRoaXMuZmlsdGVySWQgXS52YWx1ZXM7XG5cdFx0XHRcdG1pbiA9IE1hdGgubWluKCBtaW4sIC4uLnZhbHVlcyApO1xuXHRcdFx0XHRtYXggPSBNYXRoLm1heCggbWF4LCAuLi52YWx1ZXMgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gWyBtaW4sIG1heCBdO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRTb3J0ZWRWYWx1ZXMoKTogbnVtYmVyW10ge1xuXG5cdFx0bGV0IHZhbHVlQXJyYXk6IG51bWJlcltdID0gW107XG5cdFx0bGV0IHJvd3MgPSB0aGlzLmNvbnRyb2xsZXIuZ2V0RGF0YSgpO1xuXG5cdFx0Zm9yICggbGV0IHJvd0lkIGluIHJvd3MgKSB7XG5cblx0XHRcdGxldCBjZWxscyA9IHJvd3NbIHJvd0lkIF0uZGF0YTtcblxuXHRcdFx0aWYgKCBjZWxscy5oYXNPd25Qcm9wZXJ0eSggdGhpcy5maWx0ZXJJZCApICkge1xuXG5cdFx0XHRcdGxldCB2YWx1ZXMgPSBjZWxsc1sgdGhpcy5maWx0ZXJJZCBdLnZhbHVlcztcblxuXHRcdFx0XHRmb3IgKCBsZXQgdmFsdWVJZCBpbiB2YWx1ZXMgKSB7XG5cblx0XHRcdFx0XHRsZXQgdmFsdWUgPSBOdW1iZXIoIHZhbHVlc1sgdmFsdWVJZCBdICk7XG5cblx0XHRcdFx0XHRpZiAoIHZhbHVlQXJyYXkuaW5kZXhPZiggdmFsdWUgKSA9PT0gLTEgKSB7XG5cdFx0XHRcdFx0XHR2YWx1ZUFycmF5LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbHVlQXJyYXkuc29ydCggKCBhOiBhbnksIGI6IGFueSApID0+IGEgLSBiICk7XG5cdH1cblxuXHRwdWJsaWMgb25GaWx0ZXJVcGRhdGVkKCBmcm9tOiBudW1iZXIsIHRvOiBudW1iZXIgKSB7XG5cblx0XHRzd2l0Y2ggKCB0aGlzLm1vZGUgKSB7XG5cblx0XHRcdGNhc2UgdGhpcy5NT0RFX01JTjpcblxuXHRcdFx0XHR0aGlzLmZpbHRlclZhbHVlTG93ZXIgPSBmcm9tO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSB0aGlzLk1PREVfTUFYOlxuXG5cdFx0XHRcdHRoaXMuZmlsdGVyVmFsdWVVcHBlciA9IGZyb207XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlIHRoaXMuTU9ERV9TRUxFQ1Q6XG5cblx0XHRcdFx0dGhpcy5maWx0ZXJWYWx1ZUxvd2VyID0gZnJvbTtcblx0XHRcdFx0dGhpcy5maWx0ZXJWYWx1ZVVwcGVyID0gZnJvbTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGRlZmF1bHQ6IC8vIGNhc2UgdGhpcy5NT0RFX1JBTkdFOlxuXG5cdFx0XHRcdHRoaXMuZmlsdGVyVmFsdWVMb3dlciA9IGZyb207XG5cdFx0XHRcdHRoaXMuZmlsdGVyVmFsdWVVcHBlciA9IHRvO1xuXHRcdH1cblxuXHRcdHRoaXMuY29udHJvbGxlci5vbkZpbHRlclVwZGF0ZWQoIHRoaXMuZ2V0SWQoKSApO1xuXHR9XG5cblx0cHVibGljIGlzVmlzaWJsZSggcm93SWQ6IHN0cmluZyApOiBib29sZWFuIHtcblx0XHRsZXQgcm93ZGF0YSA9IHRoaXMuY29udHJvbGxlci5nZXREYXRhKClbIHJvd0lkIF0uZGF0YTtcblxuXHRcdGlmICggcm93ZGF0YS5oYXNPd25Qcm9wZXJ0eSggdGhpcy5maWx0ZXJJZCApICYmIHJvd2RhdGFbIHRoaXMuZmlsdGVySWQgXS52YWx1ZXMubGVuZ3RoID4gMCApIHtcblxuXHRcdFx0Zm9yICggbGV0IHZhbHVlIG9mIHJvd2RhdGFbIHRoaXMuZmlsdGVySWQgXS52YWx1ZXMgKSB7XG5cdFx0XHRcdGlmICggdmFsdWUgPj0gdGhpcy5maWx0ZXJWYWx1ZUxvd2VyICYmIHZhbHVlIDw9IHRoaXMuZmlsdGVyVmFsdWVVcHBlciApIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHN1cGVyLmlzVmlzaWJsZSggcm93SWQgKTtcblx0fVxuXG59XG4iLCIvLy88cmVmZXJlbmNlIHBhdGg9XCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHR5cGVzL3NlbGVjdDIvaW5kZXguZC50c1wiLz5cblxuaW1wb3J0IHsgRmlsdGVyIH0gZnJvbSBcIi4vRmlsdGVyXCI7XG5cbmRlY2xhcmUgbGV0IG13OiBhbnk7XG5cbmV4cG9ydCBjbGFzcyBWYWx1ZUZpbHRlciBleHRlbmRzIEZpbHRlciB7XG5cblx0cHJpdmF0ZSB2YWx1ZXM6IGFueSA9IHt9O1xuXHRwcml2YXRlIHZpc2libGVWYWx1ZXM6IHN0cmluZ1tdID0gW107XG5cblx0cHJpdmF0ZSBfdXNlT3IgPSB0cnVlO1xuXG5cdHB1YmxpYyBpbml0KCkge1xuXHRcdHRoaXMudmFsdWVzID0gdGhpcy5nZXRTb3J0ZWRWYWx1ZXMoKTtcblx0XHR0aGlzLmJ1aWxkQ29udHJvbCgpO1xuXHR9XG5cblx0cHVibGljIHVzZU9yKCB1c2VPcjogYm9vbGVhbiApIHtcblx0XHR0aGlzLl91c2VPciA9IHVzZU9yO1xuXHRcdHRoaXMuY29udHJvbGxlci5vbkZpbHRlclVwZGF0ZWQoIHRoaXMuZ2V0SWQoKSApO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRTb3J0ZWRWYWx1ZXMoKTogYW55IHtcblxuXHRcdC8qKiBNYXAgb2YgdmFsdWUgPT4gbGFiZWwgZGlzdGluY3QgdmFsdWVzICovXG5cdFx0bGV0IGRpc3RpbmN0VmFsdWVzOiBhbnkgPSB7fTtcblx0XHQvKiogTWFwIG9mIHZhbHVlID0+IHNvcnQgdmFsdWUgZGlzdGluY3QgdmFsdWVzICovXG5cdFx0bGV0IGRpc3RpbmN0U29ydFZhbHVlczogYW55ID0ge307XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ3ZhbHVlcycgKSApIHtcblxuXHRcdFx0cmV0dXJuIHRoaXMub3B0aW9uc1sgJ3ZhbHVlcycgXS5tYXAoXG5cdFx0XHRcdCggaXRlbTogc3RyaW5nICkgPT4ge1xuXHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHRwcmludG91dFZhbHVlOiBpdGVtLFxuXHRcdFx0XHRcdFx0Zm9ybWF0dGVkVmFsdWU6IGl0ZW1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9XG5cdFx0XHQpO1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIGJ1aWxkIGZpbHRlciB2YWx1ZXMgZnJvbSBhdmFpbGFibGUgdmFsdWVzIGluIHJlc3VsdCBzZXRcblx0XHRcdGxldCBkYXRhID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKTtcblx0XHRcdGxldCBzb3J0ZWRFbnRyaWVzOiBhbnlbXSA9IFtdO1xuXHRcdFx0Zm9yICggbGV0IGlkIGluIGRhdGEgKSB7XG5cblx0XHRcdFx0bGV0IHByaW50b3V0VmFsdWVzOiBhbnkgPSBkYXRhWyBpZCBdWyAncHJpbnRvdXRzJyBdWyB0aGlzLnByaW50cmVxdWVzdElkIF1bICd2YWx1ZXMnIF07XG5cdFx0XHRcdGxldCBwcmludG91dEZvcm1hdHRlZFZhbHVlcyA9IGRhdGFbIGlkIF1bICdwcmludG91dHMnIF1bIHRoaXMucHJpbnRyZXF1ZXN0SWQgXVsgJ2Zvcm1hdHRlZCB2YWx1ZXMnIF07XG5cdFx0XHRcdGxldCBwcmludG91dFNvcnRWYWx1ZXM6IGFueSA9IGRhdGFbIGlkIF1bICdwcmludG91dHMnIF1bIHRoaXMucHJpbnRyZXF1ZXN0SWQgXVsgJ3NvcnQgdmFsdWVzJyBdO1xuXG5cdFx0XHRcdGZvciAoIGxldCBpIGluIHByaW50b3V0VmFsdWVzICkge1xuXHRcdFx0XHRcdGxldCBwcmludG91dEZvcm1hdHRlZFZhbHVlID0gcHJpbnRvdXRGb3JtYXR0ZWRWYWx1ZXNbIGkgXTtcblxuXHRcdFx0XHRcdGlmICggcHJpbnRvdXRGb3JtYXR0ZWRWYWx1ZS5pbmRleE9mKCAnPGEnICkgPiAtMSApIHtcblx0XHRcdFx0XHRcdHByaW50b3V0Rm9ybWF0dGVkVmFsdWUgPSAvPGEuKj4oLio/KTxcXC9hPi8uZXhlYyggcHJpbnRvdXRGb3JtYXR0ZWRWYWx1ZSApWyAxIF07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZGlzdGluY3RWYWx1ZXNbIHByaW50b3V0VmFsdWVzWyBpIF0gXSA9IHByaW50b3V0Rm9ybWF0dGVkVmFsdWU7XG5cdFx0XHRcdFx0ZGlzdGluY3RTb3J0VmFsdWVzWyBwcmludG91dFZhbHVlc1sgaSBdIF0gPSBwcmludG91dFNvcnRWYWx1ZXNbIGkgXTtcblx0XHRcdFx0fVxuXG5cdFx0XHR9XG5cblx0XHRcdGZvciAoIGxldCBwcmludG91dFZhbHVlIGluIGRpc3RpbmN0U29ydFZhbHVlcyApIHtcblx0XHRcdFx0c29ydGVkRW50cmllcy5wdXNoKCB7XG5cdFx0XHRcdFx0cHJpbnRvdXRWYWx1ZTogcHJpbnRvdXRWYWx1ZSxcblx0XHRcdFx0XHRzb3J0VmFsdWU6IGRpc3RpbmN0U29ydFZhbHVlc1sgcHJpbnRvdXRWYWx1ZSBdLFxuXHRcdFx0XHRcdGZvcm1hdHRlZFZhbHVlOiBkaXN0aW5jdFZhbHVlc1sgcHJpbnRvdXRWYWx1ZSBdXG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblxuXHRcdFx0c29ydGVkRW50cmllcy5zb3J0KFxuXHRcdFx0XHQoIGE6IGFueSwgYjogYW55ICkgPT4ge1xuXHRcdFx0XHRcdHJldHVybiBhLnNvcnRWYWx1ZS5sb2NhbGVDb21wYXJlKCBiLnNvcnRWYWx1ZSApO1xuXHRcdFx0XHR9ICk7XG5cdFx0XHRyZXR1cm4gc29ydGVkRW50cmllcztcblxuXHRcdH1cblxuXHR9XG5cblx0cHJpdmF0ZSBidWlsZENvbnRyb2woKSB7XG5cblx0XHRsZXQgZmlsdGVyY29udHJvbHMgPSB0aGlzLmJ1aWxkRW1wdHlDb250cm9sKCk7XG5cblx0XHRmaWx0ZXJjb250cm9scyA9IHRoaXMuYWRkQ29udHJvbEZvclN3aXRjaGVzKCBmaWx0ZXJjb250cm9scyApO1xuXG5cdFx0bGV0IG1heENoZWNrYm94ZXMgPSB0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkoICdtYXggY2hlY2tib3hlcycgKSA/IHRoaXMub3B0aW9uc1sgJ21heCBjaGVja2JveGVzJyBdIDogNTtcblxuXHRcdGlmICggdGhpcy52YWx1ZXMubGVuZ3RoID4gbWF4Q2hlY2tib3hlcyApIHtcblx0XHRcdGZpbHRlcmNvbnRyb2xzLmFwcGVuZCggdGhpcy5nZXRTZWxlY3RlZDJDb250cm9sKCkgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZmlsdGVyY29udHJvbHMuYXBwZW5kKCB0aGlzLmdldENoZWNrYm94ZXNDb250cm9sKCkgKTtcblx0XHR9XG5cblx0fVxuXG5cdHByaXZhdGUgZ2V0Q2hlY2tib3hlc0NvbnRyb2woKSB7XG5cblx0XHRsZXQgY2hlY2tib3hlcyA9ICQoICc8ZGl2IGNsYXNzPVwiZmlsdGVyZWQtdmFsdWUtY2hlY2tib3hlc1wiIHN0eWxlPVwid2lkdGg6IDEwMCU7XCI+JyApO1xuXG5cdFx0Ly8gaW5zZXJ0IG9wdGlvbnMgKGNoZWNrYm94ZXMgYW5kIGxhYmVscylcblx0XHRmb3IgKCBsZXQgdmFsdWUgb2YgdGhpcy52YWx1ZXMgKSB7XG5cdFx0XHRjaGVja2JveGVzLmFwcGVuZCggYDxkaXYgY2xhc3M9XCJmaWx0ZXJlZC12YWx1ZS1vcHRpb25cIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIHZhbHVlPVwiJHt2YWx1ZS5wcmludG91dFZhbHVlfVwiID48ZGl2IGNsYXNzPVwiZmlsdGVyZWQtdmFsdWUtb3B0aW9uLWxhYmVsXCI+JHt2YWx1ZS5mb3JtYXR0ZWRWYWx1ZSB8fCB2YWx1ZS5wcmludG91dFZhbHVlfTwvZGl2PjwvbGFiZWw+PC9kaXY+YCApO1xuXHRcdH1cblxuXHRcdC8vIGF0dGFjaCBldmVudCBoYW5kbGVyXG5cdFx0Y2hlY2tib3hlc1xuXHRcdC5vbiggJ2NoYW5nZScsICc6Y2hlY2tib3gnLCAoIGV2ZW50T2JqZWN0OiBKUXVlcnlFdmVudE9iamVjdCApID0+IHtcblx0XHRcdGxldCBjaGVja2JveEVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD4gZXZlbnRPYmplY3QuY3VycmVudFRhcmdldDtcblx0XHRcdHRoaXMub25GaWx0ZXJVcGRhdGVkKCBjaGVja2JveEVsZW1lbnQudmFsdWUsIGNoZWNrYm94RWxlbWVudC5jaGVja2VkICk7XG5cdFx0fSApO1xuXG5cdFx0cmV0dXJuIGNoZWNrYm94ZXM7XG5cdH1cblxuXHRwcml2YXRlIGdldFNlbGVjdGVkMkNvbnRyb2woKSB7XG5cblx0XHRsZXQgc2VsZWN0ID0gJCggJzxzZWxlY3QgY2xhc3M9XCJmaWx0ZXJlZC12YWx1ZS1zZWxlY3RcIiBzdHlsZT1cIndpZHRoOiAxMDAlO1wiPicgKTtcblxuXHRcdGxldCBkYXRhOiBJZFRleHRQYWlyW10gPSBbXTtcblxuXHRcdC8vIGluc2VydCBvcHRpb25zIChjaGVja2JveGVzIGFuZCBsYWJlbHMpIGFuZCBhdHRhY2ggZXZlbnQgaGFuZGxlcnNcblx0XHRmb3IgKCBsZXQgdmFsdWUgb2YgdGhpcy52YWx1ZXMgKSB7XG5cdFx0XHQvLyBUcnkgdG8gZ2V0IGxhYmVsLCBpZiBub3QgZmFsbCBiYWNrIHRvIHZhbHVlIGlkXG5cdFx0XHRsZXQgbGFiZWwgPSB2YWx1ZS5wcmludG91dFZhbHVlO1xuXHRcdFx0ZGF0YS5wdXNoKCB7IGlkOiB2YWx1ZS5wcmludG91dFZhbHVlLCB0ZXh0OiBsYWJlbCB9ICk7XG5cblx0XHR9XG5cblx0XHRtdy5sb2FkZXIudXNpbmcoICdleHQuc3JmLmZpbHRlcmVkLnZhbHVlLWZpbHRlci5zZWxlY3QnICkudGhlbiggKCkgPT4ge1xuXG5cdFx0XHRzZWxlY3Quc2VsZWN0Migge1xuXHRcdFx0XHRtdWx0aXBsZTogdHJ1ZSxcblx0XHRcdFx0cGxhY2Vob2xkZXI6IG13Lm1lc3NhZ2UoICdzcmYtZmlsdGVyZWQtdmFsdWUtZmlsdGVyLXBsYWNlaG9sZGVyJyApLnRleHQoKSxcblx0XHRcdFx0ZGF0YTogZGF0YVxuXHRcdFx0fSApO1xuXG5cdFx0XHRzZWxlY3Qub24oIFwic2VsZWN0MjpzZWxlY3RcIiwgKCBlOiBhbnkgKSA9PiB7XG5cdFx0XHRcdHRoaXMub25GaWx0ZXJVcGRhdGVkKCBlLnBhcmFtcy5kYXRhLmlkLCB0cnVlICk7XG5cdFx0XHR9ICk7XG5cblx0XHRcdHNlbGVjdC5vbiggXCJzZWxlY3QyOnVuc2VsZWN0XCIsICggZTogYW55ICkgPT4ge1xuXHRcdFx0XHR0aGlzLm9uRmlsdGVyVXBkYXRlZCggZS5wYXJhbXMuZGF0YS5pZCwgZmFsc2UgKTtcblx0XHRcdH0gKTtcblxuXHRcdH0gKTtcblxuXHRcdHJldHVybiBzZWxlY3Q7XG5cdH1cblxuXHRwcml2YXRlIGFkZENvbnRyb2xGb3JTd2l0Y2hlcyggZmlsdGVyY29udHJvbHM6IEpRdWVyeSApOiBKUXVlcnkge1xuXHRcdC8vIGluc2VydCBzd2l0Y2hlc1xuXHRcdGxldCBzd2l0Y2hlcyA9IHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ3N3aXRjaGVzJyApID8gdGhpcy5vcHRpb25zWyAnc3dpdGNoZXMnIF0gOiB1bmRlZmluZWQ7XG5cblx0XHRpZiAoIHN3aXRjaGVzICE9PSB1bmRlZmluZWQgJiYgJC5pbkFycmF5KCAnYW5kIG9yJywgc3dpdGNoZXMgKSA+PSAwICkge1xuXG5cdFx0XHRsZXQgc3dpdGNoQ29udHJvbHMgPSAkKCAnPGRpdiBjbGFzcz1cImZpbHRlcmVkLXZhbHVlLXN3aXRjaGVzXCI+JyApO1xuXG5cdFx0XHRsZXQgYW5kb3JDb250cm9sID0gJCggJzxkaXYgY2xhc3M9XCJmaWx0ZXJlZC12YWx1ZS1hbmRvclwiPicgKTtcblxuXHRcdFx0bGV0IG9yQ29udHJvbCA9IHRoaXMuZ2V0UmFkaW9Db250cm9sKCAnb3InLCB0cnVlICk7XG5cdFx0XHRsZXQgYW5kQ29udHJvbCA9IHRoaXMuZ2V0UmFkaW9Db250cm9sKCAnYW5kJyApO1xuXG5cdFx0XHRhbmRvckNvbnRyb2xcblx0XHRcdC5hcHBlbmQoIG9yQ29udHJvbCApXG5cdFx0XHQuYXBwZW5kKCBhbmRDb250cm9sIClcblx0XHRcdC5hcHBlbmRUbyggc3dpdGNoQ29udHJvbHMgKTtcblxuXHRcdFx0YW5kb3JDb250cm9sXG5cdFx0XHQuZmluZCggJ2lucHV0JyApXG5cdFx0XHQub24oICdjaGFuZ2UnLCB1bmRlZmluZWQsIHsgJ2ZpbHRlcic6IHRoaXMgfSwgKCBldmVudE9iamVjdDogSlF1ZXJ5RXZlbnRPYmplY3QgKSA9PlxuXHRcdFx0XHRldmVudE9iamVjdC5kYXRhLmZpbHRlci51c2VPciggZXZlbnRPYmplY3QudGFyZ2V0LmdldEF0dHJpYnV0ZSggJ3ZhbHVlJyApID09PSAnb3InIClcblx0XHRcdCk7XG5cblxuXHRcdFx0ZmlsdGVyY29udHJvbHMuYXBwZW5kKCBzd2l0Y2hDb250cm9scyApO1xuXHRcdH1cblxuXHRcdHJldHVybiBmaWx0ZXJjb250cm9scztcblx0fVxuXG5cdHByaXZhdGUgZ2V0UmFkaW9Db250cm9sKCB0eXBlOiBzdHJpbmcsIGlzQ2hlY2tlZDogYm9vbGVhbiA9IGZhbHNlICkge1xuXG5cdFx0bGV0IGNoZWNrZWRBdHRyID0gaXNDaGVja2VkPydjaGVja2VkJzonJztcblx0XHRsZXQgbGFiZWxUZXh0ID0gbXcubWVzc2FnZSggJ3NyZi1maWx0ZXJlZC12YWx1ZS1maWx0ZXItJyArIHR5cGUgKS50ZXh0KCk7XG5cblx0XHRsZXQgY29udHJvbFRleHQgPVxuXHRcdFx0YDxsYWJlbCBmb3I9XCJmaWx0ZXJlZC12YWx1ZS0ke3R5cGV9LSR7dGhpcy5wcmludHJlcXVlc3RJZH1cIj5gICtcblx0XHRcdGA8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cImZpbHRlcmVkLXZhbHVlLSR7dGhpcy5wcmludHJlcXVlc3RJZH1cIiAgY2xhc3M9XCJmaWx0ZXJlZC12YWx1ZS0ke3R5cGV9XCIgaWQ9XCJmaWx0ZXJlZC12YWx1ZS0ke3R5cGV9LSR7dGhpcy5wcmludHJlcXVlc3RJZH1cIiB2YWx1ZT1cIiR7dHlwZX1cIiAke2NoZWNrZWRBdHRyfT5gICtcblx0XHRcdGAke2xhYmVsVGV4dH08L2xhYmVsPmA7XG5cblx0XHRyZXR1cm4gJCggY29udHJvbFRleHQgKTtcblx0fVxuXG5cdHB1YmxpYyBpc1Zpc2libGUoIHJvd0lkOiBzdHJpbmcgKTogYm9vbGVhbiB7XG5cblx0XHRpZiAoIHRoaXMudmlzaWJsZVZhbHVlcy5sZW5ndGggPT09IDAgKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHRsZXQgdmFsdWVzOiBzdHJpbmdbXSA9IHRoaXMuY29udHJvbGxlci5nZXREYXRhKClbIHJvd0lkIF0ucHJpbnRvdXRzWyB0aGlzLnByaW50cmVxdWVzdElkIF0udmFsdWVzO1xuXG5cdFx0aWYgKCB2YWx1ZXMubGVuZ3RoID09PSAwICkge1xuXHRcdFx0cmV0dXJuIHN1cGVyLmlzVmlzaWJsZSggcm93SWQgKTtcblx0XHR9XG5cblxuXHRcdGlmICggdGhpcy5fdXNlT3IgKSB7XG5cdFx0XHRmb3IgKCBsZXQgZXhwZWN0ZWRWYWx1ZSBvZiB0aGlzLnZpc2libGVWYWx1ZXMgKSB7XG5cdFx0XHRcdGlmICggdmFsdWVzLmluZGV4T2YoIGV4cGVjdGVkVmFsdWUgKSA+PSAwICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGxldCBleHBlY3RlZFZhbHVlIG9mIHRoaXMudmlzaWJsZVZhbHVlcyApIHtcblx0XHRcdFx0aWYgKCB2YWx1ZXMuaW5kZXhPZiggZXhwZWN0ZWRWYWx1ZSApIDwgMCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblx0fVxuXG5cdHB1YmxpYyBvbkZpbHRlclVwZGF0ZWQoIHZhbHVlOiBzdHJpbmcsIGlzQ2hlY2tlZDogYm9vbGVhbiApIHtcblx0XHRsZXQgaW5kZXggPSB0aGlzLnZpc2libGVWYWx1ZXMuaW5kZXhPZiggdmFsdWUgKTtcblxuXHRcdGlmICggaXNDaGVja2VkICYmIGluZGV4ID09PSAtMSApIHtcblx0XHRcdHRoaXMudmlzaWJsZVZhbHVlcy5wdXNoKCB2YWx1ZSApO1xuXHRcdH0gZWxzZSBpZiAoICFpc0NoZWNrZWQgJiYgaW5kZXggPj0gMCApIHtcblx0XHRcdHRoaXMudmlzaWJsZVZhbHVlcy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0fVxuXG5cdFx0dGhpcy5jb250cm9sbGVyLm9uRmlsdGVyVXBkYXRlZCggdGhpcy5nZXRJZCgpICk7XG5cdH1cbn1cbiIsImltcG9ydCB7IE9wdGlvbnMgfSBmcm9tIFwiLi4vdHlwZXNcIjtcbmltcG9ydCB7IENvbnRyb2xsZXIgfSBmcm9tIFwiLi9Db250cm9sbGVyXCI7XG5pbXBvcnQgeyBWaWV3U2VsZWN0b3IgfSBmcm9tIFwiLi9WaWV3U2VsZWN0b3JcIjtcbmltcG9ydCB7IFZpZXcgfSBmcm9tIFwiLi9WaWV3L1ZpZXdcIjtcbmltcG9ydCB7IExpc3RWaWV3IH0gZnJvbSBcIi4vVmlldy9MaXN0Vmlld1wiO1xuaW1wb3J0IHsgVGFibGVWaWV3IH0gZnJvbSBcIi4vVmlldy9UYWJsZVZpZXdcIjtcbmltcG9ydCB7IE1hcFZpZXcgfSBmcm9tIFwiLi9WaWV3L01hcFZpZXdcIjtcbmltcG9ydCB7IENhbGVuZGFyVmlldyB9IGZyb20gXCIuL1ZpZXcvQ2FsZW5kYXJWaWV3XCI7XG5pbXBvcnQgeyBGaWx0ZXIgfSBmcm9tIFwiLi9GaWx0ZXIvRmlsdGVyXCI7XG5pbXBvcnQgeyBWYWx1ZUZpbHRlciB9IGZyb20gXCIuL0ZpbHRlci9WYWx1ZUZpbHRlclwiO1xuaW1wb3J0IHsgRGlzdGFuY2VGaWx0ZXIgfSBmcm9tIFwiLi9GaWx0ZXIvRGlzdGFuY2VGaWx0ZXJcIjtcbmltcG9ydCB7IE51bWJlckZpbHRlciB9IGZyb20gXCIuL0ZpbHRlci9OdW1iZXJGaWx0ZXJcIjtcblxuLyoqXG4gKiBDZW50cmFsIEZpbHRlcmVkIGNsYXNzXG4gKlxuICogRmFjdG9yeSB0byBzZXR1cCBldmVyeWh0aW5nIGVsc2VcbiAqL1xuZXhwb3J0IGNsYXNzIEZpbHRlcmVkIHtcblxuXHRwcml2YXRlIGNvbmZpZzogYW55O1xuXHRwcml2YXRlIHRhcmdldDogSlF1ZXJ5O1xuXG5cdHByaXZhdGUgdmlld1R5cGVzOiB7IFtrZXk6IHN0cmluZ106IG5ldyggaWQ6IHN0cmluZywgdGFyZ2V0OiBKUXVlcnksIGNvbnRyb2xsZXI6IENvbnRyb2xsZXIsIG9wdGlvbnM/OiBhbnkgKSA9PiBWaWV3IH0gPSB7XG5cdFx0dGFibGU6IFRhYmxlVmlldyxcblx0XHRsaXN0OiBMaXN0Vmlldyxcblx0XHRtYXA6IE1hcFZpZXcsXG5cdFx0Y2FsZW5kYXI6IENhbGVuZGFyVmlld1xuXHR9O1xuXG5cdHByaXZhdGUgZmlsdGVyVHlwZXM6IHsgW2tleTogc3RyaW5nXTogbmV3KCBpZDogc3RyaW5nLCB0YXJnZXQ6IEpRdWVyeSwgcHJpbnRyZXF1ZXN0SWQ6IHN0cmluZywgY29udHJvbGxlcjogQ29udHJvbGxlciwgb3B0aW9ucz86IE9wdGlvbnMgKSA9PiBGaWx0ZXIgfSA9IHtcblx0XHR2YWx1ZTogVmFsdWVGaWx0ZXIsXG5cdFx0ZGlzdGFuY2U6IERpc3RhbmNlRmlsdGVyLFxuXHRcdG51bWJlcjogTnVtYmVyRmlsdGVyXG5cdH07XG5cblx0LyoqXG5cdCAqXG5cdCAqIEBwYXJhbSB0YXJnZXRcblx0ICogQHBhcmFtIGNvbmZpZ1xuXHQgKi9cblx0cHVibGljIGNvbnN0cnVjdG9yKCB0YXJnZXQ6IEpRdWVyeSwgY29uZmlnOiBhbnkgKSB7XG5cdFx0dGhpcy5jb25maWcgPSBjb25maWc7XG5cdFx0dGhpcy50YXJnZXQgPSB0YXJnZXQ7XG5cdH1cblxuXHRwdWJsaWMgcnVuKCkge1xuXG5cdFx0bGV0IGNvbnRyb2xsZXIgPSBuZXcgQ29udHJvbGxlciggdGhpcy50YXJnZXQsIHRoaXMuY29uZmlnLmRhdGEsIHRoaXMuY29uZmlnLnByaW50cmVxdWVzdHMgKTtcblxuXHRcdHRoaXMuYXR0YWNoRmlsdGVycyggY29udHJvbGxlciwgdGhpcy50YXJnZXQuY2hpbGRyZW4oICdkaXYuZmlsdGVyZWQtZmlsdGVycycgKSApO1xuXHRcdHRoaXMuYXR0YWNoVmlld1NlbGVjdG9yKCBjb250cm9sbGVyLCB0aGlzLnRhcmdldC5maW5kKCAnZGl2LmZpbHRlcmVkLXZpZXdzLXNlbGVjdG9ycy1jb250YWluZXInICkgKTtcblx0XHR0aGlzLmF0dGFjaFZpZXdzKCBjb250cm9sbGVyLCB0aGlzLnRhcmdldC5maW5kKCAnZGl2LmZpbHRlcmVkLXZpZXdzLWNvbnRhaW5lcicgKSApO1xuXG5cdFx0Ly8gbGlmdC1vZmZcblx0XHRjb250cm9sbGVyLnNob3coKTtcblxuXHR9XG5cblx0cHJpdmF0ZSBhdHRhY2hGaWx0ZXJzKCBjb250cm9sbGVyOiBDb250cm9sbGVyLCBmaWx0ZXJzQ29udGFpbmVyOiBKUXVlcnkgKSB7XG5cblx0XHRmb3IgKCBsZXQgcHJJZCBpbiB0aGlzLmNvbmZpZy5wcmludHJlcXVlc3RzICkge1xuXG5cdFx0XHRsZXQgcHIgPSB0aGlzLmNvbmZpZy5wcmludHJlcXVlc3RzWyBwcklkIF07XG5cblx0XHRcdGlmICggcHIuaGFzT3duUHJvcGVydHkoICdmaWx0ZXJzJyApICkge1xuXG5cdFx0XHRcdGZvciAoIGxldCBmaWx0ZXJpZCBpbiBwci5maWx0ZXJzICkge1xuXG5cdFx0XHRcdFx0aWYgKCBwci5maWx0ZXJzLmhhc093blByb3BlcnR5KCBmaWx0ZXJpZCApICYmXG5cdFx0XHRcdFx0XHRwci5maWx0ZXJzWyBmaWx0ZXJpZCBdLmhhc093blByb3BlcnR5KCAndHlwZScgKSAmJlxuXHRcdFx0XHRcdFx0dGhpcy5maWx0ZXJUeXBlcy5oYXNPd25Qcm9wZXJ0eSggcHIuZmlsdGVyc1sgZmlsdGVyaWQgXS50eXBlICkgKSB7XG5cblx0XHRcdFx0XHRcdC8vICB0YXJnZXQ6IEpRdWVyeSwgcHJpbnRyZXF1ZXN0OiBzdHJpbmcsXG5cdFx0XHRcdFx0XHQvLyBjb250cm9sbGVyOiBDb250cm9sbGVyLCBvcHRpb25zPzogT3B0aW9uc1xuXHRcdFx0XHRcdFx0bGV0IGZpbHRlcjogRmlsdGVyID0gbmV3IHRoaXMuZmlsdGVyVHlwZXNbIHByLmZpbHRlcnNbIGZpbHRlcmlkIF0udHlwZSBdKCBmaWx0ZXJpZCwgZmlsdGVyc0NvbnRhaW5lci5jaGlsZHJlbiggJyMnICsgZmlsdGVyaWQgKSwgcHJJZCwgY29udHJvbGxlciwgcHIuZmlsdGVyc1sgZmlsdGVyaWQgXSApO1xuXG5cdFx0XHRcdFx0XHRjb250cm9sbGVyLmF0dGFjaEZpbHRlciggZmlsdGVyICk7XG5cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgYXR0YWNoVmlld1NlbGVjdG9yKCBjb250cm9sbGVyOiBDb250cm9sbGVyLCB2aWV3U2VsZWN0b3JDb250YWluZXI6IEpRdWVyeSApIHtcblx0XHRsZXQgdmlld1NlbGVjdG9yID0gbmV3IFZpZXdTZWxlY3Rvciggdmlld1NlbGVjdG9yQ29udGFpbmVyLCBPYmplY3Qua2V5cyggdGhpcy5jb25maWcudmlld3MgKSwgY29udHJvbGxlciApO1xuXHRcdHZpZXdTZWxlY3Rvci5pbml0KCk7XG5cdH1cblxuXHRwcml2YXRlIGF0dGFjaFZpZXdzKCBjb250cm9sbGVyOiBDb250cm9sbGVyLCB2aWV3c0NvbnRhaW5lcjogSlF1ZXJ5ICkge1xuXG5cdFx0Ly8gYXR0YWNoIHZpZXdzXG5cdFx0Zm9yICggbGV0IHZpZXdpZCBpbiB0aGlzLmNvbmZpZy52aWV3cyApIHtcblxuXHRcdFx0bGV0IHZpZXd0eXBlID0gdGhpcy5jb25maWcudmlld3NbIHZpZXdpZCBdWyAndHlwZScgXTtcblx0XHRcdGxldCB2aWV3SGFuZGxlckNsYXNzID0gdGhpcy52aWV3VHlwZXMuaGFzT3duUHJvcGVydHkoIHZpZXd0eXBlICkgPyB0aGlzLnZpZXdUeXBlc1sgdmlld3R5cGUgXSA6IFZpZXc7XG5cblx0XHRcdGxldCB2aWV3OiBWaWV3ID0gbmV3IHZpZXdIYW5kbGVyQ2xhc3MoIHZpZXdpZCwgdmlld3NDb250YWluZXIuY2hpbGRyZW4oICcjJyArIHZpZXdpZCApLCBjb250cm9sbGVyLCB0aGlzLmNvbmZpZy52aWV3c1sgdmlld2lkIF0gKTtcblxuXHRcdFx0dmlldy5pbml0KCk7XG5cblx0XHRcdGNvbnRyb2xsZXIuYXR0YWNoVmlldyggdmlld2lkLCB2aWV3ICk7XG5cblx0XHR9XG5cdH1cbn1cbiIsImltcG9ydCB7IFZpZXcgfSBmcm9tIFwiLi9WaWV3XCI7XG5kZWNsYXJlIGxldCBtdzogYW55O1xuXG5leHBvcnQgY2xhc3MgQ2FsZW5kYXJWaWV3IGV4dGVuZHMgVmlldyB7XG5cblx0cHJpdmF0ZSBnZXRJMThOKCkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRtb250aE5hbWVzOiBbIG13Lm1zZyggJ2phbnVhcnknICksIG13Lm1zZyggJ2ZlYnJ1YXJ5JyApLCBtdy5tc2coICdtYXJjaCcgKSxcblx0XHRcdFx0bXcubXNnKCAnYXByaWwnICksIG13Lm1zZyggJ21heV9sb25nJyApLCBtdy5tc2coICdqdW5lJyApLFxuXHRcdFx0XHRtdy5tc2coICdqdWx5JyApLCBtdy5tc2coICdhdWd1c3QnICksIG13Lm1zZyggJ3NlcHRlbWJlcicgKSxcblx0XHRcdFx0bXcubXNnKCAnb2N0b2JlcicgKSwgbXcubXNnKCAnbm92ZW1iZXInICksIG13Lm1zZyggJ2RlY2VtYmVyJyApXG5cdFx0XHRdLFxuXHRcdFx0bW9udGhOYW1lc1Nob3J0OiBbIG13Lm1zZyggJ2phbicgKSwgbXcubXNnKCAnZmViJyApLCBtdy5tc2coICdtYXInICksXG5cdFx0XHRcdG13Lm1zZyggJ2FwcicgKSwgbXcubXNnKCAnbWF5JyApLCBtdy5tc2coICdqdW4nICksXG5cdFx0XHRcdG13Lm1zZyggJ2p1bCcgKSwgbXcubXNnKCAnYXVnJyApLCBtdy5tc2coICdzZXAnICksXG5cdFx0XHRcdG13Lm1zZyggJ29jdCcgKSwgbXcubXNnKCAnbm92JyApLCBtdy5tc2coICdkZWMnIClcblx0XHRcdF0sXG5cdFx0XHRkYXlOYW1lczogWyBtdy5tc2coICdzdW5kYXknICksIG13Lm1zZyggJ21vbmRheScgKSwgbXcubXNnKCAndHVlc2RheScgKSxcblx0XHRcdFx0bXcubXNnKCAnd2VkbmVzZGF5JyApLCBtdy5tc2coICd0aHVyc2RheScgKSwgbXcubXNnKCAnZnJpZGF5JyApLCBtdy5tc2coICdzYXR1cmRheScgKVxuXHRcdFx0XSxcblx0XHRcdGRheU5hbWVzU2hvcnQ6IFsgbXcubXNnKCAnc3VuJyApLCBtdy5tc2coICdtb24nICksIG13Lm1zZyggJ3R1ZScgKSxcblx0XHRcdFx0bXcubXNnKCAnd2VkJyApLCBtdy5tc2coICd0aHUnICksIG13Lm1zZyggJ2ZyaScgKSwgbXcubXNnKCAnc2F0JyApXG5cdFx0XHRdLFxuXHRcdFx0YnV0dG9uVGV4dDoge1xuXHRcdFx0XHR0b2RheTogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItbGFiZWwtdG9kYXknICksXG5cdFx0XHRcdG1vbnRoOiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1sYWJlbC1tb250aCcgKSxcblx0XHRcdFx0d2VlazogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItbGFiZWwtd2VlaycgKSxcblx0XHRcdFx0ZGF5OiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1sYWJlbC1kYXknIClcblx0XHRcdH1cblx0XHRcdCxcblx0XHRcdGFsbERheVRleHQ6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWxhYmVsLWFsbGRheScgKSxcblx0XHRcdHRpbWVGb3JtYXQ6IHtcblx0XHRcdFx0Jyc6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWZvcm1hdC10aW1lJyApLFxuXHRcdFx0XHRhZ2VuZGE6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWZvcm1hdC10aW1lLWFnZW5kYScgKVxuXHRcdFx0fVxuXHRcdFx0LFxuXHRcdFx0YXhpc0Zvcm1hdDogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItZm9ybWF0LWF4aXMnICksXG5cdFx0XHR0aXRsZUZvcm1hdDoge1xuXHRcdFx0XHRtb250aDogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItZm9ybWF0LXRpdGxlLW1vbnRoJyApLFxuXHRcdFx0XHR3ZWVrOiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1mb3JtYXQtdGl0bGUtd2VlaycgKSxcblx0XHRcdFx0ZGF5OiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1mb3JtYXQtdGl0bGUtZGF5JyApXG5cdFx0XHR9XG5cdFx0XHQsXG5cdFx0XHRjb2x1bW5Gb3JtYXQ6IHtcblx0XHRcdFx0bW9udGg6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWZvcm1hdC1jb2x1bW4tbW9udGgnICksXG5cdFx0XHRcdHdlZWs6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWZvcm1hdC1jb2x1bW4td2VlaycgKSxcblx0XHRcdFx0ZGF5OiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1mb3JtYXQtY29sdW1uLWRheScgKVxuXHRcdFx0fVxuXHRcdH07XG5cdH1cblxuXHRwdWJsaWMgaW5pdCgpIHtcblxuXHRcdGxldCBfaTE4biA9IHRoaXMuZ2V0STE4TigpO1xuXG5cdFx0Ly8gaW5pdGlhbGl6ZSB0aGUgY2FsZW5kYXJcblx0XHR0aGlzLnRhcmdldC5mdWxsQ2FsZW5kYXIoIHtcblxuXHRcdFx0Zmlyc3REYXk6IHRoaXMub3B0aW9ucy5maXJzdERheSxcblx0XHRcdGlzUlRMOiB0aGlzLm9wdGlvbnMuaXNSVEwsXG5cdFx0XHRtb250aE5hbWVzOiBfaTE4bi5tb250aE5hbWVzLFxuXHRcdFx0bW9udGhOYW1lc1Nob3J0OiBfaTE4bi5tb250aE5hbWVzU2hvcnQsXG5cdFx0XHRkYXlOYW1lczogX2kxOG4uZGF5TmFtZXMsXG5cdFx0XHRkYXlOYW1lc1Nob3J0OiBfaTE4bi5kYXlOYW1lc1Nob3J0LFxuXHRcdFx0YnV0dG9uVGV4dDogX2kxOG4uYnV0dG9uVGV4dCxcblx0XHRcdGFsbERheVRleHQ6IF9pMThuLmFsbERheVRleHQsXG5cdFx0XHR0aW1lRm9ybWF0OiBfaTE4bi50aW1lRm9ybWF0LFxuXHRcdFx0dGl0bGVGb3JtYXQ6IF9pMThuLnRpdGxlRm9ybWF0LFxuXHRcdFx0Y29sdW1uRm9ybWF0OiBfaTE4bi5jb2x1bW5Gb3JtYXRcblx0XHR9ICk7XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdHByaXZhdGUgZ2V0RXZlbnQoIHJvd0lkOiBhbnksIHJvd0RhdGE6IGFueSApIHtcblxuXHRcdGxldCBldmVudGRhdGE6IGFueSA9IHtcblx0XHRcdGlkOiByb3dJZCxcblx0XHRcdHRpdGxlOiByb3dEYXRhWyAndGl0bGUnIF0sXG5cdFx0XHRzdGFydDogcm93RGF0YVsgJ3N0YXJ0JyBdLFxuXHRcdFx0Y2xhc3NOYW1lOiByb3dJZFxuXHRcdH07XG5cblx0XHRpZiAoIHJvd0RhdGEuaGFzT3duUHJvcGVydHkoICdlbmQnICkgKSB7XG5cdFx0XHRldmVudGRhdGFbICdlbmQnIF0gPSByb3dEYXRhWyAnZW5kJyBdO1xuXHRcdH1cblxuXHRcdGlmICggcm93RGF0YS5oYXNPd25Qcm9wZXJ0eSggJ3VybCcgKSApIHtcblx0XHRcdGV2ZW50ZGF0YVsgJ3VybCcgXSA9IHJvd0RhdGFbICd1cmwnIF07XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGV2ZW50ZGF0YTtcblx0fVxuXG5cdHB1YmxpYyBzaG93Um93cyggcm93SWRzOiBzdHJpbmdbXSApOiBhbnkge1xuXG5cdFx0bGV0IGV2ZW50czogYW55W10gPSBbXTtcblxuXHRcdHJvd0lkcy5mb3JFYWNoKCAoIHJvd0lkOiBzdHJpbmcgKSA9PiB7XG5cblx0XHRcdGxldCByb3dEYXRhID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKVsgcm93SWQgXS5kYXRhWyB0aGlzLmlkIF07XG5cblx0XHRcdGlmICggcm93RGF0YS5oYXNPd25Qcm9wZXJ0eSggJ3N0YXJ0JyApICkge1xuXHRcdFx0XHRldmVudHMucHVzaCggdGhpcy5nZXRFdmVudCggcm93SWQsIHJvd0RhdGEgKSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblxuXHRcdHRoaXMudGFyZ2V0LmZ1bGxDYWxlbmRhciggJ2FkZEV2ZW50U291cmNlJywgZXZlbnRzICk7XG5cdH1cblxuXHRwdWJsaWMgaGlkZVJvd3MoIHJvd0lkczogc3RyaW5nW10gKTogYW55IHtcblx0XHR0aGlzLnRhcmdldC5mdWxsQ2FsZW5kYXIoICdyZW1vdmVFdmVudHMnLCAoIGU6IGFueSApID0+ICggcm93SWRzLmluZGV4T2YoIGUuX2lkICkgPj0gMCApICk7XG5cdH1cblxuXHRwdWJsaWMgc2hvdygpOiBhbnkge1xuXHRcdHN1cGVyLnNob3coKTtcblx0XHR0aGlzLnRhcmdldC5mdWxsQ2FsZW5kYXIoICdyZW5kZXInICk7XG5cdH1cblxuXHRwdWJsaWMgaGlkZSgpOiBhbnkge1xuXHRcdHJldHVybiBzdXBlci5oaWRlKCk7XG5cdH1cblxufVxuIiwiaW1wb3J0IHsgVmlldyB9IGZyb20gXCIuL1ZpZXdcIjtcblxuZXhwb3J0IGNsYXNzIExpc3RWaWV3IGV4dGVuZHMgVmlldyB7XG5cblx0cHJvdGVjdGVkIGdldEl0ZW1DbGFzc05hbWUoKSB7XG5cdFx0cmV0dXJuICcuZmlsdGVyZWQtbGlzdC1pdGVtJztcblx0fVxuXG5cbn1cbiIsIi8vLyA8cmVmZXJlbmNlIHR5cGVzPVwibGVhZmxldFwiIC8+XG5cbmltcG9ydCB7IFZpZXcgfSBmcm9tIFwiLi9WaWV3XCI7XG5pbXBvcnQgeyBPcHRpb25zIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCJcblxuZGVjbGFyZSBsZXQgbXc6IGFueTtcblxuZXhwb3J0IGNsYXNzIE1hcFZpZXcgZXh0ZW5kcyBWaWV3IHtcblxuXHRwcml2YXRlIG1hcDogTC5NYXAgPSB1bmRlZmluZWQ7XG5cdHByaXZhdGUgaWNvbjogeyBba2V5OiBzdHJpbmddOiBMLkljb24gfSA9IHVuZGVmaW5lZDtcblx0cHJpdmF0ZSBtYXJrZXJzOiB7IFtrZXk6IHN0cmluZ106IEwuTWFya2VyW10gfSA9IHVuZGVmaW5lZDtcblx0cHJpdmF0ZSBtYXJrZXJDbHVzdGVyR3JvdXA6IEwuTWFya2VyQ2x1c3Rlckdyb3VwID0gdW5kZWZpbmVkO1xuXHRwcml2YXRlIGJvdW5kczogTC5MYXRMbmdCb3VuZHMgPSB1bmRlZmluZWQ7XG5cdHByaXZhdGUgaW5pdGlhbGl6ZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuXHRwcml2YXRlIHpvb206IG51bWJlciA9IC0xO1xuXHRwcml2YXRlIG1pblpvb206IG51bWJlciA9IC0xO1xuXHRwcml2YXRlIG1heFpvb206IG51bWJlciA9IC0xO1xuXG5cdHByaXZhdGUgbGVhZmxldFByb21pc2U6IFByb21pc2U8YW55PiA9IHVuZGVmaW5lZDtcblxuXHRwdWJsaWMgaW5pdCgpIHtcblxuXHRcdGxldCBkYXRhID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKTtcblx0XHRsZXQgbWFya2VyczogeyBbcm93SWQ6IHN0cmluZ106IEwuTWFya2VyW10gfSA9IHt9O1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkoICdoZWlnaHQnICkgKSB7XG5cdFx0XHR0aGlzLnRhcmdldC5oZWlnaHQoIHRoaXMub3B0aW9ucy5oZWlnaHQgKTtcblx0XHR9XG5cblx0XHR0aGlzLmxlYWZsZXRQcm9taXNlID0gbXcubG9hZGVyLnVzaW5nKCAnZXh0LnNyZi5maWx0ZXJlZC5tYXAtdmlldy5sZWFmbGV0JyApXG5cdFx0LnRoZW4oICgpID0+IHtcblxuXHRcdFx0bGV0IGJvdW5kczogTC5MYXRMbmdCb3VuZHMgPSB1bmRlZmluZWQ7XG5cdFx0XHRsZXQgZGlzYWJsZUNsdXN0ZXJpbmdBdFpvb20gPSB0aGlzLmdldFpvb21Gb3JVbmNsdXN0ZXJpbmcoKTtcblxuXHRcdFx0bGV0IGNsdXN0ZXJPcHRpb25zOiBPcHRpb25zID0ge1xuXHRcdFx0XHRhbmltYXRlQWRkaW5nTWFya2VyczogdHJ1ZSxcblx0XHRcdFx0ZGlzYWJsZUNsdXN0ZXJpbmdBdFpvb206IGRpc2FibGVDbHVzdGVyaW5nQXRab29tLFxuXHRcdFx0XHRzcGlkZXJmeU9uTWF4Wm9vbTogZGlzYWJsZUNsdXN0ZXJpbmdBdFpvb20gPT09IG51bGxcblx0XHRcdH07XG5cblx0XHRcdGNsdXN0ZXJPcHRpb25zID0gdGhpcy5nZXRPcHRpb25zKCBbICdtYXhDbHVzdGVyUmFkaXVzJywgJ3pvb21Ub0JvdW5kc09uQ2xpY2snIF0sIGNsdXN0ZXJPcHRpb25zICk7XG5cblx0XHRcdGxldCBtYXJrZXJDbHVzdGVyR3JvdXA6IEwuTWFya2VyQ2x1c3Rlckdyb3VwID0gTC5tYXJrZXJDbHVzdGVyR3JvdXAoIGNsdXN0ZXJPcHRpb25zICk7XG5cblx0XHRcdGZvciAoIGxldCByb3dJZCBpbiBkYXRhICkge1xuXG5cdFx0XHRcdGlmICggZGF0YVsgcm93SWQgXVsgJ2RhdGEnIF0uaGFzT3duUHJvcGVydHkoIHRoaXMuaWQgKSApIHtcblx0XHRcdFx0XHRsZXQgcG9zaXRpb25zOiBMLkxhdExuZ0xpdGVyYWxbXSA9IGRhdGFbIHJvd0lkIF1bICdkYXRhJyBdWyB0aGlzLmlkIF1bICdwb3NpdGlvbnMnIF07XG5cdFx0XHRcdFx0bWFya2Vyc1sgcm93SWQgXSA9IFtdO1xuXG5cdFx0XHRcdFx0Zm9yICggbGV0IHBvcyBvZiBwb3NpdGlvbnMgKSB7XG5cblx0XHRcdFx0XHRcdGJvdW5kcyA9ICggYm91bmRzID09PSB1bmRlZmluZWQgKSA/IG5ldyBMLkxhdExuZ0JvdW5kcyggcG9zLCBwb3MgKSA6IGJvdW5kcy5leHRlbmQoIHBvcyApO1xuXG5cdFx0XHRcdFx0XHRsZXQgbWFya2VyID0gdGhpcy5nZXRNYXJrZXIoIHBvcywgZGF0YVsgcm93SWQgXSApO1xuXHRcdFx0XHRcdFx0bWFya2Vyc1sgcm93SWQgXS5wdXNoKCBtYXJrZXIgKTtcblx0XHRcdFx0XHRcdG1hcmtlckNsdXN0ZXJHcm91cC5hZGRMYXllciggbWFya2VyICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMubWFya2VyQ2x1c3Rlckdyb3VwID0gbWFya2VyQ2x1c3Rlckdyb3VwO1xuXHRcdFx0dGhpcy5tYXJrZXJzID0gbWFya2Vycztcblx0XHRcdHRoaXMuYm91bmRzID0gKCBib3VuZHMgPT09IHVuZGVmaW5lZCApID8gbmV3IEwuTGF0TG5nQm91bmRzKCBbIC0xODAsIC05MCBdLCBbIDE4MCwgOTAgXSApIDogYm91bmRzO1xuXHRcdH0gKTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0Wm9vbUZvclVuY2x1c3RlcmluZygpIHtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnbWFya2VyIGNsdXN0ZXInICkgJiYgdGhpcy5vcHRpb25zWyAnbWFya2VyIGNsdXN0ZXInIF0gPT09IGZhbHNlICkge1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkoICdtYXJrZXIgY2x1c3RlciBtYXggem9vbScgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLm9wdGlvbnNbICdtYXJrZXIgY2x1c3RlciBtYXggem9vbScgXSArIDE7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHRwcml2YXRlIGdldEljb24oIHJvdzogYW55ICkge1xuXG5cdFx0aWYgKCB0aGlzLmljb24gPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHRoaXMuYnVpbGRJY29uTGlzdCgpO1xuXHRcdH1cblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnbWFya2VyIGljb24gcHJvcGVydHknICkgKSB7XG5cblx0XHRcdGxldCB2YWxzOiBzdHJpbmdbXSA9IHJvd1sgJ3ByaW50b3V0cycgXVsgdGhpcy5vcHRpb25zWyAnbWFya2VyIGljb24gcHJvcGVydHknIF0gXVsgJ3ZhbHVlcycgXTtcblxuXHRcdFx0aWYgKCB2YWxzLmxlbmd0aCA+IDAgJiYgdGhpcy5pY29uLmhhc093blByb3BlcnR5KCB2YWxzWyAwIF0gKSApIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuaWNvblsgdmFsc1sgMCBdIF07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuaWNvblsgJ2RlZmF1bHQnIF07XG5cdH1cblxuXHRwcml2YXRlIGJ1aWxkSWNvbkxpc3QoKSB7XG5cdFx0dGhpcy5pY29uID0ge307XG5cblx0XHRsZXQgaWNvblBhdGggPSB0aGlzLmNvbnRyb2xsZXIuZ2V0UGF0aCgpICsgJ2Nzcy9pbWFnZXMvJztcblxuXHRcdHRoaXMuaWNvblsgJ2RlZmF1bHQnIF0gPSBuZXcgTC5JY29uKCB7XG5cdFx0XHQnaWNvblVybCc6IGljb25QYXRoICsgJ21hcmtlci1pY29uLnBuZycsXG5cdFx0XHQnaWNvblJldGluYVVybCc6IGljb25QYXRoICsgJ21hcmtlci1pY29uLTJ4LnBuZycsXG5cdFx0XHQnc2hhZG93VXJsJzogaWNvblBhdGggKyAnbWFya2VyLXNoYWRvdy5wbmcnLFxuXHRcdFx0J2ljb25TaXplJzogWyAyNSwgNDEgXSxcblx0XHRcdCdpY29uQW5jaG9yJzogWyAxMiwgNDEgXSxcblx0XHRcdCdwb3B1cEFuY2hvcic6IFsgMSwgLTM0IF0sXG5cdFx0XHQvLyAndG9vbHRpcEFuY2hvcic6IFsxNiwgLTI4XSxcblx0XHRcdCdzaGFkb3dTaXplJzogWyA0MSwgNDEgXVxuXHRcdH0gKTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnbWFya2VyIGljb25zJyApICkge1xuXG5cdFx0XHRmb3IgKCBsZXQgdmFsdWUgaW4gdGhpcy5vcHRpb25zWyAnbWFya2VyIGljb25zJyBdICkge1xuXHRcdFx0XHR0aGlzLmljb25bIHZhbHVlIF0gPSBuZXcgTC5JY29uKCB7XG5cdFx0XHRcdFx0J2ljb25VcmwnOiB0aGlzLm9wdGlvbnNbICdtYXJrZXIgaWNvbnMnIF1bIHZhbHVlIF0sXG5cdFx0XHRcdFx0Ly8gJ2ljb25SZXRpbmFVcmwnOiBpY29uUGF0aCArICdtYXJrZXItaWNvbi0yeC5wbmcnLFxuXHRcdFx0XHRcdCdzaGFkb3dVcmwnOiBpY29uUGF0aCArICdtYXJrZXItc2hhZG93LnBuZycsXG5cdFx0XHRcdFx0J2ljb25TaXplJzogWyAzMiwgMzIgXSxcblx0XHRcdFx0XHQnaWNvbkFuY2hvcic6IFsgMTYsIDMyIF0sXG5cdFx0XHRcdFx0J3BvcHVwQW5jaG9yJzogWyAxLCAtMzAgXSxcblx0XHRcdFx0XHQvLyAndG9vbHRpcEFuY2hvcic6IFsxNiwgLTI4XSxcblx0XHRcdFx0XHQnc2hhZG93U2l6ZSc6IFsgNDEsIDQxIF0sXG5cdFx0XHRcdFx0J3NoYWRvd0FuY2hvcic6IFsgMTIsIDQxIF1cblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgZ2V0TWFya2VyKCBsYXRMbmc6IEwuTGF0TG5nRXhwcmVzc2lvbiwgcm93OiBhbnkgKSB7XG5cdFx0bGV0IHRpdGxlID0gdW5kZWZpbmVkO1xuXHRcdGxldCBwb3B1cCA9IFtdO1xuXG5cdFx0Ly8gVE9ETzogVXNlIDxkaXY+IGluc3RlYWQgb2YgPGI+IGFuZCBkbyBDU1Mgc3R5bGluZ1xuXG5cdFx0Zm9yICggbGV0IHBySWQgaW4gcm93WyAncHJpbnRvdXRzJyBdICkge1xuXHRcdFx0bGV0IHByaW50cmVxdWVzdCA9ICh0aGlzLmNvbnRyb2xsZXIuZ2V0UHJpbnRSZXF1ZXN0cygpKVsgcHJJZCBdO1xuXG5cdFx0XHRpZiAoICEgcHJpbnRyZXF1ZXN0Lmhhc093blByb3BlcnR5KCdoaWRlJykgfHwgcHJpbnRyZXF1ZXN0LmhpZGUgPT09IGZhbHNlICkge1xuXHRcdFx0XHRsZXQgcHJpbnRvdXRzID0gcm93WyAncHJpbnRvdXRzJyBdWyBwcklkIF07XG5cblx0XHRcdFx0aWYgKCB0aXRsZSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHRpdGxlID0gcHJpbnRvdXRzWyAndmFsdWVzJyBdLmpvaW4oICcsICcgKTtcblx0XHRcdFx0XHRwb3B1cC5wdXNoKCAnPGI+JyArIHByaW50b3V0c1sgJ2Zvcm1hdHRlZCB2YWx1ZXMnIF0uam9pbiggJywgJyApICsgJzwvYj4nICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cG9wdXAucHVzaCggKHByaW50b3V0cy5sYWJlbCA/ICc8Yj4nICsgcHJpbnRvdXRzLmxhYmVsICsgJzo8L2I+ICcgOiAnJykgKyBwcmludG91dHNbICdmb3JtYXR0ZWQgdmFsdWVzJyBdLmpvaW4oICcsICcgKSApXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRsZXQgbWFya2VyID0gTC5tYXJrZXIoIGxhdExuZywgeyB0aXRsZTogdGl0bGUsIGFsdDogdGl0bGUgfSApO1xuXHRcdG1hcmtlci5iaW5kUG9wdXAoIHBvcHVwLmpvaW4oICc8YnI+JyApICk7XG5cblx0XHRtYXJrZXIuc2V0SWNvbiggdGhpcy5nZXRJY29uKCByb3cgKSApO1xuXHRcdHJldHVybiBtYXJrZXI7XG5cdH1cblxuXHRwdWJsaWMgbGF0ZUluaXQoKSB7XG5cblx0XHRpZiAoIHRoaXMuaW5pdGlhbGl6ZWQgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dGhpcy5pbml0aWFsaXplZCA9IHRydWU7XG5cblx0XHRsZXQgdGhhdCA9IHRoaXM7XG5cblx0XHR0aGlzLmxlYWZsZXRQcm9taXNlLnRoZW4oICgpID0+IHtcblxuXHRcdFx0bGV0IG1hcE9wdGlvbnM6IE9wdGlvbnMgPSB7XG5cdFx0XHRcdGNlbnRlcjogdGhpcy5ib3VuZHMgIT09IHVuZGVmaW5lZCA/IHRoaXMuYm91bmRzLmdldENlbnRlcigpIDogWyAwLCAwIF1cblx0XHRcdH07XG5cblx0XHRcdG1hcE9wdGlvbnMgPSB0aGF0LmdldE9wdGlvbnMoIFsgJ3pvb20nLCAnbWluWm9vbScsICdtYXhab29tJyBdLCBtYXBPcHRpb25zICk7XG5cblx0XHRcdC8vIFRPRE86IExpbWl0IHpvb20gdmFsdWVzIHRvIG1hcCBtYXggem9vbVxuXG5cdFx0XHR0aGF0Lm1hcCA9IEwubWFwKCB0aGF0LmdldFRhcmdldEVsZW1lbnQoKS5nZXQoIDAgKSwgbWFwT3B0aW9ucyApO1xuXHRcdFx0dGhhdC5tYXAuYWRkTGF5ZXIoIHRoYXQubWFya2VyQ2x1c3Rlckdyb3VwICk7XG5cblx0XHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnbWFwIHByb3ZpZGVyJyApICkge1xuXHRcdFx0XHRMLnRpbGVMYXllci5wcm92aWRlciggdGhpcy5vcHRpb25zWyAnbWFwIHByb3ZpZGVyJyBdICkuYWRkVG8oIHRoYXQubWFwICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggIW1hcE9wdGlvbnMuaGFzT3duUHJvcGVydHkoICd6b29tJyApICkge1xuXHRcdFx0XHR0aGF0Lm1hcC5maXRCb3VuZHMoIHRoYXQuYm91bmRzICk7XG5cdFx0XHR9XG5cblx0XHR9ICk7XG5cblx0fVxuXG5cdHB1YmxpYyBnZXRPcHRpb25zKCBrZXlzOiBzdHJpbmdbXSwgZGVmYXVsdHM6IE9wdGlvbnMgPSB7fSApIHtcblxuXHRcdGZvciAoIGxldCBrZXkgb2Yga2V5cyApIHtcblx0XHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCBrZXkgKSApIHtcblx0XHRcdFx0ZGVmYXVsdHNbIGtleSBdID0gdGhpcy5vcHRpb25zWyBrZXkgXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZGVmYXVsdHM7XG5cdH1cblxuXHRwdWJsaWMgc2hvd1Jvd3MoIHJvd0lkczogc3RyaW5nW10gKSB7XG5cdFx0dGhpcy5sZWFmbGV0UHJvbWlzZS50aGVuKCAoKSA9PiB7XG5cdFx0XHR0aGlzLm1hbmlwdWxhdGVMYXllcnMoIHJvd0lkcywgKCBsYXllcnM6IEwuTGF5ZXJbXSApID0+IHtcblx0XHRcdFx0dGhpcy5tYXJrZXJDbHVzdGVyR3JvdXAuYWRkTGF5ZXJzKCBsYXllcnMgKVxuXHRcdFx0fSApXG5cdFx0fSApO1xuXHR9XG5cblx0cHVibGljIGhpZGVSb3dzKCByb3dJZHM6IHN0cmluZ1tdICkge1xuXHRcdHRoaXMubGVhZmxldFByb21pc2UudGhlbiggKCkgPT4ge1xuXHRcdFx0dGhpcy5tYW5pcHVsYXRlTGF5ZXJzKCByb3dJZHMsICggbGF5ZXJzOiBMLkxheWVyW10gKSA9PiB7XG5cdFx0XHRcdHRoaXMubWFya2VyQ2x1c3Rlckdyb3VwLnJlbW92ZUxheWVycyggbGF5ZXJzIClcblx0XHRcdH0gKVxuXHRcdH0gKTtcblx0fVxuXG5cdHByaXZhdGUgbWFuaXB1bGF0ZUxheWVycyggcm93SWRzOiBzdHJpbmdbXSwgY2I6ICggbGF5ZXJzOiBMLkxheWVyW10gKSA9PiB2b2lkICkge1xuXG5cdFx0bGV0IGxheWVyc0Zyb21Sb3dJZHMgPSB0aGlzLmdldExheWVyc0Zyb21Sb3dJZHMoIHJvd0lkcyApO1xuXG5cdFx0aWYgKCBsYXllcnNGcm9tUm93SWRzLmxlbmd0aCA+IDAgKSB7XG5cdFx0XHRjYiggbGF5ZXJzRnJvbVJvd0lkcyApO1xuXHRcdH1cblxuXHR9XG5cblx0cHJpdmF0ZSBnZXRMYXllcnNGcm9tUm93SWRzKCByb3dJZHM6IHN0cmluZ1tdICkge1xuXHRcdHJldHVybiB0aGlzLmZsYXR0ZW4oIHRoaXMuZ2V0TGF5ZXJzRnJvbVJvd0lkc1Jhdyggcm93SWRzICkgKTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0TGF5ZXJzRnJvbVJvd0lkc1Jhdyggcm93SWRzOiBzdHJpbmdbXSApIHtcblx0XHRyZXR1cm4gcm93SWRzLm1hcCggKCByb3dJZDogc3RyaW5nICkgPT4gdGhpcy5tYXJrZXJzWyByb3dJZCBdID8gdGhpcy5tYXJrZXJzWyByb3dJZCBdIDogW10gKTtcblx0fVxuXG5cdHByaXZhdGUgZmxhdHRlbiggbWFya2VyczogTC5MYXllcltdW10gKTogTC5MYXllcltdIHtcblx0XHRyZXR1cm4gbWFya2Vycy5yZWR1Y2UoICggcmVzdWx0OiBMLkxheWVyW10sIGxheWVyczogTC5MYXllcltdICkgPT4gcmVzdWx0LmNvbmNhdCggbGF5ZXJzICksIFtdICk7XG5cdH1cblxuXHRwdWJsaWMgc2hvdygpIHtcblx0XHRzdXBlci5zaG93KCk7XG5cdFx0dGhpcy5sYXRlSW5pdCgpO1xuXHR9XG5cbn1cbiIsImltcG9ydCB7IFZpZXcgfSBmcm9tIFwiLi9WaWV3XCI7XG5cbmV4cG9ydCBjbGFzcyBUYWJsZVZpZXcgZXh0ZW5kcyBWaWV3IHtcblxuXHRwcm90ZWN0ZWQgZ2V0SXRlbUNsYXNzTmFtZSgpIHtcblx0XHRyZXR1cm4gJy5maWx0ZXJlZC10YWJsZS1pdGVtJztcblx0fVxuXG59IiwiaW1wb3J0IHsgT3B0aW9ucyB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuaW1wb3J0IHsgQ29udHJvbGxlciB9IGZyb20gXCIuLi9Db250cm9sbGVyXCI7XG5cbmV4cG9ydCBjbGFzcyBWaWV3IHtcblxuXHRwcm90ZWN0ZWQgaWQ6IHN0cmluZyA9IHVuZGVmaW5lZDtcblx0cHJvdGVjdGVkIHRhcmdldDogSlF1ZXJ5ID0gdW5kZWZpbmVkO1xuXHRwcm90ZWN0ZWQgY29udHJvbGxlcjogQ29udHJvbGxlciA9IHVuZGVmaW5lZDtcblx0cHJvdGVjdGVkIG9wdGlvbnM6IE9wdGlvbnMgPSB1bmRlZmluZWQ7XG5cdHByb3RlY3RlZCB2aXNpYmxlOiBib29sZWFuID0gZmFsc2U7XG5cdHByb3RlY3RlZCByb3dzOiB7IFsgcm93SWQ6IHN0cmluZyBdOiBKUXVlcnkgfSA9IHt9O1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvciggaWQ6IHN0cmluZywgdGFyZ2V0OiBKUXVlcnksIGM6IENvbnRyb2xsZXIsIG9wdGlvbnM6IE9wdGlvbnMgPSB7fSApIHtcblx0XHR0aGlzLmlkID0gaWQ7XG5cdFx0dGhpcy50YXJnZXQgPSB0YXJnZXQ7XG5cdFx0dGhpcy5jb250cm9sbGVyID0gYztcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXHR9XG5cblx0cHVibGljIGluaXQoKSB7XG5cblx0XHRsZXQgcm93SWRzID0gT2JqZWN0LmtleXMoIHRoaXMuY29udHJvbGxlci5nZXREYXRhKCkgKTtcblx0XHRsZXQgcm93cyA9IHRoaXMudGFyZ2V0LmZpbmQoIHRoaXMuZ2V0SXRlbUNsYXNzTmFtZSgpICk7XG5cblx0XHRyb3dzLmVhY2goICggaW5kZXgsIGVsZW0gKSA9PiB7XG5cdFx0XHRsZXQgY2xhc3NlcyA9IGVsZW0uY2xhc3NMaXN0O1xuXHRcdFx0Zm9yICggbGV0IGkgPSAwOyBpIDwgY2xhc3Nlcy5sZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0aWYgKCByb3dJZHMuaW5kZXhPZiggY2xhc3Nlc1sgaSBdICkgPj0gMCApIHtcblx0XHRcdFx0XHR0aGlzLnJvd3NbIGNsYXNzZXNbIGkgXSBdID0gJCggcm93c1sgaW5kZXggXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9XG5cblx0cHJvdGVjdGVkIGdldEl0ZW1DbGFzc05hbWUoKSB7XG5cdFx0cmV0dXJuICcuZmlsdGVyZWQtaXRlbSc7XG5cdH1cblxuXHRwdWJsaWMgZ2V0VGFyZ2V0RWxlbWVudCgpOiBKUXVlcnkge1xuXHRcdHJldHVybiB0aGlzLnRhcmdldDtcblx0fVxuXG5cdHB1YmxpYyBzaG93Um93cyggcm93SWRzOiBzdHJpbmdbXSApIHtcblxuXHRcdGlmICggdGhpcy52aXNpYmxlICYmIHJvd0lkcy5sZW5ndGggPCAyMDAgKSB7XG5cblx0XHRcdHJvd0lkcy5mb3JFYWNoKCAoIHJvd0lkOiBzdHJpbmcgKSA9PiB7XG5cdFx0XHRcdHRoaXMucm93c1sgcm93SWQgXS5zbGlkZURvd24oIDQwMCApO1xuXHRcdFx0fSApO1xuXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0cm93SWRzLmZvckVhY2goICggcm93SWQ6IHN0cmluZyApID0+IHtcblx0XHRcdFx0dGhpcy5yb3dzWyByb3dJZCBdLmNzcyggJ2Rpc3BsYXknLCAnJyk7XG5cdFx0XHR9ICk7XG5cblx0XHR9XG5cdH1cblxuXHRwdWJsaWMgaGlkZVJvd3MoIHJvd0lkczogc3RyaW5nW10gKSB7XG5cblx0XHRpZiAoIHRoaXMudmlzaWJsZSAmJiByb3dJZHMubGVuZ3RoIDwgMjAwICkge1xuXG5cdFx0XHRyb3dJZHMuZm9yRWFjaCggKCByb3dJZDogc3RyaW5nICkgPT4ge1xuXHRcdFx0XHR0aGlzLnJvd3NbIHJvd0lkIF0uc2xpZGVVcCggNDAwICk7XG5cdFx0XHR9ICk7XG5cblx0XHR9IGVsc2Uge1xuXG5cdFx0XHRyb3dJZHMuZm9yRWFjaCggKCByb3dJZDogc3RyaW5nICkgPT4ge1xuXHRcdFx0XHR0aGlzLnJvd3NbIHJvd0lkIF0uY3NzKCAnZGlzcGxheScsICdub25lJyk7XG5cdFx0XHR9ICk7XG5cblx0XHR9XG5cdH1cblxuXHRwdWJsaWMgc2hvdygpIHtcblx0XHR0aGlzLnRhcmdldC5zaG93KCk7XG5cdFx0dGhpcy52aXNpYmxlID0gdHJ1ZTtcblx0fVxuXG5cdHB1YmxpYyBoaWRlKCkge1xuXHRcdHRoaXMudGFyZ2V0LmhpZGUoKTtcblx0XHR0aGlzLnZpc2libGUgPSBmYWxzZTtcblx0fVxufVxuIiwiaW1wb3J0IHsgQ29udHJvbGxlciB9IGZyb20gXCIuL0NvbnRyb2xsZXJcIjtcbmV4cG9ydCBjbGFzcyBWaWV3U2VsZWN0b3Ige1xuXG5cdHByaXZhdGUgdGFyZ2V0OiBKUXVlcnkgPSB1bmRlZmluZWQ7XG5cdHByaXZhdGUgdmlld0lEczogc3RyaW5nW10gPSB1bmRlZmluZWQ7XG5cblx0cHJpdmF0ZSBjb250cm9sbGVyOiBDb250cm9sbGVyID0gdW5kZWZpbmVkO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvciggdGFyZ2V0OiBKUXVlcnksIHZpZXdJRHM6IHN0cmluZ1tdLCBjb250cm9sbGVyOiBDb250cm9sbGVyICkge1xuXHRcdHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuXHRcdHRoaXMudmlld0lEcyA9IHZpZXdJRHM7XG5cdFx0dGhpcy5jb250cm9sbGVyID0gY29udHJvbGxlcjtcblx0fVxuXG5cdHB1YmxpYyBpbml0KCkge1xuXHRcdGlmICggdGhpcy52aWV3SURzLmxlbmd0aCA+IDEgKSB7XG5cdFx0XHR0aGlzLnZpZXdJRHMuZm9yRWFjaCggKCBpZDogc3RyaW5nKSA9PiB7IHRoaXMudGFyZ2V0Lm9uKCAnY2xpY2snLCAnLicgKyBpZCwgeyAndGFyZ2V0JzogaWQsICdjb250cm9sbGVyJyA6IHRoaXMuY29udHJvbGxlciB9LCBWaWV3U2VsZWN0b3Iub25TZWxlY3RvclNlbGVjdGVkICk7IH0gKTtcblx0XHRcdHRoaXMudGFyZ2V0LmNoaWxkcmVuKCkuZmlyc3QoKS5hZGRDbGFzcyggJ3NlbGVjdGVkJyk7XG5cdFx0XHR0aGlzLnRhcmdldC5zaG93KCk7XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBzdGF0aWMgb25TZWxlY3RvclNlbGVjdGVkKCBldmVudDogSlF1ZXJ5RXZlbnRPYmplY3QgKSB7XG5cblx0XHRldmVudC5kYXRhLmNvbnRyb2xsZXIub25WaWV3U2VsZWN0ZWQoIGV2ZW50LmRhdGEudGFyZ2V0ICk7XG5cblx0XHQkKCBldmVudC50YXJnZXQgKVxuXHRcdC5hZGRDbGFzcyggJ3NlbGVjdGVkJylcblx0XHQuc2libGluZ3MoKS5yZW1vdmVDbGFzcyggJ3NlbGVjdGVkJyApO1xuXG5cdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0fVxuXG59IiwiaW1wb3J0IHsgRmlsdGVyZWQgfSBmcm9tIFwiLi9GaWx0ZXJlZC9GaWx0ZXJlZFwiO1xuXG5kZWNsYXJlIGxldCBtdzogYW55O1xubGV0IGNvbmZpZyA9IG13LmNvbmZpZy5nZXQoICdzcmZGaWx0ZXJlZENvbmZpZycgKTtcblxuZm9yICggbGV0IGlkIGluIGNvbmZpZyApIHtcblx0aWYgKCBjb25maWcuaGFzT3duUHJvcGVydHkoIGlkICkgKSB7XG5cdFx0bGV0IGYgPSBuZXcgRmlsdGVyZWQoICQoICcjJyArIGlkICksIGNvbmZpZ1sgaWQgXSApO1xuXHRcdG13Lmhvb2soICd3aWtpcGFnZS5jb250ZW50JyApLmFkZCggKCkgPT4gZi5ydW4oKSApO1xuXHR9XG59Il19"}