{"version":3,"sources":["node_modules/browser-pack/_prelude.js","resources/ts/Filtered/Controller.ts","resources/ts/Filtered/Filter/DistanceFilter.ts","resources/ts/Filtered/Filter/Filter.ts","resources/ts/Filtered/Filter/NumberFilter.ts","resources/ts/Filtered/Filter/ValueFilter.ts","resources/ts/Filtered/Filtered.ts","resources/ts/Filtered/View/CalendarView.ts","resources/ts/Filtered/View/ListView.ts","resources/ts/Filtered/View/MapView.ts","resources/ts/Filtered/View/TableView.ts","resources/ts/Filtered/View/View.ts","resources/ts/Filtered/ViewSelector.ts","resources/ts/bootstrap.ts"],"names":[],"mappings":"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","file":"ext.srf.filtered.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference types=\"jquery\" />\n\nimport { Options, ResultData } from \"../types\";\ndeclare let srf: any;\n\nimport { View } from \"./View/View\";\nimport { Filter } from \"./Filter/Filter\";\n\nexport class Controller {\n\tprivate target: JQuery = undefined;\n\tprivate filterSpinner: JQuery = undefined;\n\n\tprivate views: { [key: string]: View } = {};\n\tprivate filters: { [key: string]: Filter } = {};\n\tprivate currentView: View = undefined;\n\tprivate data: ResultData;\n\tprivate printRequests: Options;\n\n\tpublic constructor( target: JQuery, data: ResultData, printRequests: Options ) {\n\t\tthis.target = target;\n\n\t\tif ( this.target !== undefined ) {\n\t\t\tthis.filterSpinner = this.target.find( 'div.filtered-filter-spinner' );\n\t\t}\n\n\t\tthis.data = data;\n\t\tthis.printRequests = printRequests;\n\n\t\tfor ( let rowId in this.data ) {\n\t\t\tif ( !this.data[ rowId ].hasOwnProperty( 'visible' ) ) {\n\t\t\t\tthis.data[ rowId ].visible = {};\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getData(): any {\n\t\treturn this.data;\n\t}\n\n\tpublic getPrintRequests(): Options {\n\t\treturn this.printRequests;\n\t}\n\n\tpublic getPath() {\n\t\treturn srf.settings.get( 'srfgScriptPath' ) + '/formats/filtered/resources/';\n\t}\n\n\tpublic attachView( viewid: string, view: View ) {\n\n\t\tthis.views[ viewid ] = view;\n\n\t\tif ( this.currentView === undefined ) {\n\t\t\tthis.currentView = view;\n\t\t\tview.show();\n\t\t} else {\n\t\t\tview.hide();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic getView( viewId: string ): View {\n\t\treturn this.views[ viewId ];\n\t}\n\n\tpublic attachFilter( filter: Filter ): JQueryPromise< void > {\n\t\tlet filterId = filter.getId();\n\n\t\tthis.filters[ filterId ] = filter;\n\n\t\tfilter.init();\n\n\t\treturn this.onFilterUpdated( filterId );\n\t}\n\n\tpublic getFilter( filterId: string ): Filter {\n\t\treturn this.filters[ filterId ];\n\t}\n\n\tpublic show() {\n\t\tthis.initializeFilters();\n\t\tthis.target.children( '.filtered-spinner' ).remove();\n\t\tthis.target.children().show();\n\t\tthis.switchToView( this.currentView );\n\t}\n\n\tprivate switchToView( view: View ) {\n\n\t\tif ( this.currentView instanceof View ) {\n\t\t\tthis.currentView.hide();\n\t\t}\n\n\t\tthis.currentView = view;\n\n\t\tif ( this.currentView instanceof View ) {\n\t\t\tview.show();\n\t\t}\n\n\t}\n\n\tprivate initializeFilters() {\n\t\tlet toShow: string[] = [];\n\t\tlet toHide: string[] = [];\n\n\t\tfor ( let rowId in this.data ) {\n\t\t\tfor ( let filterId in this.filters ) {\n\t\t\t\tthis.data[ rowId ].visible[ filterId ] = this.filters[ filterId ].isDisabled() || this.filters[ filterId ].isVisible( rowId );\n\t\t\t}\n\t\t\tif ( this.isVisible( rowId ) ) {\n\t\t\t\ttoShow.push( rowId );\n\t\t\t} else {\n\t\t\t\ttoHide.push( rowId );\n\t\t\t}\n\t\t}\n\n\t\tthis.hideRows( toHide );\n\t\tthis.showRows( toShow );\n\t}\n\n\tpublic onViewSelected( viewID: string ) {\n\t\tthis.switchToView( this.views[ viewID ] );\n\t}\n\n\tpublic onFilterUpdated( filterId: string ): JQueryPromise< void > {\n\n\t\treturn this.showSpinner()\n\t\t.then(() => {\n\n\t\t\t// TODO: Optimize this!\n\n\t\t\tlet toShow: string[] = [];\n\t\t\tlet toHide: string[] = [];\n\n\t\t\tfor ( let rowId in this.data ) {\n\t\t\t\tlet oldVisible: boolean = this.data[ rowId ].visible[ filterId ];\n\t\t\t\tlet newVisible: boolean = this.filters[ filterId ].isDisabled() || this.filters[ filterId ].isVisible( rowId );\n\n\t\t\t\tif ( oldVisible !== newVisible ) {\n\n\t\t\t\t\tthis.data[ rowId ].visible[ filterId ] = newVisible;\n\n\t\t\t\t\tif ( newVisible && this.isVisible( rowId ) ) {\n\t\t\t\t\t\ttoShow.push( rowId );\n\t\t\t\t\t\t// controller.showRow( rowId );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoHide.push( rowId );\n\t\t\t\t\t\t// controller.hideRow( rowId );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.hideRows( toHide );\n\t\t\tthis.showRows( toShow );\n\t\t})\n\t\t.then( () => { this.hideSpinner() } );\n\t}\n\n\tpublic isVisible( rowId: any ) {\n\t\tfor ( let filterId in this.data[ rowId ].visible ) {\n\t\t\tif ( !this.data[ rowId ].visible[ filterId ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate hideRows( rowIds: string[] ) {\n\t\tif ( rowIds.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\tfor ( let viewId in this.views ) {\n\t\t\tthis.views[ viewId ].hideRows( rowIds );\n\t\t}\n\t}\n\n\tprivate showRows( rowIds: string[] ) {\n\t\tif ( rowIds.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\tfor ( let viewId in this.views ) {\n\t\t\tthis.views[ viewId ].showRows( rowIds );\n\t\t}\n\t}\n\n\tprivate showSpinner(): JQueryPromise< void > {\n\t\treturn this.animateSpinner();\n\t}\n\n\tprivate hideSpinner(): JQueryPromise< void > {\n\t\treturn this.animateSpinner( false );\n\t}\n\n\tprivate animateSpinner( show: boolean = true ): JQueryPromise< void > {\n\n\t\tif ( this.filterSpinner === undefined ) {\n\t\t\treturn jQuery.when();\n\t\t}\n\n\t\tif ( show ) {\n\t\t\treturn this.filterSpinner.fadeIn( 200 ).promise();\n\t\t}\n\n\t\treturn this.filterSpinner.fadeOut( 200 ).promise();\n\t}\n\n}\n","import { Filter } from \"./Filter\";\n\ndeclare let mw: any;\n\nexport class DistanceFilter extends Filter {\n\n\tprivate static readonly earthRadius: { [key: string]: number } = {\n\t\tm: 6371008.8,\n\t\tkm: 6371.0088,\n\t\tmi: 3958.7613,\n\t\tnm: 3440.0695,\n\t\tÅ: 63710088000000000\n\t};\n\n\tprivate earthRadiusValue: number = DistanceFilter.earthRadius.km;\n\tprivate filterValue: number = 0;\n\n\tpublic init() {\n\n\t\tlet values = this.controller.getData();\n\n\t\tlet origin = this.options[ 'origin' ];\n\n\t\tif ( !( origin !== undefined && origin.hasOwnProperty( 'lat' ) && origin.hasOwnProperty( 'lng' ) ) ) {\n\t\t\tthis.target.detach();\n\t\t\treturn;\n\t\t}\n\n\t\tlet unit = 'km';\n\n\t\tif ( this.options[ 'unit' ] && DistanceFilter.earthRadius[ this.options[ 'unit' ] ] ) {\n\t\t\tunit = this.options[ 'unit' ];\n\t\t}\n\n\t\tthis.earthRadiusValue = DistanceFilter.earthRadius[ unit ];\n\n\t\tlet maxValue: number = this.updateDistances( origin );\n\n\t\tlet precision = 10 ** ( Math.floor( Math.log( maxValue ) * Math.LOG10E ) - 1);\n\n\t\tif ( this.options[ 'max' ] !== undefined && this.options[ 'max' ] > maxValue ) {\n\t\t\tmaxValue = this.options[ 'max' ];\n\t\t} else {\n\t\t\tmaxValue = Math.ceil( maxValue / precision ) * precision;\n\t\t}\n\n\t\tthis.filterValue = this.options[ 'initial value' ] ? Math.min( this.options[ 'initial value' ], maxValue ) : maxValue;\n\n\t\t// build filter controls\n\t\tlet filtercontrols = this.buildEmptyControl();\n\n\t\tlet readout = $( '<div class=\"filtered-distance-readout\">' + this.filterValue + '</div>' );\n\n\t\tlet table = $( '<table class=\"filtered-distance-table\"><tbody><tr><td class=\"filtered-distance-min-cell\">0</td>' +\n\t\t\t'<td class=\"filtered-distance-slider-cell\"><div class=\"filtered-distance-slider\"></div></td>' +\n\t\t\t'<td class=\"filtered-distance-max-cell\">' + maxValue + '</td></tr>' +\n\t\t\t'<tr><td colspan=3 class=\"filtered-distance-unit-cell\">' + unit + '</td></tr></tbody></table>' );\n\n\t\tfiltercontrols.append( table );\n\n\t\tlet that = this;\n\t\tmw.loader.using( 'jquery.ui.slider' ).then( function () {\n\n\t\t\ttable.find( '.filtered-distance-slider' )\n\t\t\t.slider( {\n\t\t\t\tanimate: true,\n\t\t\t\tmax: maxValue,\n\t\t\t\tvalue: that.filterValue,\n\t\t\t\tstep: precision / 100\n\t\t\t} )\n\t\t\t.on( 'slidechange', undefined, { 'filter': that }, function ( eventObject: JQueryEventObject, ui: any ) {\n\t\t\t\teventObject.data.ui = ui;\n\t\t\t\teventObject.data.filter.onFilterUpdated( eventObject );\n\t\t\t} )\n\t\t\t.on( 'slide', undefined, { 'filter': that }, function ( eventObject: JQueryEventObject, ui: any ) {\n\t\t\t\treadout.text( ui.value );\n\t\t\t} )\n\t\t\t.find( '.ui-slider-handle' )\n\t\t\t.append( readout );\n\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\tprivate updateDistances( origin: L.LatLngLiteral ): number {\n\n\t\tlet values = this.controller.getData();\n\t\tlet max = 1;\n\n\t\tlet prId = this.printrequestId;\n\n\t\tfor ( let rowId in values ) {\n\n\t\t\tif ( values[ rowId ].data.hasOwnProperty( this.filterId ) ) {\n\t\t\t\tlet distances: number[] = values[ rowId ].data[ this.filterId ].positions.map( ( pos: L.LatLngLiteral ) => this.distance( origin, pos ) );\n\t\t\t\tlet dist = Math.min( ...distances );\n\n\t\t\t\tvalues[ rowId ].data[ this.filterId ].distance = dist;\n\t\t\t\tmax = Math.max( max, dist );\n\t\t\t} else {\n\t\t\t\tvalues[ rowId ].data[ this.filterId ].distance = Infinity;\n\t\t\t}\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tpublic onFilterUpdated( eventObject: JQueryEventObject ) {\n\t\tthis.filterValue = eventObject.data.ui.value;\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tprivate distance( a: L.LatLngLiteral, b: L.LatLngLiteral ) {\n\n\t\tconst DEG2RAD = Math.PI / 180.0;\n\n\t\tfunction squared( x: number ) {\n\t\t\treturn x * x\n\t\t}\n\n\t\tlet f =\n\t\t\tsquared( Math.sin( ( b.lat - a.lat ) * DEG2RAD / 2.0 ) ) +\n\t\t\tMath.cos( a.lat * DEG2RAD ) * Math.cos( b.lat * DEG2RAD ) *\n\t\t\tsquared( Math.sin( ( b.lng - a.lng ) * DEG2RAD / 2.0 ) );\n\n\t\treturn this.earthRadiusValue * 2 * Math.atan2( Math.sqrt( f ), Math.sqrt( 1 - f ) );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\n\t\tlet rowdata = this.controller.getData()[ rowId ].data;\n\n\t\tif ( rowdata.hasOwnProperty( this.filterId ) ) {\n\t\t\treturn rowdata[ this.filterId ].distance <= this.filterValue;\n\t\t}\n\n\t\treturn super.isVisible( rowId );\n\n\t}\n\n}\n","import { Options } from \"../../types\";\nimport { Controller } from \"../Controller\";\n\nexport abstract class Filter{\n\n\tprivate outerTarget: JQuery = undefined;\n\tprotected target: JQuery = undefined;\n\tprotected filterId: string;\n\tprotected printrequestId: string;\n\tprotected controller: Controller;\n\tprotected options: Options = undefined;\n\tprotected disabled: boolean = false;\n\tprotected collapsed: boolean = false;\n\tprotected uncollapsedCss: {} = {};\n\n\tpublic constructor( filterId: string, target: JQuery, printrequestId: string, controller: Controller, options?: Options ) {\n\t\tthis.target = target;\n\t\tthis.outerTarget = target;\n\t\tthis.filterId = filterId;\n\t\tthis.printrequestId = printrequestId;\n\t\tthis.controller = controller;\n\t\tthis.options = options || {};\n\t}\n\n\tpublic init() {};\n\n\tpublic isDisabled() : boolean {\n\t\treturn this.disabled;\n\t}\n\n\tpublic disable() {\n\t\tthis.disabled = true;\n\n\t\tthis.outerTarget\n\t\t.removeClass( 'enabled' )\n\t\t.addClass( 'disabled' );\n\n\t\tthis.collapse();\n\n\t\tthis.target.promise().then( () =>\tthis.controller.onFilterUpdated( this.filterId ) );\n\t}\n\n\tpublic enable() {\n\t\tthis.disabled = false;\n\n\t\tthis.outerTarget\n\t\t.removeClass( 'disabled' )\n\t\t.addClass( 'enabled' );\n\n\t\tif ( ! this.collapsed ) {\n\t\t\tthis.uncollapse();\n\t\t}\n\n\t\tthis.target.promise().then( () =>\tthis.controller.onFilterUpdated( this.filterId ) );\n\t}\n\n\tprivate collapse() {\n\n\t\tif ( ! this.collapsed ) {\n\t\t\tthis.uncollapsedCss = this.outerTarget.css( [ 'padding-top', 'padding-bottom', 'margin-bottom' ] );\n\t\t\tthis.target.slideUp();\n\t\t\tthis.outerTarget.animate( { 'padding-top': 0, 'padding-bottom': 0, 'margin-bottom': '2em' } );\n\t\t}\n\t}\n\n\tprivate uncollapse() {\n\t\tthis.target.slideDown();\n\t\tthis.outerTarget.animate( this.uncollapsedCss );\n\t\treturn\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\t\treturn this.options.hasOwnProperty( 'show if undefined' ) && this.options[ 'show if undefined' ] === true;\n\t}\n\n\tpublic getId() {\n\t\treturn this.filterId;\n\t}\n\n\tprotected buildEmptyControl() {\n\n\t\tthis.target = $( '<div class=\"filtered-filter-container\">' );\n\n\t\tthis.outerTarget\n\t\t.append( this.target )\n\t\t.addClass( 'enabled' );\n\n\t\tthis.addOnOffSwitch();\n\t\tthis.addLabel();\n\t\tthis.addControlForCollapsing();\n\n\t\treturn this.target;\n\t}\n\n\tprivate addLabel() {\n\t\t// insert the label of the printout this filter filters on\n\t\tthis.target.before( `<div class=\"filtered-filter-label\">${this.options[ 'label' ]}</div>` );\n\t}\n\n\tprotected addOnOffSwitch() {\n\n\t\tif ( this.options.hasOwnProperty( 'switches' ) ) {\n\n\t\t\tlet switches = this.options[ 'switches' ];\n\n\t\t\tif ( switches.length > 0 && $.inArray( 'on off', switches ) >= 0 ) {\n\n\t\t\t\tlet onOffControl = $( `<div class=\"filtered-filter-onoff on\"></div>` );\n\n\t\t\t\tthis.target.before( onOffControl );\n\n\t\t\t\tonOffControl.click( () => {\n\n\t\t\t\t\tif ( this.outerTarget.hasClass('enabled' ) ) {\n\t\t\t\t\t\tthis.disable();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.enable();\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected addControlForCollapsing() {\n\t\tlet collapsible = this.options.hasOwnProperty( 'collapsible' ) ? this.options[ 'collapsible' ] : undefined;\n\t\tif ( collapsible === 'collapsed' || collapsible === 'uncollapsed' ) {\n\n\t\t\tlet collapseControl = $( '<span class=\"filtered-filter-collapse\">' );\n\n\t\t\tthis.target.before( collapseControl );\n\n\t\t\tcollapseControl.click( () => {\n\t\t\t\tif ( collapseControl.hasClass( 'collapsed' ) ) {\n\t\t\t\t\tthis.uncollapse();\n\t\t\t\t\tthis.collapsed = false;\n\n\t\t\t\t\tcollapseControl\n\t\t\t\t\t.removeClass( 'collapsed' )\n\t\t\t\t\t.addClass( 'uncollapsed' );\n\t\t\t\t} else {\n\t\t\t\t\tthis.collapse();\n\t\t\t\t\tthis.collapsed = true;\n\n\t\t\t\t\tcollapseControl\n\t\t\t\t\t.removeClass( 'uncollapsed' )\n\t\t\t\t\t.addClass( 'collapsed' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( collapsible === 'collapsed' ) {\n\n\t\t\t\tthis.collapse();\n\t\t\t\tthis.collapsed = true;\n\t\t\t\tcollapseControl.addClass('collapsed');\n\n\t\t\t} else {\n\t\t\t\tcollapseControl.addClass('uncollapsed');\n\t\t\t}\n\t\t}\n\t}\n\n}","///<reference path=\"../../../../node_modules/@types/ion.rangeslider/index.d.ts\"/>\nimport { Filter } from \"./Filter\";\nimport { Options } from \"../../types\";\n\ndeclare let mw: any;\n\nexport class NumberFilter extends Filter {\n\n\tprivate MODE_RANGE = 0;\n\tprivate MODE_MIN = 1;\n\tprivate MODE_MAX = 2;\n\tprivate MODE_SELECT = 3;\n\n\tprivate filterValueUpper: number = 0;\n\tprivate filterValueLower: number = 0;\n\tprivate mode = this.MODE_RANGE;\n\n\tpublic init() {\n\n\t\tlet values: number[] = this.getValues();\n\n\t\tlet { minValue, maxValue, precision } = this.getRangeParameters( values );\n\n\t\tlet sliderOptions: IonRangeSliderOptions = {\n\t\t\tprettify_enabled: false,\n\t\t\tforce_edges: true,\n\t\t\tgrid: true\n\t\t};\n\n\t\tif ( this.options.hasOwnProperty( 'values' ) ) {\n\t\t\tsliderOptions = this.adjustSliderOptionsFromValues( sliderOptions, values );\n\n\t\t} else {\n\t\t\tsliderOptions = this.adjustSliderOptionsFromRangeParameters( sliderOptions, minValue, maxValue, precision );\n\t\t}\n\n\t\tswitch( this.options[ 'sliders' ] ) {\n\n\t\t\tcase \"min\":\n\n\t\t\t\tthis.mode = this.MODE_MIN;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tcase \"max\":\n\n\t\t\t\tthis.mode = this.MODE_MAX;\n\t\t\t\tsliderOptions.from = sliderOptions.to;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tcase \"select\":\n\n\t\t\t\tthis.mode = this.MODE_SELECT;\n\t\t\t\tmaxValue = minValue;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tdefault: // == case \"range\"\n\n\t\t\t\tthis.mode = this.MODE_RANGE;\n\t\t\t\tsliderOptions.type = 'double';\n\t\t}\n\n\t\tthis.buildFilterControls( sliderOptions );\n\n\t\tthis.filterValueLower = minValue;\n\t\tthis.filterValueUpper = maxValue;\n\n\t\treturn this;\n\t}\n\n\tprivate adjustSliderOptionsFromRangeParameters( sliderOptions: IonRangeSliderOptions, minValue: number, maxValue: number, precision: number ) {\n\n\t\tsliderOptions.min = minValue;\n\t\tsliderOptions.max = maxValue;\n\t\tsliderOptions.step = this.getStep( precision );\n\t\tsliderOptions.grid_num = Math.min( 4, Math.round( ( maxValue - minValue ) / sliderOptions.step ) );\n\n\t\tsliderOptions.from = minValue;\n\t\tsliderOptions.to = maxValue;\n\n\t\tsliderOptions.onFinish = ( data: IonRangeSliderEvent ) => this.onFilterUpdated( data.from, data.to );\n\n\t\treturn sliderOptions;\n\t}\n\n\tprivate adjustSliderOptionsFromValues( sliderOptions: IonRangeSliderOptions, values: number[] ) {\n\n\t\tsliderOptions.values = values;\n\n\t\tsliderOptions.from = 0;\n\t\tsliderOptions.to = values.length - 1;\n\n\t\tsliderOptions.onFinish = ( data: IonRangeSliderEvent ) => this.onFilterUpdated( data.from_value, data.to_value );\n\n\t\treturn sliderOptions;\n\t}\n\n\tprivate getRangeParameters( values: number[] ) {\n\n\t\tlet minValue = values[ 0 ];\n\t\tlet maxValue = values[ values.length - 1 ];\n\t\tlet precision: number = this.getPrecision( minValue, maxValue );\n\n\t\tif ( !this.options.hasOwnProperty( 'values' ) ) {\n\t\t\tminValue = this.getMinSliderValue( minValue, precision );\n\t\t\tmaxValue = this.getMaxSliderValue( maxValue, precision );\n\t\t}\n\n\t\treturn { minValue, maxValue, precision };\n\t}\n\n\tprivate getValues(): number[] {\n\t\tlet values: number[];\n\t\tif ( this.options.hasOwnProperty( 'values' ) && this.options[ 'values' ][0] !== 'auto' ) {\n\t\t\tvalues =  this.options[ 'values' ]\n\t\t} else {\n\t\t\tvalues =  this.getSortedValues();\n\t\t}\n\n\t\tif ( values.length === 0 ) {\n\t\t\tvalues = [ 0, 0 ];\n\t\t} else if ( values.length === 1 ) {\n\t\t\tvalues.push( values[ 0 ] );\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tprivate buildFilterControls( sliderOptions: IonRangeSliderOptions ) {\n\n\t\tlet filterClassNames: any = {};\n\t\tfilterClassNames[ this.MODE_MIN.toString() ] = \"mode-min\";\n\t\tfilterClassNames[ this.MODE_MAX ] = \"mode-max\";\n\t\tfilterClassNames[ this.MODE_RANGE ] = \"mode-range\";\n\t\tfilterClassNames[ this.MODE_SELECT ] = \"mode-select\";\n\n\t\tlet filtercontrols = this.buildEmptyControl();\n\n\t\tlet slider = $( '<input type=\"text\" value=\"\" />' );\n\t\tlet sliderContainer = $( `<div class=\"filtered-number-slider ${filterClassNames[ this.mode ]}\" />` ).append( slider );\n\t\tfiltercontrols.append( sliderContainer );\n\n\t\tif ( this.options.hasOwnProperty( 'caption' ) ) {\n\t\t\tlet caption = `<div class=\"filtered-number-caption\">${this.options[ 'caption' ]}</div>`;\n\t\t\tfiltercontrols.append( caption );\n\t\t}\n\n\t\tmw.loader.using( 'ext.srf.filtered.slider' ).then( () => slider.ionRangeSlider( sliderOptions ) );\n\t}\n\n\tprivate getMinSliderValue( minValue: number, precision: number ) {\n\t\tlet requestedMin = this.options[ 'min' ];\n\n\t\tif ( requestedMin === undefined || isNaN( Number( requestedMin ) ) ) {\n\t\t\treturn Math.floor( minValue / precision ) * precision;\n\t\t}\n\n\t\treturn Math.min( requestedMin, minValue );\n\t}\n\n\tprivate getMaxSliderValue( maxValue: number, precision: number ) {\n\t\tlet requestedMax = this.options[ 'max' ];\n\n\t\tif ( requestedMax === undefined || isNaN( Number( requestedMax ) ) ) {\n\t\t\treturn Math.ceil( maxValue / precision ) * precision;\n\t\t}\n\n\t\treturn Math.max( requestedMax, maxValue );\n\t}\n\n\tprivate getPrecision( minValue: number, maxValue: number ): number {\n\t\tif ( maxValue - minValue > 0 ) {\n\t\t\treturn 10 ** ( Math.floor( Math.log( maxValue - minValue ) * Math.LOG10E ) - 1 );\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tprivate getStep( precision: number ): number {\n\n\t\tlet step = this.options[ 'step' ];\n\n\t\tif ( step !== undefined ) {\n\n\t\t\tstep = Number( step );\n\n\t\t\tif ( !isNaN( step ) ) {\n\t\t\t\treturn step;\n\t\t\t}\n\t\t}\n\n\t\treturn precision / 10;\n\t}\n\n\tprivate getRangeFromValues(): [ number, number ] {\n\n\t\tlet rows = this.controller.getData();\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tfor ( let rowId in rows ) {\n\n\t\t\tif ( rows[ rowId ].data.hasOwnProperty( this.filterId ) ) {\n\t\t\t\tlet values: number[] = rows[ rowId ].data[ this.filterId ].values;\n\t\t\t\tmin = Math.min( min, ...values );\n\t\t\t\tmax = Math.max( max, ...values );\n\t\t\t}\n\t\t}\n\n\t\treturn [ min, max ];\n\t}\n\n\tprivate getSortedValues(): number[] {\n\n\t\tlet valueArray: number[] = [];\n\t\tlet rows = this.controller.getData();\n\n\t\tfor ( let rowId in rows ) {\n\n\t\t\tlet cells = rows[ rowId ].data;\n\n\t\t\tif ( cells.hasOwnProperty( this.filterId ) ) {\n\n\t\t\t\tlet values = cells[ this.filterId ].values;\n\n\t\t\t\tfor ( let valueId in values ) {\n\n\t\t\t\t\tlet value = Number( values[ valueId ] );\n\n\t\t\t\t\tif ( valueArray.indexOf( value ) === -1 ) {\n\t\t\t\t\t\tvalueArray.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn valueArray.sort( ( a: any, b: any ) => a - b );\n\t}\n\n\tpublic onFilterUpdated( from: number, to: number ) {\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase this.MODE_MIN:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tbreak;\n\n\t\t\tcase this.MODE_MAX:\n\n\t\t\t\tthis.filterValueUpper = from;\n\t\t\t\tbreak;\n\n\t\t\tcase this.MODE_SELECT:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tthis.filterValueUpper = from;\n\t\t\t\tbreak;\n\n\t\t\tdefault: // case this.MODE_RANGE:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tthis.filterValueUpper = to;\n\t\t}\n\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\t\tlet rowdata = this.controller.getData()[ rowId ].data;\n\n\t\tif ( rowdata.hasOwnProperty( this.filterId ) && rowdata[ this.filterId ].values.length > 0 ) {\n\n\t\t\tfor ( let value of rowdata[ this.filterId ].values ) {\n\t\t\t\tif ( value >= this.filterValueLower && value <= this.filterValueUpper ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.isVisible( rowId );\n\t}\n\n}\n","///<reference path=\"../../../../node_modules/@types/select2/index.d.ts\"/>\n\nimport { Filter } from \"./Filter\";\n\ndeclare let mw: any;\n\nexport class ValueFilter extends Filter {\n\n\tprivate values: any = {};\n\tprivate visibleValues: string[] = [];\n\n\tprivate _useOr = true;\n\n\tpublic init() {\n\t\tthis.values = this.getSortedValues();\n\t\tthis.buildControl();\n\t}\n\n\tpublic useOr( useOr: boolean ) {\n\t\tthis._useOr = useOr;\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tprivate getSortedValues(): any {\n\n\t\t/** Map of value => label distinct values */\n\t\tlet distinctValues: any = {};\n\t\t/** Map of value => sort value distinct values */\n\t\tlet distinctSortValues: any = {};\n\n\t\tif ( this.options.hasOwnProperty( 'values' ) ) {\n\n\t\t\treturn this.options[ 'values' ].map(\n\t\t\t\t( item: string ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprintoutValue: item,\n\t\t\t\t\t\tformattedValue: item\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\n\t\t} else {\n\t\t\t// build filter values from available values in result set\n\t\t\tlet data = this.controller.getData();\n\t\t\tlet sortedEntries: any[] = [];\n\t\t\tfor ( let id in data ) {\n\n\t\t\t\tlet printoutValues: any = data[ id ][ 'printouts' ][ this.printrequestId ][ 'values' ];\n\t\t\t\tlet printoutFormattedValues = data[ id ][ 'printouts' ][ this.printrequestId ][ 'formatted values' ];\n\t\t\t\tlet printoutSortValues: any = data[ id ][ 'printouts' ][ this.printrequestId ][ 'sort values' ];\n\n\t\t\t\tfor ( let i in printoutValues ) {\n\t\t\t\t\tlet printoutFormattedValue = printoutFormattedValues[ i ];\n\n\t\t\t\t\tif ( printoutFormattedValue.indexOf( '<a' ) > -1 ) {\n\t\t\t\t\t\tprintoutFormattedValue = /<a.*>(.*?)<\\/a>/.exec( printoutFormattedValue )[ 1 ];\n\t\t\t\t\t}\n\n\t\t\t\t\tdistinctValues[ printoutValues[ i ] ] = printoutFormattedValue;\n\t\t\t\t\tdistinctSortValues[ printoutValues[ i ] ] = printoutSortValues[ i ];\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let printoutValue in distinctSortValues ) {\n\t\t\t\tsortedEntries.push( {\n\t\t\t\t\tprintoutValue: printoutValue,\n\t\t\t\t\tsortValue: distinctSortValues[ printoutValue ],\n\t\t\t\t\tformattedValue: distinctValues[ printoutValue ]\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tsortedEntries.sort(\n\t\t\t\t( a: any, b: any ) => {\n\t\t\t\t\treturn a.sortValue.localeCompare( b.sortValue );\n\t\t\t\t} );\n\t\t\treturn sortedEntries;\n\n\t\t}\n\n\t}\n\n\tprivate buildControl() {\n\n\t\tlet filtercontrols = this.buildEmptyControl();\n\n\t\tfiltercontrols = this.addControlForSwitches( filtercontrols );\n\n\t\tlet maxCheckboxes = this.options.hasOwnProperty( 'max checkboxes' ) ? this.options[ 'max checkboxes' ] : 5;\n\n\t\tif ( this.values.length > maxCheckboxes ) {\n\t\t\tfiltercontrols.append( this.getSelected2Control() );\n\t\t} else {\n\t\t\tfiltercontrols.append( this.getCheckboxesControl() );\n\t\t}\n\n\t}\n\n\tprivate getCheckboxesControl() {\n\n\t\tlet checkboxes = $( '<div class=\"filtered-value-checkboxes\" style=\"width: 100%;\">' );\n\n\t\t// insert options (checkboxes and labels)\n\t\tfor ( let value of this.values ) {\n\t\t\tcheckboxes.append( `<div class=\"filtered-value-option\"><label><input type=\"checkbox\" value=\"${value.printoutValue}\" ><div class=\"filtered-value-option-label\">${value.formattedValue || value.printoutValue}</div></label></div>` );\n\t\t}\n\n\t\t// attach event handler\n\t\tcheckboxes\n\t\t.on( 'change', ':checkbox', ( eventObject: JQueryEventObject ) => {\n\t\t\tlet checkboxElement = <HTMLInputElement> eventObject.currentTarget;\n\t\t\tthis.onFilterUpdated( checkboxElement.value, checkboxElement.checked );\n\t\t} );\n\n\t\treturn checkboxes;\n\t}\n\n\tprivate getSelected2Control() {\n\n\t\tlet select = $( '<select class=\"filtered-value-select\" style=\"width: 100%;\">' );\n\n\t\tlet data: IdTextPair[] = [];\n\n\t\t// insert options (checkboxes and labels) and attach event handlers\n\t\tfor ( let value of this.values ) {\n\t\t\t// Try to get label, if not fall back to value id\n\t\t\tlet label = value.printoutValue;\n\t\t\tdata.push( { id: value.printoutValue, text: label } );\n\n\t\t}\n\n\t\tmw.loader.using( 'ext.srf.filtered.value-filter.select' ).then( () => {\n\n\t\t\tselect.select2( {\n\t\t\t\tmultiple: true,\n\t\t\t\tplaceholder: mw.message( 'srf-filtered-value-filter-placeholder' ).text(),\n\t\t\t\tdata: data\n\t\t\t} );\n\n\t\t\tselect.on( \"select2:select\", ( e: any ) => {\n\t\t\t\tthis.onFilterUpdated( e.params.data.id, true );\n\t\t\t} );\n\n\t\t\tselect.on( \"select2:unselect\", ( e: any ) => {\n\t\t\t\tthis.onFilterUpdated( e.params.data.id, false );\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn select;\n\t}\n\n\tprivate addControlForSwitches( filtercontrols: JQuery ): JQuery {\n\t\t// insert switches\n\t\tlet switches = this.options.hasOwnProperty( 'switches' ) ? this.options[ 'switches' ] : undefined;\n\t\tif ( switches !== undefined && switches.length > 0 ) {\n\n\t\t\tlet switchControls = $( '<div class=\"filtered-value-switches\">' );\n\n\t\t\tif ( $.inArray( 'and or', switches ) >= 0 ) {\n\n\t\t\t\tlet andorControl = $( '<div class=\"filtered-value-andor\">' );\n\n\t\t\t\tlet orControl = this.getRadioControl( 'or', true );\n\t\t\t\tlet andControl = this.getRadioControl( 'and' );\n\n\t\t\t\tandorControl\n\t\t\t\t.append( orControl )\n\t\t\t\t.append( andControl )\n\t\t\t\t.appendTo( switchControls );\n\n\t\t\t\tandorControl\n\t\t\t\t.find( 'input' )\n\t\t\t\t.on( 'change', undefined, { 'filter': this }, ( eventObject: JQueryEventObject ) =>\n\t\t\t\t\teventObject.data.filter.useOr( eventObject.target.getAttribute('value' ) === 'or' )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tfiltercontrols.append( switchControls );\n\t\t}\n\n\t\treturn filtercontrols;\n\t}\n\n\tprivate getRadioControl( type: string, isChecked: boolean = false ) {\n\n\t\tlet checkedAttr = isChecked?'checked':'';\n\t\tlet labelText = mw.message( 'srf-filtered-value-filter-' + type ).text();\n\n\t\tlet controlText =\n\t\t\t`<label for=\"filtered-value-${type}-${this.printrequestId}\">` +\n\t\t\t`<input type=\"radio\" name=\"filtered-value-${this.printrequestId}\"  class=\"filtered-value-${type}\" id=\"filtered-value-${type}-${this.printrequestId}\" value=\"${type}\" ${checkedAttr}>` +\n\t\t\t`${labelText}</label>`;\n\n\t\treturn $( controlText );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\n\t\tif ( this.visibleValues.length === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet values: string[] = this.controller.getData()[ rowId ].printouts[ this.printrequestId ].values;\n\n\t\tif ( values.length === 0 ) {\n\t\t\treturn super.isVisible( rowId );\n\t\t}\n\n\n\t\tif ( this._useOr ) {\n\t\t\tfor ( let expectedValue of this.visibleValues ) {\n\t\t\t\tif ( values.indexOf( expectedValue ) >= 0 ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor ( let expectedValue of this.visibleValues ) {\n\t\t\t\tif ( values.indexOf( expectedValue ) < 0 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic onFilterUpdated( value: string, isChecked: boolean ) {\n\t\tlet index = this.visibleValues.indexOf( value );\n\n\t\tif ( isChecked && index === -1 ) {\n\t\t\tthis.visibleValues.push( value );\n\t\t} else if ( !isChecked && index >= 0 ) {\n\t\t\tthis.visibleValues.splice( index, 1 );\n\t\t}\n\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n}\n","import { Options } from \"../types\";\nimport { Controller } from \"./Controller\";\nimport { ViewSelector } from \"./ViewSelector\";\nimport { View } from \"./View/View\";\nimport { ListView } from \"./View/ListView\";\nimport { TableView } from \"./View/TableView\";\nimport { MapView } from \"./View/MapView\";\nimport { CalendarView } from \"./View/CalendarView\";\nimport { Filter } from \"./Filter/Filter\";\nimport { ValueFilter } from \"./Filter/ValueFilter\";\nimport { DistanceFilter } from \"./Filter/DistanceFilter\";\nimport { NumberFilter } from \"./Filter/NumberFilter\";\n\n/**\n * Central Filtered class\n *\n * Factory to setup everyhting else\n */\nexport class Filtered {\n\n\tprivate config: any;\n\tprivate target: JQuery;\n\n\tprivate viewTypes: { [key: string]: new( id: string, target: JQuery, controller: Controller, options?: any ) => View } = {\n\t\ttable: TableView,\n\t\tlist: ListView,\n\t\tmap: MapView,\n\t\tcalendar: CalendarView\n\t};\n\n\tprivate filterTypes: { [key: string]: new( id: string, target: JQuery, printrequestId: string, controller: Controller, options?: Options ) => Filter } = {\n\t\tvalue: ValueFilter,\n\t\tdistance: DistanceFilter,\n\t\tnumber: NumberFilter\n\t};\n\n\t/**\n\t *\n\t * @param target\n\t * @param config\n\t */\n\tpublic constructor( target: JQuery, config: any ) {\n\t\tthis.config = config;\n\t\tthis.target = target;\n\t}\n\n\tpublic run() {\n\n\t\tlet controller = new Controller( this.target, this.config.data, this.config.printrequests );\n\n\t\tthis.attachFilters( controller, this.target.children( 'div.filtered-filters' ) );\n\t\tthis.attachViewSelector( controller, this.target.find( 'div.filtered-views-selectors-container' ) );\n\t\tthis.attachViews( controller, this.target.find( 'div.filtered-views-container' ) );\n\n\t\t// lift-off\n\t\tcontroller.show();\n\n\t}\n\n\tprivate attachFilters( controller: Controller, filtersContainer: JQuery ) {\n\n\t\tfor ( let prId in this.config.printrequests ) {\n\n\t\t\tlet pr = this.config.printrequests[ prId ];\n\n\t\t\tif ( pr.hasOwnProperty( 'filters' ) ) {\n\n\t\t\t\tfor ( let filterid in pr.filters ) {\n\n\t\t\t\t\tif ( pr.filters.hasOwnProperty( filterid ) &&\n\t\t\t\t\t\tpr.filters[ filterid ].hasOwnProperty( 'type' ) &&\n\t\t\t\t\t\tthis.filterTypes.hasOwnProperty( pr.filters[ filterid ].type ) ) {\n\n\t\t\t\t\t\t//  target: JQuery, printrequest: string,\n\t\t\t\t\t\t// controller: Controller, options?: Options\n\t\t\t\t\t\tlet filter: Filter = new this.filterTypes[ pr.filters[ filterid ].type ]( filterid, filtersContainer.children( '#' + filterid ), prId, controller, pr.filters[ filterid ] );\n\n\t\t\t\t\t\tcontroller.attachFilter( filter );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprivate attachViewSelector( controller: Controller, viewSelectorContainer: JQuery ) {\n\t\tlet viewSelector = new ViewSelector( viewSelectorContainer, Object.keys( this.config.views ), controller );\n\t\tviewSelector.init();\n\t}\n\n\tprivate attachViews( controller: Controller, viewsContainer: JQuery ) {\n\n\t\t// attach views\n\t\tfor ( let viewid in this.config.views ) {\n\n\t\t\tlet viewtype = this.config.views[ viewid ][ 'type' ];\n\t\t\tlet viewHandlerClass = this.viewTypes.hasOwnProperty( viewtype ) ? this.viewTypes[ viewtype ] : View;\n\n\t\t\tlet view: View = new viewHandlerClass( viewid, viewsContainer.children( '#' + viewid ), controller, this.config.views[ viewid ] );\n\n\t\t\tview.init();\n\n\t\t\tcontroller.attachView( viewid, view );\n\n\t\t}\n\t}\n}\n","import { View } from \"./View\";\ndeclare let mw: any;\n\nexport class CalendarView extends View {\n\n\tprivate getI18N() {\n\t\treturn {\n\t\t\tmonthNames: [ mw.msg( 'january' ), mw.msg( 'february' ), mw.msg( 'march' ),\n\t\t\t\tmw.msg( 'april' ), mw.msg( 'may_long' ), mw.msg( 'june' ),\n\t\t\t\tmw.msg( 'july' ), mw.msg( 'august' ), mw.msg( 'september' ),\n\t\t\t\tmw.msg( 'october' ), mw.msg( 'november' ), mw.msg( 'december' )\n\t\t\t],\n\t\t\tmonthNamesShort: [ mw.msg( 'jan' ), mw.msg( 'feb' ), mw.msg( 'mar' ),\n\t\t\t\tmw.msg( 'apr' ), mw.msg( 'may' ), mw.msg( 'jun' ),\n\t\t\t\tmw.msg( 'jul' ), mw.msg( 'aug' ), mw.msg( 'sep' ),\n\t\t\t\tmw.msg( 'oct' ), mw.msg( 'nov' ), mw.msg( 'dec' )\n\t\t\t],\n\t\t\tdayNames: [ mw.msg( 'sunday' ), mw.msg( 'monday' ), mw.msg( 'tuesday' ),\n\t\t\t\tmw.msg( 'wednesday' ), mw.msg( 'thursday' ), mw.msg( 'friday' ), mw.msg( 'saturday' )\n\t\t\t],\n\t\t\tdayNamesShort: [ mw.msg( 'sun' ), mw.msg( 'mon' ), mw.msg( 'tue' ),\n\t\t\t\tmw.msg( 'wed' ), mw.msg( 'thu' ), mw.msg( 'fri' ), mw.msg( 'sat' )\n\t\t\t],\n\t\t\tbuttonText: {\n\t\t\t\ttoday: mw.msg( 'srf-ui-eventcalendar-label-today' ),\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-label-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-label-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-label-day' )\n\t\t\t}\n\t\t\t,\n\t\t\tallDayText: mw.msg( 'srf-ui-eventcalendar-label-allday' ),\n\t\t\ttimeFormat: {\n\t\t\t\t'': mw.msg( 'srf-ui-eventcalendar-format-time' ),\n\t\t\t\tagenda: mw.msg( 'srf-ui-eventcalendar-format-time-agenda' )\n\t\t\t}\n\t\t\t,\n\t\t\taxisFormat: mw.msg( 'srf-ui-eventcalendar-format-axis' ),\n\t\t\ttitleFormat: {\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-format-title-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-format-title-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-format-title-day' )\n\t\t\t}\n\t\t\t,\n\t\t\tcolumnFormat: {\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-format-column-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-format-column-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-format-column-day' )\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic init() {\n\n\t\tlet _i18n = this.getI18N();\n\n\t\t// initialize the calendar\n\t\tthis.target.fullCalendar( {\n\n\t\t\tfirstDay: this.options.firstDay,\n\t\t\tisRTL: this.options.isRTL,\n\t\t\tmonthNames: _i18n.monthNames,\n\t\t\tmonthNamesShort: _i18n.monthNamesShort,\n\t\t\tdayNames: _i18n.dayNames,\n\t\t\tdayNamesShort: _i18n.dayNamesShort,\n\t\t\tbuttonText: _i18n.buttonText,\n\t\t\tallDayText: _i18n.allDayText,\n\t\t\ttimeFormat: _i18n.timeFormat,\n\t\t\ttitleFormat: _i18n.titleFormat,\n\t\t\tcolumnFormat: _i18n.columnFormat\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\tprivate getEvent( rowId: any, rowData: any ) {\n\n\t\tlet eventdata: any = {\n\t\t\tid: rowId,\n\t\t\ttitle: rowData[ 'title' ],\n\t\t\tstart: rowData[ 'start' ],\n\t\t\tclassName: rowId\n\t\t};\n\n\t\tif ( rowData.hasOwnProperty( 'end' ) ) {\n\t\t\teventdata[ 'end' ] = rowData[ 'end' ];\n\t\t}\n\n\t\tif ( rowData.hasOwnProperty( 'url' ) ) {\n\t\t\teventdata[ 'url' ] = rowData[ 'url' ];\n\t\t}\n\n\t\treturn eventdata;\n\t}\n\n\tpublic showRows( rowIds: string[] ): any {\n\n\t\tlet events: any[] = [];\n\n\t\trowIds.forEach( ( rowId: string ) => {\n\n\t\t\tlet rowData = this.controller.getData()[ rowId ].data[ this.id ];\n\n\t\t\tif ( rowData.hasOwnProperty( 'start' ) ) {\n\t\t\t\tevents.push( this.getEvent( rowId, rowData ) );\n\t\t\t}\n\t\t} );\n\n\t\tthis.target.fullCalendar( 'addEventSource', events );\n\t}\n\n\tpublic hideRows( rowIds: string[] ): any {\n\t\tthis.target.fullCalendar( 'removeEvents', ( e: any ) => ( rowIds.indexOf( e._id ) >= 0 ) );\n\t}\n\n\tpublic show(): any {\n\t\tsuper.show();\n\t\tthis.target.fullCalendar( 'render' );\n\t}\n\n\tpublic hide(): any {\n\t\treturn super.hide();\n\t}\n\n}\n","import { View } from \"./View\";\nexport class ListView extends View {}\n","/// <reference types=\"leaflet\" />\n\nimport { View } from \"./View\";\nimport { Options } from \"../../types\"\n\ndeclare let mw: any;\n\nexport class MapView extends View {\n\n\tprivate map: L.Map = undefined;\n\tprivate icon: L.Icon = undefined;\n\tprivate markers: { [key: string]: L.Marker[] } = undefined;\n\tprivate markerClusterGroup: L.MarkerClusterGroup = undefined;\n\tprivate bounds: L.LatLngBounds = undefined;\n\tprivate initialized: boolean = false;\n\n\tprivate zoom: number = -1;\n\tprivate minZoom: number = -1;\n\tprivate maxZoom: number = -1;\n\n\tprivate leafletPromise: Promise<any> = undefined;\n\n\tpublic init() {\n\n\t\tlet data = this.controller.getData();\n\t\tlet markers: { [rowId: string]: L.Marker[] } = {};\n\n\t\tif ( this.options.hasOwnProperty( 'height' ) ) {\n\t\t\tthis.target.height( this.options.height );\n\t\t}\n\n\t\tthis.leafletPromise = mw.loader.using( 'ext.srf.filtered.map-view.leaflet' )\n\t\t.then( () => {\n\n\t\t\tlet bounds: L.LatLngBounds = undefined;\n\t\t\tlet disableClusteringAtZoom = this.getZoomForUnclustering();\n\n\t\t\tlet clusterOptions: Options = {\n\t\t\t\tanimateAddingMarkers: true,\n\t\t\t\tdisableClusteringAtZoom: disableClusteringAtZoom,\n\t\t\t\tspiderfyOnMaxZoom: disableClusteringAtZoom === null\n\t\t\t};\n\n\t\t\tclusterOptions = this.getOptions( [ 'maxClusterRadius', 'zoomToBoundsOnClick' ], clusterOptions );\n\n\t\t\tlet markerClusterGroup: L.MarkerClusterGroup = L.markerClusterGroup( clusterOptions );\n\n\t\t\tfor ( let rowId in data ) {\n\n\t\t\t\tif ( data[ rowId ][ 'data' ].hasOwnProperty( this.id ) ) {\n\t\t\t\t\tlet positions: L.LatLngLiteral[] = data[ rowId ][ 'data' ][ this.id ][ 'positions' ];\n\t\t\t\t\tmarkers[ rowId ] = [];\n\n\t\t\t\t\tfor ( let pos of positions ) {\n\n\t\t\t\t\t\tbounds = ( bounds === undefined ) ? new L.LatLngBounds( pos, pos ) : bounds.extend( pos );\n\n\t\t\t\t\t\tlet marker = this.getMarker( pos, data[ rowId ] );\n\t\t\t\t\t\tmarkers[ rowId ].push( marker );\n\t\t\t\t\t\tmarkerClusterGroup.addLayer( marker );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markerClusterGroup = markerClusterGroup;\n\t\t\tthis.markers = markers;\n\t\t\tthis.bounds = ( bounds === undefined ) ? new L.LatLngBounds( [ -180, -90 ], [ 180, 90 ] ) : bounds;\n\t\t} );\n\n\t\treturn super.init();\n\t}\n\n\tprivate getZoomForUnclustering() {\n\n\t\tif ( this.options.hasOwnProperty( 'marker cluster' ) && this.options[ 'marker cluster' ] === false ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ( this.options.hasOwnProperty( 'marker cluster max zoom' ) ) {\n\t\t\treturn this.options[ 'marker cluster max zoom' ] + 1;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate getIcon() {\n\t\tif ( this.icon === undefined ) {\n\n\t\t\tlet iconPath = this.controller.getPath() + 'css/images/';\n\n\t\t\tthis.icon = new L.Icon( {\n\t\t\t\t'iconUrl': iconPath + 'marker-icon.png',\n\t\t\t\t'iconRetinaUrl': iconPath + 'marker-icon-2x.png',\n\t\t\t\t'shadowUrl': iconPath + 'marker-shadow.png',\n\t\t\t\t'iconSize': [ 25, 41 ],\n\t\t\t\t'iconAnchor': [ 12, 41 ],\n\t\t\t\t'popupAnchor': [ 1, -34 ],\n\t\t\t\t// 'tooltipAnchor': [16, -28],\n\t\t\t\t'shadowSize': [ 41, 41 ]\n\t\t\t} );\n\t\t}\n\n\t\treturn this.icon;\n\t}\n\n\tprivate getMarker( latLng: L.LatLngExpression, row: any ) {\n\t\tlet title = undefined;\n\t\tlet popup = [];\n\n\t\t// TODO: Use <div> instead of <b> and do CSS styling\n\n\t\tfor ( let prId in row[ 'printouts' ] ) {\n\t\t\tlet printrequest = (this.controller.getPrintRequests())[ prId ];\n\n\t\t\tif ( ! printrequest.hasOwnProperty('hide') || printrequest.hide === false ) {\n\t\t\t\tlet printouts = row[ 'printouts' ][ prId ];\n\n\t\t\t\tif ( title === undefined ) {\n\t\t\t\t\ttitle = printouts[ 'values' ].join( ', ' );\n\t\t\t\t\tpopup.push( '<b>' + printouts[ 'formatted values' ].join( ', ' ) + '</b>' );\n\t\t\t\t} else {\n\t\t\t\t\tpopup.push( (printouts.label ? '<b>' + printouts.label + ':</b> ' : '') + printouts[ 'formatted values' ].join( ', ' ) )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet marker = L.marker( latLng, { title: title, alt: title } );\n\t\tmarker.bindPopup( popup.join( '<br>' ) );\n\n\t\tmarker.setIcon( this.getIcon() );\n\t\treturn marker;\n\t}\n\n\tpublic lateInit() {\n\n\t\tif ( this.initialized ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initialized = true;\n\n\t\tlet that = this;\n\n\t\tthis.leafletPromise.then( () => {\n\n\t\t\tlet mapOptions: Options = {\n\t\t\t\tcenter: this.bounds !== undefined ? this.bounds.getCenter() : [ 0, 0 ]\n\t\t\t};\n\n\t\t\tmapOptions = that.getOptions( [ 'zoom', 'minZoom', 'maxZoom' ], mapOptions );\n\n\t\t\t// TODO: Limit zoom values to map max zoom\n\n\t\t\tthat.map = L.map( that.getTargetElement().get( 0 ), mapOptions );\n\t\t\tthat.map.addLayer( that.markerClusterGroup );\n\n\t\t\tif ( this.options.hasOwnProperty( 'map provider' ) ) {\n\t\t\t\tL.tileLayer.provider( this.options[ 'map provider' ] ).addTo( that.map );\n\t\t\t}\n\n\t\t\tif ( !mapOptions.hasOwnProperty( 'zoom' ) ) {\n\t\t\t\tthat.map.fitBounds( that.bounds );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tpublic getOptions( keys: string[], defaults: Options = {} ) {\n\n\t\tfor ( let key of keys ) {\n\t\t\tif ( this.options.hasOwnProperty( key ) ) {\n\t\t\t\tdefaults[ key ] = this.options[ key ];\n\t\t\t}\n\t\t}\n\n\t\treturn defaults;\n\t}\n\n\tpublic showRows( rowIds: string[] ) {\n\t\tthis.leafletPromise.then( () => {\n\t\t\tthis.manipulateLayers( rowIds, ( layers: L.Layer[] ) => {\n\t\t\t\tthis.markerClusterGroup.addLayers( layers )\n\t\t\t} )\n\t\t} );\n\t}\n\n\tpublic hideRows( rowIds: string[] ) {\n\t\tthis.leafletPromise.then( () => {\n\t\t\tthis.manipulateLayers( rowIds, ( layers: L.Layer[] ) => {\n\t\t\t\tthis.markerClusterGroup.removeLayers( layers )\n\t\t\t} )\n\t\t} );\n\t}\n\n\tprivate manipulateLayers( rowIds: string[], cb: ( layers: L.Layer[] ) => void ) {\n\n\t\tlet layersFromRowIds = this.getLayersFromRowIds( rowIds );\n\n\t\tif ( layersFromRowIds.length > 0 ) {\n\t\t\tcb( layersFromRowIds );\n\t\t}\n\n\t}\n\n\tprivate getLayersFromRowIds( rowIds: string[] ) {\n\t\treturn this.flatten( this.getLayersFromRowIdsRaw( rowIds ) );\n\t}\n\n\tprivate getLayersFromRowIdsRaw( rowIds: string[] ) {\n\t\treturn rowIds.map( ( rowId: string ) => this.markers[ rowId ] ? this.markers[ rowId ] : [] );\n\t}\n\n\tprivate flatten( markers: L.Layer[][] ): L.Layer[] {\n\t\treturn markers.reduce( ( result: L.Layer[], layers: L.Layer[] ) => result.concat( layers ), [] );\n\t}\n\n\tpublic show() {\n\t\tsuper.show();\n\t\tthis.lateInit();\n\t}\n\n}\n","import { View } from \"./View\";\nexport class TableView extends View {}","import { Options } from \"../../types\";\nimport { Controller } from \"../Controller\";\n\nexport class View {\n\n\tprotected id: string = undefined;\n\tprotected target: JQuery = undefined;\n\tprotected controller: Controller = undefined;\n\tprotected options: Options = undefined;\n\n\tpublic constructor( id: string, target: JQuery, c: Controller, options: Options = {} ) {\n\t\tthis.id = id;\n\t\tthis.target = target;\n\t\tthis.controller = c;\n\t\tthis.options = options;\n\t}\n\n\tpublic init() {}\n\n\tpublic getTargetElement(): JQuery {\n\t\treturn this.target;\n\t}\n\n\tpublic showRows( rowIds: string[] ) {\n\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\tthis.target.find( '.' + rowId ).slideDown( 400 );\n\t\t} );\n\t}\n\n\tpublic hideRows( rowIds: string[] ) {\n\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\tthis.target.find( '.' + rowId ).slideUp( 400 );\n\t\t} );\n\t}\n\n\tpublic show() {\n\t\tthis.target.show();\n\t}\n\n\tpublic hide() {\n\t\tthis.target.hide();\n\t}\n}\n","import { Controller } from \"./Controller\";\nexport class ViewSelector {\n\n\tprivate target: JQuery = undefined;\n\tprivate viewIDs: string[] = undefined;\n\n\tprivate controller: Controller = undefined;\n\n\tpublic constructor( target: JQuery, viewIDs: string[], controller: Controller ) {\n\t\tthis.target = target;\n\t\tthis.viewIDs = viewIDs;\n\t\tthis.controller = controller;\n\t}\n\n\tpublic init() {\n\t\tif ( this.viewIDs.length > 1 ) {\n\t\t\tthis.viewIDs.forEach( ( id: string) => { this.target.on( 'click', '.' + id, { 'target': id, 'controller' : this.controller }, ViewSelector.onSelectorSelected ); } );\n\t\t\tthis.target.children().first().addClass( 'selected');\n\t\t\tthis.target.show();\n\t\t}\n\t}\n\n\tprivate static onSelectorSelected( event: JQueryEventObject ) {\n\n\t\tevent.data.controller.onViewSelected( event.data.target );\n\n\t\t$( event.target )\n\t\t.addClass( 'selected')\n\t\t.siblings().removeClass( 'selected' );\n\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n\n}","import { Filtered } from \"./Filtered/Filtered\";\n\ndeclare let mw: any;\nlet config = mw.config.get( 'srfFilteredConfig' );\n\nfor ( let id in config ) {\n\tif ( config.hasOwnProperty( id ) ) {\n\t\tlet f = new Filtered( $( '#' + id ), config[ id ] );\n\t\tf.run();\n\t}\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJyZXNvdXJjZXMvdHMvRmlsdGVyZWQvQ29udHJvbGxlci50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9GaWx0ZXIvRGlzdGFuY2VGaWx0ZXIudHMiLCJyZXNvdXJjZXMvdHMvRmlsdGVyZWQvRmlsdGVyL0ZpbHRlci50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9GaWx0ZXIvTnVtYmVyRmlsdGVyLnRzIiwicmVzb3VyY2VzL3RzL0ZpbHRlcmVkL0ZpbHRlci9WYWx1ZUZpbHRlci50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9GaWx0ZXJlZC50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L0NhbGVuZGFyVmlldy50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L0xpc3RWaWV3LnRzIiwicmVzb3VyY2VzL3RzL0ZpbHRlcmVkL1ZpZXcvTWFwVmlldy50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L1RhYmxlVmlldy50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L1ZpZXcudHMiLCJyZXNvdXJjZXMvdHMvRmlsdGVyZWQvVmlld1NlbGVjdG9yLnRzIiwicmVzb3VyY2VzL3RzL2Jvb3RzdHJhcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUNBQSxnQ0FBZ0M7O0FBS2hDLG9DQUFtQztBQUduQztJQVVDLG9CQUFvQixNQUFjLEVBQUUsSUFBZ0IsRUFBRSxhQUFzQjtRQVRwRSxXQUFNLEdBQVcsU0FBUyxDQUFDO1FBQzNCLGtCQUFhLEdBQVcsU0FBUyxDQUFDO1FBRWxDLFVBQUssR0FBNEIsRUFBRSxDQUFDO1FBQ3BDLFlBQU8sR0FBOEIsRUFBRSxDQUFDO1FBQ3hDLGdCQUFXLEdBQVMsU0FBUyxDQUFDO1FBS3JDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBRXJCLEVBQUUsQ0FBQyxDQUFFLElBQUksQ0FBQyxNQUFN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RUFBRSxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUU7Z0JBQ25FLEVBQUUsQ0FBQyxHQUFHLENBQUUsS0FBSyxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLEtBQUssQ0FBRTtnQkFDakQsRUFBRSxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLEtBQUssQ0FBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsS0FBSyxDQUFFO2dCQUNqRCxFQUFFLENBQUMsR0FBRyxDQUFFLEtBQUssQ0FBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsS0FBSyxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUU7YUFDakQ7WUFDRCxRQUFRLEVBQUUsQ0FBRSxFQUFFLENBQUMsR0FBRyxDQUFFLFFBQVEsQ0FBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsUUFBUSxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxTQUFTLENBQUU7Z0JBQ3RFLEVBQUUsQ0FBQyxHQUFHLENBQUUsV0FBVyxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxVQUFVLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLFFBQVEsQ0FBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsVUFBVSxDQUFFO2FBQ3JGO1lBQ0QsYUFBYSxFQUFFLENBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLEtBQUssQ0FBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsS0FBSyxDQUFFO2dCQUNqRSxFQUFFLENBQUMsR0FBRyxDQUFFLEtBQUssQ0FBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUUsS0FBSyxDQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFFLEtBQUssQ0FBRTthQUNsRTtZQUNELFVB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QztBQUFELENBakNBLEFBaUNDLElBQUE7QUFqQ1ksb0NBQVk7Ozs7O0FDRHpCLGdEQUErQztBQUcvQyxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBRSxtQkFBbUIsQ0FBRSxDQUFDO0FBRWxELEdBQUcsQ0FBQyxDQUFFLElBQUksRUFBRSxJQUFJLE1BQU8sQ0FBQyxDQUFDLENBQUM7SUFDekIsRUFBRSxDQUFDLENBQUUsTUFBTSxDQUFDLGNBQWMsQ0FBRSxFQUFFLENBQUcsQ0FBQyxDQUFDLENBQUM7UUFDbkMsSUFBSSxDQUFDLEdBQUcsSUFBSSxtQkFBUSxDQUFFLENBQUMsQ0FBRSxHQUFHLEdBQUcsRUFBRSxDQUFFLEVBQUUsTUFBTSxDQUFFLEVBQUUsQ0FBRSxDQUFFLENBQUM7UUFDcEQsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ1QsQ0FBQztBQUNGLENBQUMiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiLy8vIDxyZWZlcmVuY2UgdHlwZXM9XCJqcXVlcnlcIiAvPlxuXG5pbXBvcnQgeyBPcHRpb25zLCBSZXN1bHREYXRhIH0gZnJvbSBcIi4uL3R5cGVzXCI7XG5kZWNsYXJlIGxldCBzcmY6IGFueTtcblxuaW1wb3J0IHsgVmlldyB9IGZyb20gXCIuL1ZpZXcvVmlld1wiO1xuaW1wb3J0IHsgRmlsdGVyIH0gZnJvbSBcIi4vRmlsdGVyL0ZpbHRlclwiO1xuXG5leHBvcnQgY2xhc3MgQ29udHJvbGxlciB7XG5cdHByaXZhdGUgdGFyZ2V0OiBKUXVlcnkgPSB1bmRlZmluZWQ7XG5cdHByaXZhdGUgZmlsdGVyU3Bpbm5lcjogSlF1ZXJ5ID0gdW5kZWZpbmVkO1xuXG5cdHByaXZhdGUgdmlld3M6IHsgW2tleTogc3RyaW5nXTogVmlldyB9ID0ge307XG5cdHByaXZhdGUgZmlsdGVyczogeyBba2V5OiBzdHJpbmddOiBGaWx0ZXIgfSA9IHt9O1xuXHRwcml2YXRlIGN1cnJlbnRWaWV3OiBWaWV3ID0gdW5kZWZpbmVkO1xuXHRwcml2YXRlIGRhdGE6IFJlc3VsdERhdGE7XG5cdHByaXZhdGUgcHJpbnRSZXF1ZXN0czogT3B0aW9ucztcblxuXHRwdWJsaWMgY29uc3RydWN0b3IoIHRhcmdldDogSlF1ZXJ5LCBkYXRhOiBSZXN1bHREYXRhLCBwcmludFJlcXVlc3RzOiBPcHRpb25zICkge1xuXHRcdHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuXG5cdFx0aWYgKCB0aGlzLnRhcmdldCAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dGhpcy5maWx0ZXJTcGlubmVyID0gdGhpcy50YXJnZXQuZmluZCggJ2Rpdi5maWx0ZXJlZC1maWx0ZXItc3Bpbm5lcicgKTtcblx0XHR9XG5cblx0XHR0aGlzLmRhdGEgPSBkYXRhO1xuXHRcdHRoaXMucHJpbnRSZXF1ZXN0cyA9IHByaW50UmVxdWVzdHM7XG5cblx0XHRmb3IgKCBsZXQgcm93SWQgaW4gdGhpcy5kYXRhICkge1xuXHRcdFx0aWYgKCAhdGhpcy5kYXRhWyByb3dJZCBdLmhhc093blByb3BlcnR5KCAndmlzaWJsZScgKSApIHtcblx0XHRcdFx0dGhpcy5kYXRhWyByb3dJZCBdLnZpc2libGUgPSB7fTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRwdWJsaWMgZ2V0RGF0YSgpOiBhbnkge1xuXHRcdHJldHVybiB0aGlzLmRhdGE7XG5cdH1cblxuXHRwdWJsaWMgZ2V0UHJpbnRSZXF1ZXN0cygpOiBPcHRpb25zIHtcblx0XHRyZXR1cm4gdGhpcy5wcmludFJlcXVlc3RzO1xuXHR9XG5cblx0cHVibGljIGdldFBhdGgoKSB7XG5cdFx0cmV0dXJuIHNyZi5zZXR0aW5ncy5nZXQoICdzcmZnU2NyaXB0UGF0aCcgKSArICcvZm9ybWF0cy9maWx0ZXJlZC9yZXNvdXJjZXMvJztcblx0fVxuXG5cdHB1YmxpYyBhdHRhY2hWaWV3KCB2aWV3aWQ6IHN0cmluZywgdmlldzogVmlldyApIHtcblxuXHRcdHRoaXMudmlld3NbIHZpZXdpZCBdID0gdmlldztcblxuXHRcdGlmICggdGhpcy5jdXJyZW50VmlldyA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dGhpcy5jdXJyZW50VmlldyA9IHZpZXc7XG5cdFx0XHR2aWV3LnNob3coKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dmlldy5oaWRlKCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblxuXHRwdWJsaWMgZ2V0Vmlldyggdmlld0lkOiBzdHJpbmcgKTogVmlldyB7XG5cdFx0cmV0dXJuIHRoaXMudmlld3NbIHZpZXdJZCBdO1xuXHR9XG5cblx0cHVibGljIGF0dGFjaEZpbHRlciggZmlsdGVyOiBGaWx0ZXIgKTogSlF1ZXJ5UHJvbWlzZTwgdm9pZCA+IHtcblx0XHRsZXQgZmlsdGVySWQgPSBmaWx0ZXIuZ2V0SWQoKTtcblxuXHRcdHRoaXMuZmlsdGVyc1sgZmlsdGVySWQgXSA9IGZpbHRlcjtcblxuXHRcdGZpbHRlci5pbml0KCk7XG5cblx0XHRyZXR1cm4gdGhpcy5vbkZpbHRlclVwZGF0ZWQoIGZpbHRlcklkICk7XG5cdH1cblxuXHRwdWJsaWMgZ2V0RmlsdGVyKCBmaWx0ZXJJZDogc3RyaW5nICk6IEZpbHRlciB7XG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyc1sgZmlsdGVySWQgXTtcblx0fVxuXG5cdHB1YmxpYyBzaG93KCkge1xuXHRcdHRoaXMuaW5pdGlhbGl6ZUZpbHRlcnMoKTtcblx0XHR0aGlzLnRhcmdldC5jaGlsZHJlbiggJy5maWx0ZXJlZC1zcGlubmVyJyApLnJlbW92ZSgpO1xuXHRcdHRoaXMudGFyZ2V0LmNoaWxkcmVuKCkuc2hvdygpO1xuXHRcdHRoaXMuc3dpdGNoVG9WaWV3KCB0aGlzLmN1cnJlbnRWaWV3ICk7XG5cdH1cblxuXHRwcml2YXRlIHN3aXRjaFRvVmlldyggdmlldzogVmlldyApIHtcblxuXHRcdGlmICggdGhpcy5jdXJyZW50VmlldyBpbnN0YW5jZW9mIFZpZXcgKSB7XG5cdFx0XHR0aGlzLmN1cnJlbnRWaWV3LmhpZGUoKTtcblx0XHR9XG5cblx0XHR0aGlzLmN1cnJlbnRWaWV3ID0gdmlldztcblxuXHRcdGlmICggdGhpcy5jdXJyZW50VmlldyBpbnN0YW5jZW9mIFZpZXcgKSB7XG5cdFx0XHR2aWV3LnNob3coKTtcblx0XHR9XG5cblx0fVxuXG5cdHByaXZhdGUgaW5pdGlhbGl6ZUZpbHRlcnMoKSB7XG5cdFx0bGV0IHRvU2hvdzogc3RyaW5nW10gPSBbXTtcblx0XHRsZXQgdG9IaWRlOiBzdHJpbmdbXSA9IFtdO1xuXG5cdFx0Zm9yICggbGV0IHJvd0lkIGluIHRoaXMuZGF0YSApIHtcblx0XHRcdGZvciAoIGxldCBmaWx0ZXJJZCBpbiB0aGlzLmZpbHRlcnMgKSB7XG5cdFx0XHRcdHRoaXMuZGF0YVsgcm93SWQgXS52aXNpYmxlWyBmaWx0ZXJJZCBdID0gdGhpcy5maWx0ZXJzWyBmaWx0ZXJJZCBdLmlzRGlzYWJsZWQoKSB8fCB0aGlzLmZpbHRlcnNbIGZpbHRlcklkIF0uaXNWaXNpYmxlKCByb3dJZCApO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCB0aGlzLmlzVmlzaWJsZSggcm93SWQgKSApIHtcblx0XHRcdFx0dG9TaG93LnB1c2goIHJvd0lkICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0b0hpZGUucHVzaCggcm93SWQgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHR0aGlzLmhpZGVSb3dzKCB0b0hpZGUgKTtcblx0XHR0aGlzLnNob3dSb3dzKCB0b1Nob3cgKTtcblx0fVxuXG5cdHB1YmxpYyBvblZpZXdTZWxlY3RlZCggdmlld0lEOiBzdHJpbmcgKSB7XG5cdFx0dGhpcy5zd2l0Y2hUb1ZpZXcoIHRoaXMudmlld3NbIHZpZXdJRCBdICk7XG5cdH1cblxuXHRwdWJsaWMgb25GaWx0ZXJVcGRhdGVkKCBmaWx0ZXJJZDogc3RyaW5nICk6IEpRdWVyeVByb21pc2U8IHZvaWQgPiB7XG5cblx0XHRyZXR1cm4gdGhpcy5zaG93U3Bpbm5lcigpXG5cdFx0LnRoZW4oKCkgPT4ge1xuXG5cdFx0XHQvLyBUT0RPOiBPcHRpbWl6ZSB0aGlzIVxuXG5cdFx0XHRsZXQgdG9TaG93OiBzdHJpbmdbXSA9IFtdO1xuXHRcdFx0bGV0IHRvSGlkZTogc3RyaW5nW10gPSBbXTtcblxuXHRcdFx0Zm9yICggbGV0IHJvd0lkIGluIHRoaXMuZGF0YSApIHtcblx0XHRcdFx0bGV0IG9sZFZpc2libGU6IGJvb2xlYW4gPSB0aGlzLmRhdGFbIHJvd0lkIF0udmlzaWJsZVsgZmlsdGVySWQgXTtcblx0XHRcdFx0bGV0IG5ld1Zpc2libGU6IGJvb2xlYW4gPSB0aGlzLmZpbHRlcnNbIGZpbHRlcklkIF0uaXNEaXNhYmxlZCgpIHx8IHRoaXMuZmlsdGVyc1sgZmlsdGVySWQgXS5pc1Zpc2libGUoIHJvd0lkICk7XG5cblx0XHRcdFx0aWYgKCBvbGRWaXNpYmxlICE9PSBuZXdWaXNpYmxlICkge1xuXG5cdFx0XHRcdFx0dGhpcy5kYXRhWyByb3dJZCBdLnZpc2libGVbIGZpbHRlcklkIF0gPSBuZXdWaXNpYmxlO1xuXG5cdFx0XHRcdFx0aWYgKCBuZXdWaXNpYmxlICYmIHRoaXMuaXNWaXNpYmxlKCByb3dJZCApICkge1xuXHRcdFx0XHRcdFx0dG9TaG93LnB1c2goIHJvd0lkICk7XG5cdFx0XHRcdFx0XHQvLyBjb250cm9sbGVyLnNob3dSb3coIHJvd0lkICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRvSGlkZS5wdXNoKCByb3dJZCApO1xuXHRcdFx0XHRcdFx0Ly8gY29udHJvbGxlci5oaWRlUm93KCByb3dJZCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLmhpZGVSb3dzKCB0b0hpZGUgKTtcblx0XHRcdHRoaXMuc2hvd1Jvd3MoIHRvU2hvdyApO1xuXHRcdH0pXG5cdFx0LnRoZW4oICgpID0+IHsgdGhpcy5oaWRlU3Bpbm5lcigpIH0gKTtcblx0fVxuXG5cdHB1YmxpYyBpc1Zpc2libGUoIHJvd0lkOiBhbnkgKSB7XG5cdFx0Zm9yICggbGV0IGZpbHRlcklkIGluIHRoaXMuZGF0YVsgcm93SWQgXS52aXNpYmxlICkge1xuXHRcdFx0aWYgKCAhdGhpcy5kYXRhWyByb3dJZCBdLnZpc2libGVbIGZpbHRlcklkIF0gKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRwcml2YXRlIGhpZGVSb3dzKCByb3dJZHM6IHN0cmluZ1tdICkge1xuXHRcdGlmICggcm93SWRzLmxlbmd0aCA9PT0gMCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0Zm9yICggbGV0IHZpZXdJZCBpbiB0aGlzLnZpZXdzICkge1xuXHRcdFx0dGhpcy52aWV3c1sgdmlld0lkIF0uaGlkZVJvd3MoIHJvd0lkcyApO1xuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgc2hvd1Jvd3MoIHJvd0lkczogc3RyaW5nW10gKSB7XG5cdFx0aWYgKCByb3dJZHMubGVuZ3RoID09PSAwICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRmb3IgKCBsZXQgdmlld0lkIGluIHRoaXMudmlld3MgKSB7XG5cdFx0XHR0aGlzLnZpZXdzWyB2aWV3SWQgXS5zaG93Um93cyggcm93SWRzICk7XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBzaG93U3Bpbm5lcigpOiBKUXVlcnlQcm9taXNlPCB2b2lkID4ge1xuXHRcdHJldHVybiB0aGlzLmFuaW1hdGVTcGlubmVyKCk7XG5cdH1cblxuXHRwcml2YXRlIGhpZGVTcGlubmVyKCk6IEpRdWVyeVByb21pc2U8IHZvaWQgPiB7XG5cdFx0cmV0dXJuIHRoaXMuYW5pbWF0ZVNwaW5uZXIoIGZhbHNlICk7XG5cdH1cblxuXHRwcml2YXRlIGFuaW1hdGVTcGlubmVyKCBzaG93OiBib29sZWFuID0gdHJ1ZSApOiBKUXVlcnlQcm9taXNlPCB2b2lkID4ge1xuXG5cdFx0aWYgKCB0aGlzLmZpbHRlclNwaW5uZXIgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHJldHVybiBqUXVlcnkud2hlbigpO1xuXHRcdH1cblxuXHRcdGlmICggc2hvdyApIHtcblx0XHRcdHJldHVybiB0aGlzLmZpbHRlclNwaW5uZXIuZmFkZUluKCAyMDAgKS5wcm9taXNlKCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyU3Bpbm5lci5mYWRlT3V0KCAyMDAgKS5wcm9taXNlKCk7XG5cdH1cblxufVxuIiwiaW1wb3J0IHsgRmlsdGVyIH0gZnJvbSBcIi4vRmlsdGVyXCI7XG5cbmRlY2xhcmUgbGV0IG13OiBhbnk7XG5cbmV4cG9ydCBjbGFzcyBEaXN0YW5jZUZpbHRlciBleHRlbmRzIEZpbHRlciB7XG5cblx0cHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgZWFydGhSYWRpdXM6IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0gPSB7XG5cdFx0bTogNjM3MTAwOC44LFxuXHRcdGttOiA2MzcxLjAwODgsXG5cdFx0bWk6IDM5NTguNzYxMyxcblx0XHRubTogMzQ0MC4wNjk1LFxuXHRcdMOFOiA2MzcxMDA4ODAwMDAwMDAwMFxuXHR9O1xuXG5cdHByaXZhdGUgZWFydGhSYWRpdXNWYWx1ZTogbnVtYmVyID0gRGlzdGFuY2VGaWx0ZXIuZWFydGhSYWRpdXMua207XG5cdHByaXZhdGUgZmlsdGVyVmFsdWU6IG51bWJlciA9IDA7XG5cblx0cHVibGljIGluaXQoKSB7XG5cblx0XHRsZXQgdmFsdWVzID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKTtcblxuXHRcdGxldCBvcmlnaW4gPSB0aGlzLm9wdGlvbnNbICdvcmlnaW4nIF07XG5cblx0XHRpZiAoICEoIG9yaWdpbiAhPT0gdW5kZWZpbmVkICYmIG9yaWdpbi5oYXNPd25Qcm9wZXJ0eSggJ2xhdCcgKSAmJiBvcmlnaW4uaGFzT3duUHJvcGVydHkoICdsbmcnICkgKSApIHtcblx0XHRcdHRoaXMudGFyZ2V0LmRldGFjaCgpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGxldCB1bml0ID0gJ2ttJztcblxuXHRcdGlmICggdGhpcy5vcHRpb25zWyAndW5pdCcgXSAmJiBEaXN0YW5jZUZpbHRlci5lYXJ0aFJhZGl1c1sgdGhpcy5vcHRpb25zWyAndW5pdCcgXSBdICkge1xuXHRcdFx0dW5pdCA9IHRoaXMub3B0aW9uc1sgJ3VuaXQnIF07XG5cdFx0fVxuXG5cdFx0dGhpcy5lYXJ0aFJhZGl1c1ZhbHVlID0gRGlzdGFuY2VGaWx0ZXIuZWFydGhSYWRpdXNbIHVuaXQgXTtcblxuXHRcdGxldCBtYXhWYWx1ZTogbnVtYmVyID0gdGhpcy51cGRhdGVEaXN0YW5jZXMoIG9yaWdpbiApO1xuXG5cdFx0bGV0IHByZWNpc2lvbiA9IDEwICoqICggTWF0aC5mbG9vciggTWF0aC5sb2coIG1heFZhbHVlICkgKiBNYXRoLkxPRzEwRSApIC0gMSk7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9uc1sgJ21heCcgXSAhPT0gdW5kZWZpbmVkICYmIHRoaXMub3B0aW9uc1sgJ21heCcgXSA+IG1heFZhbHVlICkge1xuXHRcdFx0bWF4VmFsdWUgPSB0aGlzLm9wdGlvbnNbICdtYXgnIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1heFZhbHVlID0gTWF0aC5jZWlsKCBtYXhWYWx1ZSAvIHByZWNpc2lvbiApICogcHJlY2lzaW9uO1xuXHRcdH1cblxuXHRcdHRoaXMuZmlsdGVyVmFsdWUgPSB0aGlzLm9wdGlvbnNbICdpbml0aWFsIHZhbHVlJyBdID8gTWF0aC5taW4oIHRoaXMub3B0aW9uc1sgJ2luaXRpYWwgdmFsdWUnIF0sIG1heFZhbHVlICkgOiBtYXhWYWx1ZTtcblxuXHRcdC8vIGJ1aWxkIGZpbHRlciBjb250cm9sc1xuXHRcdGxldCBmaWx0ZXJjb250cm9scyA9IHRoaXMuYnVpbGRFbXB0eUNvbnRyb2woKTtcblxuXHRcdGxldCByZWFkb3V0ID0gJCggJzxkaXYgY2xhc3M9XCJmaWx0ZXJlZC1kaXN0YW5jZS1yZWFkb3V0XCI+JyArIHRoaXMuZmlsdGVyVmFsdWUgKyAnPC9kaXY+JyApO1xuXG5cdFx0bGV0IHRhYmxlID0gJCggJzx0YWJsZSBjbGFzcz1cImZpbHRlcmVkLWRpc3RhbmNlLXRhYmxlXCI+PHRib2R5Pjx0cj48dGQgY2xhc3M9XCJmaWx0ZXJlZC1kaXN0YW5jZS1taW4tY2VsbFwiPjA8L3RkPicgK1xuXHRcdFx0Jzx0ZCBjbGFzcz1cImZpbHRlcmVkLWRpc3RhbmNlLXNsaWRlci1jZWxsXCI+PGRpdiBjbGFzcz1cImZpbHRlcmVkLWRpc3RhbmNlLXNsaWRlclwiPjwvZGl2PjwvdGQ+JyArXG5cdFx0XHQnPHRkIGNsYXNzPVwiZmlsdGVyZWQtZGlzdGFuY2UtbWF4LWNlbGxcIj4nICsgbWF4VmFsdWUgKyAnPC90ZD48L3RyPicgK1xuXHRcdFx0Jzx0cj48dGQgY29sc3Bhbj0zIGNsYXNzPVwiZmlsdGVyZWQtZGlzdGFuY2UtdW5pdC1jZWxsXCI+JyArIHVuaXQgKyAnPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4nICk7XG5cblx0XHRmaWx0ZXJjb250cm9scy5hcHBlbmQoIHRhYmxlICk7XG5cblx0XHRsZXQgdGhhdCA9IHRoaXM7XG5cdFx0bXcubG9hZGVyLnVzaW5nKCAnanF1ZXJ5LnVpLnNsaWRlcicgKS50aGVuKCBmdW5jdGlvbiAoKSB7XG5cblx0XHRcdHRhYmxlLmZpbmQoICcuZmlsdGVyZWQtZGlzdGFuY2Utc2xpZGVyJyApXG5cdFx0XHQuc2xpZGVyKCB7XG5cdFx0XHRcdGFuaW1hdGU6IHRydWUsXG5cdFx0XHRcdG1heDogbWF4VmFsdWUsXG5cdFx0XHRcdHZhbHVlOiB0aGF0LmZpbHRlclZhbHVlLFxuXHRcdFx0XHRzdGVwOiBwcmVjaXNpb24gLyAxMDBcblx0XHRcdH0gKVxuXHRcdFx0Lm9uKCAnc2xpZGVjaGFuZ2UnLCB1bmRlZmluZWQsIHsgJ2ZpbHRlcic6IHRoYXQgfSwgZnVuY3Rpb24gKCBldmVudE9iamVjdDogSlF1ZXJ5RXZlbnRPYmplY3QsIHVpOiBhbnkgKSB7XG5cdFx0XHRcdGV2ZW50T2JqZWN0LmRhdGEudWkgPSB1aTtcblx0XHRcdFx0ZXZlbnRPYmplY3QuZGF0YS5maWx0ZXIub25GaWx0ZXJVcGRhdGVkKCBldmVudE9iamVjdCApO1xuXHRcdFx0fSApXG5cdFx0XHQub24oICdzbGlkZScsIHVuZGVmaW5lZCwgeyAnZmlsdGVyJzogdGhhdCB9LCBmdW5jdGlvbiAoIGV2ZW50T2JqZWN0OiBKUXVlcnlFdmVudE9iamVjdCwgdWk6IGFueSApIHtcblx0XHRcdFx0cmVhZG91dC50ZXh0KCB1aS52YWx1ZSApO1xuXHRcdFx0fSApXG5cdFx0XHQuZmluZCggJy51aS1zbGlkZXItaGFuZGxlJyApXG5cdFx0XHQuYXBwZW5kKCByZWFkb3V0ICk7XG5cblx0XHR9ICk7XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdHByaXZhdGUgdXBkYXRlRGlzdGFuY2VzKCBvcmlnaW46IEwuTGF0TG5nTGl0ZXJhbCApOiBudW1iZXIge1xuXG5cdFx0bGV0IHZhbHVlcyA9IHRoaXMuY29udHJvbGxlci5nZXREYXRhKCk7XG5cdFx0bGV0IG1heCA9IDE7XG5cblx0XHRsZXQgcHJJZCA9IHRoaXMucHJpbnRyZXF1ZXN0SWQ7XG5cblx0XHRmb3IgKCBsZXQgcm93SWQgaW4gdmFsdWVzICkge1xuXG5cdFx0XHRpZiAoIHZhbHVlc1sgcm93SWQgXS5kYXRhLmhhc093blByb3BlcnR5KCB0aGlzLmZpbHRlcklkICkgKSB7XG5cdFx0XHRcdGxldCBkaXN0YW5jZXM6IG51bWJlcltdID0gdmFsdWVzWyByb3dJZCBdLmRhdGFbIHRoaXMuZmlsdGVySWQgXS5wb3NpdGlvbnMubWFwKCAoIHBvczogTC5MYXRMbmdMaXRlcmFsICkgPT4gdGhpcy5kaXN0YW5jZSggb3JpZ2luLCBwb3MgKSApO1xuXHRcdFx0XHRsZXQgZGlzdCA9IE1hdGgubWluKCAuLi5kaXN0YW5jZXMgKTtcblxuXHRcdFx0XHR2YWx1ZXNbIHJvd0lkIF0uZGF0YVsgdGhpcy5maWx0ZXJJZCBdLmRpc3RhbmNlID0gZGlzdDtcblx0XHRcdFx0bWF4ID0gTWF0aC5tYXgoIG1heCwgZGlzdCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dmFsdWVzWyByb3dJZCBdLmRhdGFbIHRoaXMuZmlsdGVySWQgXS5kaXN0YW5jZSA9IEluZmluaXR5O1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBtYXg7XG5cdH1cblxuXHRwdWJsaWMgb25GaWx0ZXJVcGRhdGVkKCBldmVudE9iamVjdDogSlF1ZXJ5RXZlbnRPYmplY3QgKSB7XG5cdFx0dGhpcy5maWx0ZXJWYWx1ZSA9IGV2ZW50T2JqZWN0LmRhdGEudWkudmFsdWU7XG5cdFx0dGhpcy5jb250cm9sbGVyLm9uRmlsdGVyVXBkYXRlZCggdGhpcy5nZXRJZCgpICk7XG5cdH1cblxuXHRwcml2YXRlIGRpc3RhbmNlKCBhOiBMLkxhdExuZ0xpdGVyYWwsIGI6IEwuTGF0TG5nTGl0ZXJhbCApIHtcblxuXHRcdGNvbnN0IERFRzJSQUQgPSBNYXRoLlBJIC8gMTgwLjA7XG5cblx0XHRmdW5jdGlvbiBzcXVhcmVkKCB4OiBudW1iZXIgKSB7XG5cdFx0XHRyZXR1cm4geCAqIHhcblx0XHR9XG5cblx0XHRsZXQgZiA9XG5cdFx0XHRzcXVhcmVkKCBNYXRoLnNpbiggKCBiLmxhdCAtIGEubGF0ICkgKiBERUcyUkFEIC8gMi4wICkgKSArXG5cdFx0XHRNYXRoLmNvcyggYS5sYXQgKiBERUcyUkFEICkgKiBNYXRoLmNvcyggYi5sYXQgKiBERUcyUkFEICkgKlxuXHRcdFx0c3F1YXJlZCggTWF0aC5zaW4oICggYi5sbmcgLSBhLmxuZyApICogREVHMlJBRCAvIDIuMCApICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYXJ0aFJhZGl1c1ZhbHVlICogMiAqIE1hdGguYXRhbjIoIE1hdGguc3FydCggZiApLCBNYXRoLnNxcnQoIDEgLSBmICkgKTtcblx0fVxuXG5cdHB1YmxpYyBpc1Zpc2libGUoIHJvd0lkOiBzdHJpbmcgKTogYm9vbGVhbiB7XG5cblx0XHRsZXQgcm93ZGF0YSA9IHRoaXMuY29udHJvbGxlci5nZXREYXRhKClbIHJvd0lkIF0uZGF0YTtcblxuXHRcdGlmICggcm93ZGF0YS5oYXNPd25Qcm9wZXJ0eSggdGhpcy5maWx0ZXJJZCApICkge1xuXHRcdFx0cmV0dXJuIHJvd2RhdGFbIHRoaXMuZmlsdGVySWQgXS5kaXN0YW5jZSA8PSB0aGlzLmZpbHRlclZhbHVlO1xuXHRcdH1cblxuXHRcdHJldHVybiBzdXBlci5pc1Zpc2libGUoIHJvd0lkICk7XG5cblx0fVxuXG59XG4iLCJpbXBvcnQgeyBPcHRpb25zIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5pbXBvcnQgeyBDb250cm9sbGVyIH0gZnJvbSBcIi4uL0NvbnRyb2xsZXJcIjtcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEZpbHRlcntcblxuXHRwcml2YXRlIG91dGVyVGFyZ2V0OiBKUXVlcnkgPSB1bmRlZmluZWQ7XG5cdHByb3RlY3RlZCB0YXJnZXQ6IEpRdWVyeSA9IHVuZGVmaW5lZDtcblx0cHJvdGVjdGVkIGZpbHRlcklkOiBzdHJpbmc7XG5cdHByb3RlY3RlZCBwcmludHJlcXVlc3RJZDogc3RyaW5nO1xuXHRwcm90ZWN0ZWQgY29udHJvbGxlcjogQ29udHJvbGxlcjtcblx0cHJvdGVjdGVkIG9wdGlvbnM6IE9wdGlvbnMgPSB1bmRlZmluZWQ7XG5cdHByb3RlY3RlZCBkaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuXHRwcm90ZWN0ZWQgY29sbGFwc2VkOiBib29sZWFuID0gZmFsc2U7XG5cdHByb3RlY3RlZCB1bmNvbGxhcHNlZENzczoge30gPSB7fTtcblxuXHRwdWJsaWMgY29uc3RydWN0b3IoIGZpbHRlcklkOiBzdHJpbmcsIHRhcmdldDogSlF1ZXJ5LCBwcmludHJlcXVlc3RJZDogc3RyaW5nLCBjb250cm9sbGVyOiBDb250cm9sbGVyLCBvcHRpb25zPzogT3B0aW9ucyApIHtcblx0XHR0aGlzLnRhcmdldCA9IHRhcmdldDtcblx0XHR0aGlzLm91dGVyVGFyZ2V0ID0gdGFyZ2V0O1xuXHRcdHRoaXMuZmlsdGVySWQgPSBmaWx0ZXJJZDtcblx0XHR0aGlzLnByaW50cmVxdWVzdElkID0gcHJpbnRyZXF1ZXN0SWQ7XG5cdFx0dGhpcy5jb250cm9sbGVyID0gY29udHJvbGxlcjtcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXHR9XG5cblx0cHVibGljIGluaXQoKSB7fTtcblxuXHRwdWJsaWMgaXNEaXNhYmxlZCgpIDogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMuZGlzYWJsZWQ7XG5cdH1cblxuXHRwdWJsaWMgZGlzYWJsZSgpIHtcblx0XHR0aGlzLmRpc2FibGVkID0gdHJ1ZTtcblxuXHRcdHRoaXMub3V0ZXJUYXJnZXRcblx0XHQucmVtb3ZlQ2xhc3MoICdlbmFibGVkJyApXG5cdFx0LmFkZENsYXNzKCAnZGlzYWJsZWQnICk7XG5cblx0XHR0aGlzLmNvbGxhcHNlKCk7XG5cblx0XHR0aGlzLnRhcmdldC5wcm9taXNlKCkudGhlbiggKCkgPT5cdHRoaXMuY29udHJvbGxlci5vbkZpbHRlclVwZGF0ZWQoIHRoaXMuZmlsdGVySWQgKSApO1xuXHR9XG5cblx0cHVibGljIGVuYWJsZSgpIHtcblx0XHR0aGlzLmRpc2FibGVkID0gZmFsc2U7XG5cblx0XHR0aGlzLm91dGVyVGFyZ2V0XG5cdFx0LnJlbW92ZUNsYXNzKCAnZGlzYWJsZWQnIClcblx0XHQuYWRkQ2xhc3MoICdlbmFibGVkJyApO1xuXG5cdFx0aWYgKCAhIHRoaXMuY29sbGFwc2VkICkge1xuXHRcdFx0dGhpcy51bmNvbGxhcHNlKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy50YXJnZXQucHJvbWlzZSgpLnRoZW4oICgpID0+XHR0aGlzLmNvbnRyb2xsZXIub25GaWx0ZXJVcGRhdGVkKCB0aGlzLmZpbHRlcklkICkgKTtcblx0fVxuXG5cdHByaXZhdGUgY29sbGFwc2UoKSB7XG5cblx0XHRpZiAoICEgdGhpcy5jb2xsYXBzZWQgKSB7XG5cdFx0XHR0aGlzLnVuY29sbGFwc2VkQ3NzID0gdGhpcy5vdXRlclRhcmdldC5jc3MoIFsgJ3BhZGRpbmctdG9wJywgJ3BhZGRpbmctYm90dG9tJywgJ21hcmdpbi1ib3R0b20nIF0gKTtcblx0XHRcdHRoaXMudGFyZ2V0LnNsaWRlVXAoKTtcblx0XHRcdHRoaXMub3V0ZXJUYXJnZXQuYW5pbWF0ZSggeyAncGFkZGluZy10b3AnOiAwLCAncGFkZGluZy1ib3R0b20nOiAwLCAnbWFyZ2luLWJvdHRvbSc6ICcyZW0nIH0gKTtcblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIHVuY29sbGFwc2UoKSB7XG5cdFx0dGhpcy50YXJnZXQuc2xpZGVEb3duKCk7XG5cdFx0dGhpcy5vdXRlclRhcmdldC5hbmltYXRlKCB0aGlzLnVuY29sbGFwc2VkQ3NzICk7XG5cdFx0cmV0dXJuXG5cdH1cblxuXHRwdWJsaWMgaXNWaXNpYmxlKCByb3dJZDogc3RyaW5nICk6IGJvb2xlYW4ge1xuXHRcdHJldHVybiB0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkoICdzaG93IGlmIHVuZGVmaW5lZCcgKSAmJiB0aGlzLm9wdGlvbnNbICdzaG93IGlmIHVuZGVmaW5lZCcgXSA9PT0gdHJ1ZTtcblx0fVxuXG5cdHB1YmxpYyBnZXRJZCgpIHtcblx0XHRyZXR1cm4gdGhpcy5maWx0ZXJJZDtcblx0fVxuXG5cdHByb3RlY3RlZCBidWlsZEVtcHR5Q29udHJvbCgpIHtcblxuXHRcdHRoaXMudGFyZ2V0ID0gJCggJzxkaXYgY2xhc3M9XCJmaWx0ZXJlZC1maWx0ZXItY29udGFpbmVyXCI+JyApO1xuXG5cdFx0dGhpcy5vdXRlclRhcmdldFxuXHRcdC5hcHBlbmQoIHRoaXMudGFyZ2V0IClcblx0XHQuYWRkQ2xhc3MoICdlbmFibGVkJyApO1xuXG5cdFx0dGhpcy5hZGRPbk9mZlN3aXRjaCgpO1xuXHRcdHRoaXMuYWRkTGFiZWwoKTtcblx0XHR0aGlzLmFkZENvbnRyb2xGb3JDb2xsYXBzaW5nKCk7XG5cblx0XHRyZXR1cm4gdGhpcy50YXJnZXQ7XG5cdH1cblxuXHRwcml2YXRlIGFkZExhYmVsKCkge1xuXHRcdC8vIGluc2VydCB0aGUgbGFiZWwgb2YgdGhlIHByaW50b3V0IHRoaXMgZmlsdGVyIGZpbHRlcnMgb25cblx0XHR0aGlzLnRhcmdldC5iZWZvcmUoIGA8ZGl2IGNsYXNzPVwiZmlsdGVyZWQtZmlsdGVyLWxhYmVsXCI+JHt0aGlzLm9wdGlvbnNbICdsYWJlbCcgXX08L2Rpdj5gICk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgYWRkT25PZmZTd2l0Y2goKSB7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ3N3aXRjaGVzJyApICkge1xuXG5cdFx0XHRsZXQgc3dpdGNoZXMgPSB0aGlzLm9wdGlvbnNbICdzd2l0Y2hlcycgXTtcblxuXHRcdFx0aWYgKCBzd2l0Y2hlcy5sZW5ndGggPiAwICYmICQuaW5BcnJheSggJ29uIG9mZicsIHN3aXRjaGVzICkgPj0gMCApIHtcblxuXHRcdFx0XHRsZXQgb25PZmZDb250cm9sID0gJCggYDxkaXYgY2xhc3M9XCJmaWx0ZXJlZC1maWx0ZXItb25vZmYgb25cIj48L2Rpdj5gICk7XG5cblx0XHRcdFx0dGhpcy50YXJnZXQuYmVmb3JlKCBvbk9mZkNvbnRyb2wgKTtcblxuXHRcdFx0XHRvbk9mZkNvbnRyb2wuY2xpY2soICgpID0+IHtcblxuXHRcdFx0XHRcdGlmICggdGhpcy5vdXRlclRhcmdldC5oYXNDbGFzcygnZW5hYmxlZCcgKSApIHtcblx0XHRcdFx0XHRcdHRoaXMuZGlzYWJsZSgpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR0aGlzLmVuYWJsZSgpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cHJvdGVjdGVkIGFkZENvbnRyb2xGb3JDb2xsYXBzaW5nKCkge1xuXHRcdGxldCBjb2xsYXBzaWJsZSA9IHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ2NvbGxhcHNpYmxlJyApID8gdGhpcy5vcHRpb25zWyAnY29sbGFwc2libGUnIF0gOiB1bmRlZmluZWQ7XG5cdFx0aWYgKCBjb2xsYXBzaWJsZSA9PT0gJ2NvbGxhcHNlZCcgfHwgY29sbGFwc2libGUgPT09ICd1bmNvbGxhcHNlZCcgKSB7XG5cblx0XHRcdGxldCBjb2xsYXBzZUNvbnRyb2wgPSAkKCAnPHNwYW4gY2xhc3M9XCJmaWx0ZXJlZC1maWx0ZXItY29sbGFwc2VcIj4nICk7XG5cblx0XHRcdHRoaXMudGFyZ2V0LmJlZm9yZSggY29sbGFwc2VDb250cm9sICk7XG5cblx0XHRcdGNvbGxhcHNlQ29udHJvbC5jbGljayggKCkgPT4ge1xuXHRcdFx0XHRpZiAoIGNvbGxhcHNlQ29udHJvbC5oYXNDbGFzcyggJ2NvbGxhcHNlZCcgKSApIHtcblx0XHRcdFx0XHR0aGlzLnVuY29sbGFwc2UoKTtcblx0XHRcdFx0XHR0aGlzLmNvbGxhcHNlZCA9IGZhbHNlO1xuXG5cdFx0XHRcdFx0Y29sbGFwc2VDb250cm9sXG5cdFx0XHRcdFx0LnJlbW92ZUNsYXNzKCAnY29sbGFwc2VkJyApXG5cdFx0XHRcdFx0LmFkZENsYXNzKCAndW5jb2xsYXBzZWQnICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGhpcy5jb2xsYXBzZSgpO1xuXHRcdFx0XHRcdHRoaXMuY29sbGFwc2VkID0gdHJ1ZTtcblxuXHRcdFx0XHRcdGNvbGxhcHNlQ29udHJvbFxuXHRcdFx0XHRcdC5yZW1vdmVDbGFzcyggJ3VuY29sbGFwc2VkJyApXG5cdFx0XHRcdFx0LmFkZENsYXNzKCAnY29sbGFwc2VkJyApO1xuXHRcdFx0XHR9XG5cblx0XHRcdH0gKTtcblxuXHRcdFx0aWYgKCBjb2xsYXBzaWJsZSA9PT0gJ2NvbGxhcHNlZCcgKSB7XG5cblx0XHRcdFx0dGhpcy5jb2xsYXBzZSgpO1xuXHRcdFx0XHR0aGlzLmNvbGxhcHNlZCA9IHRydWU7XG5cdFx0XHRcdGNvbGxhcHNlQ29udHJvbC5hZGRDbGFzcygnY29sbGFwc2VkJyk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGNvbGxhcHNlQ29udHJvbC5hZGRDbGFzcygndW5jb2xsYXBzZWQnKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxufSIsIi8vLzxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AdHlwZXMvaW9uLnJhbmdlc2xpZGVyL2luZGV4LmQudHNcIi8+XG5pbXBvcnQgeyBGaWx0ZXIgfSBmcm9tIFwiLi9GaWx0ZXJcIjtcbmltcG9ydCB7IE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcblxuZGVjbGFyZSBsZXQgbXc6IGFueTtcblxuZXhwb3J0IGNsYXNzIE51bWJlckZpbHRlciBleHRlbmRzIEZpbHRlciB7XG5cblx0cHJpdmF0ZSBNT0RFX1JBTkdFID0gMDtcblx0cHJpdmF0ZSBNT0RFX01JTiA9IDE7XG5cdHByaXZhdGUgTU9ERV9NQVggPSAyO1xuXHRwcml2YXRlIE1PREVfU0VMRUNUID0gMztcblxuXHRwcml2YXRlIGZpbHRlclZhbHVlVXBwZXI6IG51bWJlciA9IDA7XG5cdHByaXZhdGUgZmlsdGVyVmFsdWVMb3dlcjogbnVtYmVyID0gMDtcblx0cHJpdmF0ZSBtb2RlID0gdGhpcy5NT0RFX1JBTkdFO1xuXG5cdHB1YmxpYyBpbml0KCkge1xuXG5cdFx0bGV0IHZhbHVlczogbnVtYmVyW10gPSB0aGlzLmdldFZhbHVlcygpO1xuXG5cdFx0bGV0IHsgbWluVmFsdWUsIG1heFZhbHVlLCBwcmVjaXNpb24gfSA9IHRoaXMuZ2V0UmFuZ2VQYXJhbWV0ZXJzKCB2YWx1ZXMgKTtcblxuXHRcdGxldCBzbGlkZXJPcHRpb25zOiBJb25SYW5nZVNsaWRlck9wdGlvbnMgPSB7XG5cdFx0XHRwcmV0dGlmeV9lbmFibGVkOiBmYWxzZSxcblx0XHRcdGZvcmNlX2VkZ2VzOiB0cnVlLFxuXHRcdFx0Z3JpZDogdHJ1ZVxuXHRcdH07XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ3ZhbHVlcycgKSApIHtcblx0XHRcdHNsaWRlck9wdGlvbnMgPSB0aGlzLmFkanVzdFNsaWRlck9wdGlvbnNGcm9tVmFsdWVzKCBzbGlkZXJPcHRpb25zLCB2YWx1ZXMgKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRzbGlkZXJPcHRpb25zID0gdGhpcy5hZGp1c3RTbGlkZXJPcHRpb25zRnJvbVJhbmdlUGFyYW1ldGVycyggc2xpZGVyT3B0aW9ucywgbWluVmFsdWUsIG1heFZhbHVlLCBwcmVjaXNpb24gKTtcblx0XHR9XG5cblx0XHRzd2l0Y2goIHRoaXMub3B0aW9uc1sgJ3NsaWRlcnMnIF0gKSB7XG5cblx0XHRcdGNhc2UgXCJtaW5cIjpcblxuXHRcdFx0XHR0aGlzLm1vZGUgPSB0aGlzLk1PREVfTUlOO1xuXHRcdFx0XHRzbGlkZXJPcHRpb25zLnR5cGUgPSAnc2luZ2xlJztcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgXCJtYXhcIjpcblxuXHRcdFx0XHR0aGlzLm1vZGUgPSB0aGlzLk1PREVfTUFYO1xuXHRcdFx0XHRzbGlkZXJPcHRpb25zLmZyb20gPSBzbGlkZXJPcHRpb25zLnRvO1xuXHRcdFx0XHRzbGlkZXJPcHRpb25zLnR5cGUgPSAnc2luZ2xlJztcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgXCJzZWxlY3RcIjpcblxuXHRcdFx0XHR0aGlzLm1vZGUgPSB0aGlzLk1PREVfU0VMRUNUO1xuXHRcdFx0XHRtYXhWYWx1ZSA9IG1pblZhbHVlO1xuXHRcdFx0XHRzbGlkZXJPcHRpb25zLnR5cGUgPSAnc2luZ2xlJztcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGRlZmF1bHQ6IC8vID09IGNhc2UgXCJyYW5nZVwiXG5cblx0XHRcdFx0dGhpcy5tb2RlID0gdGhpcy5NT0RFX1JBTkdFO1xuXHRcdFx0XHRzbGlkZXJPcHRpb25zLnR5cGUgPSAnZG91YmxlJztcblx0XHR9XG5cblx0XHR0aGlzLmJ1aWxkRmlsdGVyQ29udHJvbHMoIHNsaWRlck9wdGlvbnMgKTtcblxuXHRcdHRoaXMuZmlsdGVyVmFsdWVMb3dlciA9IG1pblZhbHVlO1xuXHRcdHRoaXMuZmlsdGVyVmFsdWVVcHBlciA9IG1heFZhbHVlO1xuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblxuXHRwcml2YXRlIGFkanVzdFNsaWRlck9wdGlvbnNGcm9tUmFuZ2VQYXJhbWV0ZXJzKCBzbGlkZXJPcHRpb25zOiBJb25SYW5nZVNsaWRlck9wdGlvbnMsIG1pblZhbHVlOiBudW1iZXIsIG1heFZhbHVlOiBudW1iZXIsIHByZWNpc2lvbjogbnVtYmVyICkge1xuXG5cdFx0c2xpZGVyT3B0aW9ucy5taW4gPSBtaW5WYWx1ZTtcblx0XHRzbGlkZXJPcHRpb25zLm1heCA9IG1heFZhbHVlO1xuXHRcdHNsaWRlck9wdGlvbnMuc3RlcCA9IHRoaXMuZ2V0U3RlcCggcHJlY2lzaW9uICk7XG5cdFx0c2xpZGVyT3B0aW9ucy5ncmlkX251bSA9IE1hdGgubWluKCA0LCBNYXRoLnJvdW5kKCAoIG1heFZhbHVlIC0gbWluVmFsdWUgKSAvIHNsaWRlck9wdGlvbnMuc3RlcCApICk7XG5cblx0XHRzbGlkZXJPcHRpb25zLmZyb20gPSBtaW5WYWx1ZTtcblx0XHRzbGlkZXJPcHRpb25zLnRvID0gbWF4VmFsdWU7XG5cblx0XHRzbGlkZXJPcHRpb25zLm9uRmluaXNoID0gKCBkYXRhOiBJb25SYW5nZVNsaWRlckV2ZW50ICkgPT4gdGhpcy5vbkZpbHRlclVwZGF0ZWQoIGRhdGEuZnJvbSwgZGF0YS50byApO1xuXG5cdFx0cmV0dXJuIHNsaWRlck9wdGlvbnM7XG5cdH1cblxuXHRwcml2YXRlIGFkanVzdFNsaWRlck9wdGlvbnNGcm9tVmFsdWVzKCBzbGlkZXJPcHRpb25zOiBJb25SYW5nZVNsaWRlck9wdGlvbnMsIHZhbHVlczogbnVtYmVyW10gKSB7XG5cblx0XHRzbGlkZXJPcHRpb25zLnZhbHVlcyA9IHZhbHVlcztcblxuXHRcdHNsaWRlck9wdGlvbnMuZnJvbSA9IDA7XG5cdFx0c2xpZGVyT3B0aW9ucy50byA9IHZhbHVlcy5sZW5ndGggLSAxO1xuXG5cdFx0c2xpZGVyT3B0aW9ucy5vbkZpbmlzaCA9ICggZGF0YTogSW9uUmFuZ2VTbGlkZXJFdmVudCApID0+IHRoaXMub25GaWx0ZXJVcGRhdGVkKCBkYXRhLmZyb21fdmFsdWUsIGRhdGEudG9fdmFsdWUgKTtcblxuXHRcdHJldHVybiBzbGlkZXJPcHRpb25zO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRSYW5nZVBhcmFtZXRlcnMoIHZhbHVlczogbnVtYmVyW10gKSB7XG5cblx0XHRsZXQgbWluVmFsdWUgPSB2YWx1ZXNbIDAgXTtcblx0XHRsZXQgbWF4VmFsdWUgPSB2YWx1ZXNbIHZhbHVlcy5sZW5ndGggLSAxIF07XG5cdFx0bGV0IHByZWNpc2lvbjogbnVtYmVyID0gdGhpcy5nZXRQcmVjaXNpb24oIG1pblZhbHVlLCBtYXhWYWx1ZSApO1xuXG5cdFx0aWYgKCAhdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAndmFsdWVzJyApICkge1xuXHRcdFx0bWluVmFsdWUgPSB0aGlzLmdldE1pblNsaWRlclZhbHVlKCBtaW5WYWx1ZSwgcHJlY2lzaW9uICk7XG5cdFx0XHRtYXhWYWx1ZSA9IHRoaXMuZ2V0TWF4U2xpZGVyVmFsdWUoIG1heFZhbHVlLCBwcmVjaXNpb24gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4geyBtaW5WYWx1ZSwgbWF4VmFsdWUsIHByZWNpc2lvbiB9O1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRWYWx1ZXMoKTogbnVtYmVyW10ge1xuXHRcdGxldCB2YWx1ZXM6IG51bWJlcltdO1xuXHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAndmFsdWVzJyApICYmIHRoaXMub3B0aW9uc1sgJ3ZhbHVlcycgXVswXSAhPT0gJ2F1dG8nICkge1xuXHRcdFx0dmFsdWVzID0gIHRoaXMub3B0aW9uc1sgJ3ZhbHVlcycgXVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YWx1ZXMgPSAgdGhpcy5nZXRTb3J0ZWRWYWx1ZXMoKTtcblx0XHR9XG5cblx0XHRpZiAoIHZhbHVlcy5sZW5ndGggPT09IDAgKSB7XG5cdFx0XHR2YWx1ZXMgPSBbIDAsIDAgXTtcblx0XHR9IGVsc2UgaWYgKCB2YWx1ZXMubGVuZ3RoID09PSAxICkge1xuXHRcdFx0dmFsdWVzLnB1c2goIHZhbHVlc1sgMCBdICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbHVlcztcblx0fVxuXG5cdHByaXZhdGUgYnVpbGRGaWx0ZXJDb250cm9scyggc2xpZGVyT3B0aW9uczogSW9uUmFuZ2VTbGlkZXJPcHRpb25zICkge1xuXG5cdFx0bGV0IGZpbHRlckNsYXNzTmFtZXM6IGFueSA9IHt9O1xuXHRcdGZpbHRlckNsYXNzTmFtZXNbIHRoaXMuTU9ERV9NSU4udG9TdHJpbmcoKSBdID0gXCJtb2RlLW1pblwiO1xuXHRcdGZpbHRlckNsYXNzTmFtZXNbIHRoaXMuTU9ERV9NQVggXSA9IFwibW9kZS1tYXhcIjtcblx0XHRmaWx0ZXJDbGFzc05hbWVzWyB0aGlzLk1PREVfUkFOR0UgXSA9IFwibW9kZS1yYW5nZVwiO1xuXHRcdGZpbHRlckNsYXNzTmFtZXNbIHRoaXMuTU9ERV9TRUxFQ1QgXSA9IFwibW9kZS1zZWxlY3RcIjtcblxuXHRcdGxldCBmaWx0ZXJjb250cm9scyA9IHRoaXMuYnVpbGRFbXB0eUNvbnRyb2woKTtcblxuXHRcdGxldCBzbGlkZXIgPSAkKCAnPGlucHV0IHR5cGU9XCJ0ZXh0XCIgdmFsdWU9XCJcIiAvPicgKTtcblx0XHRsZXQgc2xpZGVyQ29udGFpbmVyID0gJCggYDxkaXYgY2xhc3M9XCJmaWx0ZXJlZC1udW1iZXItc2xpZGVyICR7ZmlsdGVyQ2xhc3NOYW1lc1sgdGhpcy5tb2RlIF19XCIgLz5gICkuYXBwZW5kKCBzbGlkZXIgKTtcblx0XHRmaWx0ZXJjb250cm9scy5hcHBlbmQoIHNsaWRlckNvbnRhaW5lciApO1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkoICdjYXB0aW9uJyApICkge1xuXHRcdFx0bGV0IGNhcHRpb24gPSBgPGRpdiBjbGFzcz1cImZpbHRlcmVkLW51bWJlci1jYXB0aW9uXCI+JHt0aGlzLm9wdGlvbnNbICdjYXB0aW9uJyBdfTwvZGl2PmA7XG5cdFx0XHRmaWx0ZXJjb250cm9scy5hcHBlbmQoIGNhcHRpb24gKTtcblx0XHR9XG5cblx0XHRtdy5sb2FkZXIudXNpbmcoICdleHQuc3JmLmZpbHRlcmVkLnNsaWRlcicgKS50aGVuKCAoKSA9PiBzbGlkZXIuaW9uUmFuZ2VTbGlkZXIoIHNsaWRlck9wdGlvbnMgKSApO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRNaW5TbGlkZXJWYWx1ZSggbWluVmFsdWU6IG51bWJlciwgcHJlY2lzaW9uOiBudW1iZXIgKSB7XG5cdFx0bGV0IHJlcXVlc3RlZE1pbiA9IHRoaXMub3B0aW9uc1sgJ21pbicgXTtcblxuXHRcdGlmICggcmVxdWVzdGVkTWluID09PSB1bmRlZmluZWQgfHwgaXNOYU4oIE51bWJlciggcmVxdWVzdGVkTWluICkgKSApIHtcblx0XHRcdHJldHVybiBNYXRoLmZsb29yKCBtaW5WYWx1ZSAvIHByZWNpc2lvbiApICogcHJlY2lzaW9uO1xuXHRcdH1cblxuXHRcdHJldHVybiBNYXRoLm1pbiggcmVxdWVzdGVkTWluLCBtaW5WYWx1ZSApO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRNYXhTbGlkZXJWYWx1ZSggbWF4VmFsdWU6IG51bWJlciwgcHJlY2lzaW9uOiBudW1iZXIgKSB7XG5cdFx0bGV0IHJlcXVlc3RlZE1heCA9IHRoaXMub3B0aW9uc1sgJ21heCcgXTtcblxuXHRcdGlmICggcmVxdWVzdGVkTWF4ID09PSB1bmRlZmluZWQgfHwgaXNOYU4oIE51bWJlciggcmVxdWVzdGVkTWF4ICkgKSApIHtcblx0XHRcdHJldHVybiBNYXRoLmNlaWwoIG1heFZhbHVlIC8gcHJlY2lzaW9uICkgKiBwcmVjaXNpb247XG5cdFx0fVxuXG5cdFx0cmV0dXJuIE1hdGgubWF4KCByZXF1ZXN0ZWRNYXgsIG1heFZhbHVlICk7XG5cdH1cblxuXHRwcml2YXRlIGdldFByZWNpc2lvbiggbWluVmFsdWU6IG51bWJlciwgbWF4VmFsdWU6IG51bWJlciApOiBudW1iZXIge1xuXHRcdGlmICggbWF4VmFsdWUgLSBtaW5WYWx1ZSA+IDAgKSB7XG5cdFx0XHRyZXR1cm4gMTAgKiogKCBNYXRoLmZsb29yKCBNYXRoLmxvZyggbWF4VmFsdWUgLSBtaW5WYWx1ZSApICogTWF0aC5MT0cxMEUgKSAtIDEgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuIDE7XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBnZXRTdGVwKCBwcmVjaXNpb246IG51bWJlciApOiBudW1iZXIge1xuXG5cdFx0bGV0IHN0ZXAgPSB0aGlzLm9wdGlvbnNbICdzdGVwJyBdO1xuXG5cdFx0aWYgKCBzdGVwICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdHN0ZXAgPSBOdW1iZXIoIHN0ZXAgKTtcblxuXHRcdFx0aWYgKCAhaXNOYU4oIHN0ZXAgKSApIHtcblx0XHRcdFx0cmV0dXJuIHN0ZXA7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHByZWNpc2lvbiAvIDEwO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRSYW5nZUZyb21WYWx1ZXMoKTogWyBudW1iZXIsIG51bWJlciBdIHtcblxuXHRcdGxldCByb3dzID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKTtcblx0XHRsZXQgbWluID0gSW5maW5pdHk7XG5cdFx0bGV0IG1heCA9IC1JbmZpbml0eTtcblxuXHRcdGZvciAoIGxldCByb3dJZCBpbiByb3dzICkge1xuXG5cdFx0XHRpZiAoIHJvd3NbIHJvd0lkIF0uZGF0YS5oYXNPd25Qcm9wZXJ0eSggdGhpcy5maWx0ZXJJZCApICkge1xuXHRcdFx0XHRsZXQgdmFsdWVzOiBudW1iZXJbXSA9IHJvd3NbIHJvd0lkIF0uZGF0YVsgdGhpcy5maWx0ZXJJZCBdLnZhbHVlcztcblx0XHRcdFx0bWluID0gTWF0aC5taW4oIG1pbiwgLi4udmFsdWVzICk7XG5cdFx0XHRcdG1heCA9IE1hdGgubWF4KCBtYXgsIC4uLnZhbHVlcyApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBbIG1pbiwgbWF4IF07XG5cdH1cblxuXHRwcml2YXRlIGdldFNvcnRlZFZhbHVlcygpOiBudW1iZXJbXSB7XG5cblx0XHRsZXQgdmFsdWVBcnJheTogbnVtYmVyW10gPSBbXTtcblx0XHRsZXQgcm93cyA9IHRoaXMuY29udHJvbGxlci5nZXREYXRhKCk7XG5cblx0XHRmb3IgKCBsZXQgcm93SWQgaW4gcm93cyApIHtcblxuXHRcdFx0bGV0IGNlbGxzID0gcm93c1sgcm93SWQgXS5kYXRhO1xuXG5cdFx0XHRpZiAoIGNlbGxzLmhhc093blByb3BlcnR5KCB0aGlzLmZpbHRlcklkICkgKSB7XG5cblx0XHRcdFx0bGV0IHZhbHVlcyA9IGNlbGxzWyB0aGlzLmZpbHRlcklkIF0udmFsdWVzO1xuXG5cdFx0XHRcdGZvciAoIGxldCB2YWx1ZUlkIGluIHZhbHVlcyApIHtcblxuXHRcdFx0XHRcdGxldCB2YWx1ZSA9IE51bWJlciggdmFsdWVzWyB2YWx1ZUlkIF0gKTtcblxuXHRcdFx0XHRcdGlmICggdmFsdWVBcnJheS5pbmRleE9mKCB2YWx1ZSApID09PSAtMSApIHtcblx0XHRcdFx0XHRcdHZhbHVlQXJyYXkucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdmFsdWVBcnJheS5zb3J0KCAoIGE6IGFueSwgYjogYW55ICkgPT4gYSAtIGIgKTtcblx0fVxuXG5cdHB1YmxpYyBvbkZpbHRlclVwZGF0ZWQoIGZyb206IG51bWJlciwgdG86IG51bWJlciApIHtcblxuXHRcdHN3aXRjaCAoIHRoaXMubW9kZSApIHtcblxuXHRcdFx0Y2FzZSB0aGlzLk1PREVfTUlOOlxuXG5cdFx0XHRcdHRoaXMuZmlsdGVyVmFsdWVMb3dlciA9IGZyb207XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRjYXNlIHRoaXMuTU9ERV9NQVg6XG5cblx0XHRcdFx0dGhpcy5maWx0ZXJWYWx1ZVVwcGVyID0gZnJvbTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgdGhpcy5NT0RFX1NFTEVDVDpcblxuXHRcdFx0XHR0aGlzLmZpbHRlclZhbHVlTG93ZXIgPSBmcm9tO1xuXHRcdFx0XHR0aGlzLmZpbHRlclZhbHVlVXBwZXIgPSBmcm9tO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0ZGVmYXVsdDogLy8gY2FzZSB0aGlzLk1PREVfUkFOR0U6XG5cblx0XHRcdFx0dGhpcy5maWx0ZXJWYWx1ZUxvd2VyID0gZnJvbTtcblx0XHRcdFx0dGhpcy5maWx0ZXJWYWx1ZVVwcGVyID0gdG87XG5cdFx0fVxuXG5cdFx0dGhpcy5jb250cm9sbGVyLm9uRmlsdGVyVXBkYXRlZCggdGhpcy5nZXRJZCgpICk7XG5cdH1cblxuXHRwdWJsaWMgaXNWaXNpYmxlKCByb3dJZDogc3RyaW5nICk6IGJvb2xlYW4ge1xuXHRcdGxldCByb3dkYXRhID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKVsgcm93SWQgXS5kYXRhO1xuXG5cdFx0aWYgKCByb3dkYXRhLmhhc093blByb3BlcnR5KCB0aGlzLmZpbHRlcklkICkgJiYgcm93ZGF0YVsgdGhpcy5maWx0ZXJJZCBdLnZhbHVlcy5sZW5ndGggPiAwICkge1xuXG5cdFx0XHRmb3IgKCBsZXQgdmFsdWUgb2Ygcm93ZGF0YVsgdGhpcy5maWx0ZXJJZCBdLnZhbHVlcyApIHtcblx0XHRcdFx0aWYgKCB2YWx1ZSA+PSB0aGlzLmZpbHRlclZhbHVlTG93ZXIgJiYgdmFsdWUgPD0gdGhpcy5maWx0ZXJWYWx1ZVVwcGVyICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gc3VwZXIuaXNWaXNpYmxlKCByb3dJZCApO1xuXHR9XG5cbn1cbiIsIi8vLzxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AdHlwZXMvc2VsZWN0Mi9pbmRleC5kLnRzXCIvPlxuXG5pbXBvcnQgeyBGaWx0ZXIgfSBmcm9tIFwiLi9GaWx0ZXJcIjtcblxuZGVjbGFyZSBsZXQgbXc6IGFueTtcblxuZXhwb3J0IGNsYXNzIFZhbHVlRmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcblxuXHRwcml2YXRlIHZhbHVlczogYW55ID0ge307XG5cdHByaXZhdGUgdmlzaWJsZVZhbHVlczogc3RyaW5nW10gPSBbXTtcblxuXHRwcml2YXRlIF91c2VPciA9IHRydWU7XG5cblx0cHVibGljIGluaXQoKSB7XG5cdFx0dGhpcy52YWx1ZXMgPSB0aGlzLmdldFNvcnRlZFZhbHVlcygpO1xuXHRcdHRoaXMuYnVpbGRDb250cm9sKCk7XG5cdH1cblxuXHRwdWJsaWMgdXNlT3IoIHVzZU9yOiBib29sZWFuICkge1xuXHRcdHRoaXMuX3VzZU9yID0gdXNlT3I7XG5cdFx0dGhpcy5jb250cm9sbGVyLm9uRmlsdGVyVXBkYXRlZCggdGhpcy5nZXRJZCgpICk7XG5cdH1cblxuXHRwcml2YXRlIGdldFNvcnRlZFZhbHVlcygpOiBhbnkge1xuXG5cdFx0LyoqIE1hcCBvZiB2YWx1ZSA9PiBsYWJlbCBkaXN0aW5jdCB2YWx1ZXMgKi9cblx0XHRsZXQgZGlzdGluY3RWYWx1ZXM6IGFueSA9IHt9O1xuXHRcdC8qKiBNYXAgb2YgdmFsdWUgPT4gc29ydCB2YWx1ZSBkaXN0aW5jdCB2YWx1ZXMgKi9cblx0XHRsZXQgZGlzdGluY3RTb3J0VmFsdWVzOiBhbnkgPSB7fTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAndmFsdWVzJyApICkge1xuXG5cdFx0XHRyZXR1cm4gdGhpcy5vcHRpb25zWyAndmFsdWVzJyBdLm1hcChcblx0XHRcdFx0KCBpdGVtOiBzdHJpbmcgKSA9PiB7XG5cdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdHByaW50b3V0VmFsdWU6IGl0ZW0sXG5cdFx0XHRcdFx0XHRmb3JtYXR0ZWRWYWx1ZTogaXRlbVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblx0XHRcdCk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gYnVpbGQgZmlsdGVyIHZhbHVlcyBmcm9tIGF2YWlsYWJsZSB2YWx1ZXMgaW4gcmVzdWx0IHNldFxuXHRcdFx0bGV0IGRhdGEgPSB0aGlzLmNvbnRyb2xsZXIuZ2V0RGF0YSgpO1xuXHRcdFx0bGV0IHNvcnRlZEVudHJpZXM6IGFueVtdID0gW107XG5cdFx0XHRmb3IgKCBsZXQgaWQgaW4gZGF0YSApIHtcblxuXHRcdFx0XHRsZXQgcHJpbnRvdXRWYWx1ZXM6IGFueSA9IGRhdGFbIGlkIF1bICdwcmludG91dHMnIF1bIHRoaXMucHJpbnRyZXF1ZXN0SWQgXVsgJ3ZhbHVlcycgXTtcblx0XHRcdFx0bGV0IHByaW50b3V0Rm9ybWF0dGVkVmFsdWVzID0gZGF0YVsgaWQgXVsgJ3ByaW50b3V0cycgXVsgdGhpcy5wcmludHJlcXVlc3RJZCBdWyAnZm9ybWF0dGVkIHZhbHVlcycgXTtcblx0XHRcdFx0bGV0IHByaW50b3V0U29ydFZhbHVlczogYW55ID0gZGF0YVsgaWQgXVsgJ3ByaW50b3V0cycgXVsgdGhpcy5wcmludHJlcXVlc3RJZCBdWyAnc29ydCB2YWx1ZXMnIF07XG5cblx0XHRcdFx0Zm9yICggbGV0IGkgaW4gcHJpbnRvdXRWYWx1ZXMgKSB7XG5cdFx0XHRcdFx0bGV0IHByaW50b3V0Rm9ybWF0dGVkVmFsdWUgPSBwcmludG91dEZvcm1hdHRlZFZhbHVlc1sgaSBdO1xuXG5cdFx0XHRcdFx0aWYgKCBwcmludG91dEZvcm1hdHRlZFZhbHVlLmluZGV4T2YoICc8YScgKSA+IC0xICkge1xuXHRcdFx0XHRcdFx0cHJpbnRvdXRGb3JtYXR0ZWRWYWx1ZSA9IC88YS4qPiguKj8pPFxcL2E+Ly5leGVjKCBwcmludG91dEZvcm1hdHRlZFZhbHVlIClbIDEgXTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRkaXN0aW5jdFZhbHVlc1sgcHJpbnRvdXRWYWx1ZXNbIGkgXSBdID0gcHJpbnRvdXRGb3JtYXR0ZWRWYWx1ZTtcblx0XHRcdFx0XHRkaXN0aW5jdFNvcnRWYWx1ZXNbIHByaW50b3V0VmFsdWVzWyBpIF0gXSA9IHByaW50b3V0U29ydFZhbHVlc1sgaSBdO1xuXHRcdFx0XHR9XG5cblx0XHRcdH1cblxuXHRcdFx0Zm9yICggbGV0IHByaW50b3V0VmFsdWUgaW4gZGlzdGluY3RTb3J0VmFsdWVzICkge1xuXHRcdFx0XHRzb3J0ZWRFbnRyaWVzLnB1c2goIHtcblx0XHRcdFx0XHRwcmludG91dFZhbHVlOiBwcmludG91dFZhbHVlLFxuXHRcdFx0XHRcdHNvcnRWYWx1ZTogZGlzdGluY3RTb3J0VmFsdWVzWyBwcmludG91dFZhbHVlIF0sXG5cdFx0XHRcdFx0Zm9ybWF0dGVkVmFsdWU6IGRpc3RpbmN0VmFsdWVzWyBwcmludG91dFZhbHVlIF1cblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRzb3J0ZWRFbnRyaWVzLnNvcnQoXG5cdFx0XHRcdCggYTogYW55LCBiOiBhbnkgKSA9PiB7XG5cdFx0XHRcdFx0cmV0dXJuIGEuc29ydFZhbHVlLmxvY2FsZUNvbXBhcmUoIGIuc29ydFZhbHVlICk7XG5cdFx0XHRcdH0gKTtcblx0XHRcdHJldHVybiBzb3J0ZWRFbnRyaWVzO1xuXG5cdFx0fVxuXG5cdH1cblxuXHRwcml2YXRlIGJ1aWxkQ29udHJvbCgpIHtcblxuXHRcdGxldCBmaWx0ZXJjb250cm9scyA9IHRoaXMuYnVpbGRFbXB0eUNvbnRyb2woKTtcblxuXHRcdGZpbHRlcmNvbnRyb2xzID0gdGhpcy5hZGRDb250cm9sRm9yU3dpdGNoZXMoIGZpbHRlcmNvbnRyb2xzICk7XG5cblx0XHRsZXQgbWF4Q2hlY2tib3hlcyA9IHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ21heCBjaGVja2JveGVzJyApID8gdGhpcy5vcHRpb25zWyAnbWF4IGNoZWNrYm94ZXMnIF0gOiA1O1xuXG5cdFx0aWYgKCB0aGlzLnZhbHVlcy5sZW5ndGggPiBtYXhDaGVja2JveGVzICkge1xuXHRcdFx0ZmlsdGVyY29udHJvbHMuYXBwZW5kKCB0aGlzLmdldFNlbGVjdGVkMkNvbnRyb2woKSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRmaWx0ZXJjb250cm9scy5hcHBlbmQoIHRoaXMuZ2V0Q2hlY2tib3hlc0NvbnRyb2woKSApO1xuXHRcdH1cblxuXHR9XG5cblx0cHJpdmF0ZSBnZXRDaGVja2JveGVzQ29udHJvbCgpIHtcblxuXHRcdGxldCBjaGVja2JveGVzID0gJCggJzxkaXYgY2xhc3M9XCJmaWx0ZXJlZC12YWx1ZS1jaGVja2JveGVzXCIgc3R5bGU9XCJ3aWR0aDogMTAwJTtcIj4nICk7XG5cblx0XHQvLyBpbnNlcnQgb3B0aW9ucyAoY2hlY2tib3hlcyBhbmQgbGFiZWxzKVxuXHRcdGZvciAoIGxldCB2YWx1ZSBvZiB0aGlzLnZhbHVlcyApIHtcblx0XHRcdGNoZWNrYm94ZXMuYXBwZW5kKCBgPGRpdiBjbGFzcz1cImZpbHRlcmVkLXZhbHVlLW9wdGlvblwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgdmFsdWU9XCIke3ZhbHVlLnByaW50b3V0VmFsdWV9XCIgPjxkaXYgY2xhc3M9XCJmaWx0ZXJlZC12YWx1ZS1vcHRpb24tbGFiZWxcIj4ke3ZhbHVlLmZvcm1hdHRlZFZhbHVlIHx8IHZhbHVlLnByaW50b3V0VmFsdWV9PC9kaXY+PC9sYWJlbD48L2Rpdj5gICk7XG5cdFx0fVxuXG5cdFx0Ly8gYXR0YWNoIGV2ZW50IGhhbmRsZXJcblx0XHRjaGVja2JveGVzXG5cdFx0Lm9uKCAnY2hhbmdlJywgJzpjaGVja2JveCcsICggZXZlbnRPYmplY3Q6IEpRdWVyeUV2ZW50T2JqZWN0ICkgPT4ge1xuXHRcdFx0bGV0IGNoZWNrYm94RWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PiBldmVudE9iamVjdC5jdXJyZW50VGFyZ2V0O1xuXHRcdFx0dGhpcy5vbkZpbHRlclVwZGF0ZWQoIGNoZWNrYm94RWxlbWVudC52YWx1ZSwgY2hlY2tib3hFbGVtZW50LmNoZWNrZWQgKTtcblx0XHR9ICk7XG5cblx0XHRyZXR1cm4gY2hlY2tib3hlcztcblx0fVxuXG5cdHByaXZhdGUgZ2V0U2VsZWN0ZWQyQ29udHJvbCgpIHtcblxuXHRcdGxldCBzZWxlY3QgPSAkKCAnPHNlbGVjdCBjbGFzcz1cImZpbHRlcmVkLXZhbHVlLXNlbGVjdFwiIHN0eWxlPVwid2lkdGg6IDEwMCU7XCI+JyApO1xuXG5cdFx0bGV0IGRhdGE6IElkVGV4dFBhaXJbXSA9IFtdO1xuXG5cdFx0Ly8gaW5zZXJ0IG9wdGlvbnMgKGNoZWNrYm94ZXMgYW5kIGxhYmVscykgYW5kIGF0dGFjaCBldmVudCBoYW5kbGVyc1xuXHRcdGZvciAoIGxldCB2YWx1ZSBvZiB0aGlzLnZhbHVlcyApIHtcblx0XHRcdC8vIFRyeSB0byBnZXQgbGFiZWwsIGlmIG5vdCBmYWxsIGJhY2sgdG8gdmFsdWUgaWRcblx0XHRcdGxldCBsYWJlbCA9IHZhbHVlLnByaW50b3V0VmFsdWU7XG5cdFx0XHRkYXRhLnB1c2goIHsgaWQ6IHZhbHVlLnByaW50b3V0VmFsdWUsIHRleHQ6IGxhYmVsIH0gKTtcblxuXHRcdH1cblxuXHRcdG13LmxvYWRlci51c2luZyggJ2V4dC5zcmYuZmlsdGVyZWQudmFsdWUtZmlsdGVyLnNlbGVjdCcgKS50aGVuKCAoKSA9PiB7XG5cblx0XHRcdHNlbGVjdC5zZWxlY3QyKCB7XG5cdFx0XHRcdG11bHRpcGxlOiB0cnVlLFxuXHRcdFx0XHRwbGFjZWhvbGRlcjogbXcubWVzc2FnZSggJ3NyZi1maWx0ZXJlZC12YWx1ZS1maWx0ZXItcGxhY2Vob2xkZXInICkudGV4dCgpLFxuXHRcdFx0XHRkYXRhOiBkYXRhXG5cdFx0XHR9ICk7XG5cblx0XHRcdHNlbGVjdC5vbiggXCJzZWxlY3QyOnNlbGVjdFwiLCAoIGU6IGFueSApID0+IHtcblx0XHRcdFx0dGhpcy5vbkZpbHRlclVwZGF0ZWQoIGUucGFyYW1zLmRhdGEuaWQsIHRydWUgKTtcblx0XHRcdH0gKTtcblxuXHRcdFx0c2VsZWN0Lm9uKCBcInNlbGVjdDI6dW5zZWxlY3RcIiwgKCBlOiBhbnkgKSA9PiB7XG5cdFx0XHRcdHRoaXMub25GaWx0ZXJVcGRhdGVkKCBlLnBhcmFtcy5kYXRhLmlkLCBmYWxzZSApO1xuXHRcdFx0fSApO1xuXG5cdFx0fSApO1xuXG5cdFx0cmV0dXJuIHNlbGVjdDtcblx0fVxuXG5cdHByaXZhdGUgYWRkQ29udHJvbEZvclN3aXRjaGVzKCBmaWx0ZXJjb250cm9sczogSlF1ZXJ5ICk6IEpRdWVyeSB7XG5cdFx0Ly8gaW5zZXJ0IHN3aXRjaGVzXG5cdFx0bGV0IHN3aXRjaGVzID0gdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnc3dpdGNoZXMnICkgPyB0aGlzLm9wdGlvbnNbICdzd2l0Y2hlcycgXSA6IHVuZGVmaW5lZDtcblx0XHRpZiAoIHN3aXRjaGVzICE9PSB1bmRlZmluZWQgJiYgc3dpdGNoZXMubGVuZ3RoID4gMCApIHtcblxuXHRcdFx0bGV0IHN3aXRjaENvbnRyb2xzID0gJCggJzxkaXYgY2xhc3M9XCJmaWx0ZXJlZC12YWx1ZS1zd2l0Y2hlc1wiPicgKTtcblxuXHRcdFx0aWYgKCAkLmluQXJyYXkoICdhbmQgb3InLCBzd2l0Y2hlcyApID49IDAgKSB7XG5cblx0XHRcdFx0bGV0IGFuZG9yQ29udHJvbCA9ICQoICc8ZGl2IGNsYXNzPVwiZmlsdGVyZWQtdmFsdWUtYW5kb3JcIj4nICk7XG5cblx0XHRcdFx0bGV0IG9yQ29udHJvbCA9IHRoaXMuZ2V0UmFkaW9Db250cm9sKCAnb3InLCB0cnVlICk7XG5cdFx0XHRcdGxldCBhbmRDb250cm9sID0gdGhpcy5nZXRSYWRpb0NvbnRyb2woICdhbmQnICk7XG5cblx0XHRcdFx0YW5kb3JDb250cm9sXG5cdFx0XHRcdC5hcHBlbmQoIG9yQ29udHJvbCApXG5cdFx0XHRcdC5hcHBlbmQoIGFuZENvbnRyb2wgKVxuXHRcdFx0XHQuYXBwZW5kVG8oIHN3aXRjaENvbnRyb2xzICk7XG5cblx0XHRcdFx0YW5kb3JDb250cm9sXG5cdFx0XHRcdC5maW5kKCAnaW5wdXQnIClcblx0XHRcdFx0Lm9uKCAnY2hhbmdlJywgdW5kZWZpbmVkLCB7ICdmaWx0ZXInOiB0aGlzIH0sICggZXZlbnRPYmplY3Q6IEpRdWVyeUV2ZW50T2JqZWN0ICkgPT5cblx0XHRcdFx0XHRldmVudE9iamVjdC5kYXRhLmZpbHRlci51c2VPciggZXZlbnRPYmplY3QudGFyZ2V0LmdldEF0dHJpYnV0ZSgndmFsdWUnICkgPT09ICdvcicgKVxuXHRcdFx0XHQpO1xuXG5cdFx0XHR9XG5cblx0XHRcdGZpbHRlcmNvbnRyb2xzLmFwcGVuZCggc3dpdGNoQ29udHJvbHMgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZmlsdGVyY29udHJvbHM7XG5cdH1cblxuXHRwcml2YXRlIGdldFJhZGlvQ29udHJvbCggdHlwZTogc3RyaW5nLCBpc0NoZWNrZWQ6IGJvb2xlYW4gPSBmYWxzZSApIHtcblxuXHRcdGxldCBjaGVja2VkQXR0ciA9IGlzQ2hlY2tlZD8nY2hlY2tlZCc6Jyc7XG5cdFx0bGV0IGxhYmVsVGV4dCA9IG13Lm1lc3NhZ2UoICdzcmYtZmlsdGVyZWQtdmFsdWUtZmlsdGVyLScgKyB0eXBlICkudGV4dCgpO1xuXG5cdFx0bGV0IGNvbnRyb2xUZXh0ID1cblx0XHRcdGA8bGFiZWwgZm9yPVwiZmlsdGVyZWQtdmFsdWUtJHt0eXBlfS0ke3RoaXMucHJpbnRyZXF1ZXN0SWR9XCI+YCArXG5cdFx0XHRgPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJmaWx0ZXJlZC12YWx1ZS0ke3RoaXMucHJpbnRyZXF1ZXN0SWR9XCIgIGNsYXNzPVwiZmlsdGVyZWQtdmFsdWUtJHt0eXBlfVwiIGlkPVwiZmlsdGVyZWQtdmFsdWUtJHt0eXBlfS0ke3RoaXMucHJpbnRyZXF1ZXN0SWR9XCIgdmFsdWU9XCIke3R5cGV9XCIgJHtjaGVja2VkQXR0cn0+YCArXG5cdFx0XHRgJHtsYWJlbFRleHR9PC9sYWJlbD5gO1xuXG5cdFx0cmV0dXJuICQoIGNvbnRyb2xUZXh0ICk7XG5cdH1cblxuXHRwdWJsaWMgaXNWaXNpYmxlKCByb3dJZDogc3RyaW5nICk6IGJvb2xlYW4ge1xuXG5cdFx0aWYgKCB0aGlzLnZpc2libGVWYWx1ZXMubGVuZ3RoID09PSAwICkge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0bGV0IHZhbHVlczogc3RyaW5nW10gPSB0aGlzLmNvbnRyb2xsZXIuZ2V0RGF0YSgpWyByb3dJZCBdLnByaW50b3V0c1sgdGhpcy5wcmludHJlcXVlc3RJZCBdLnZhbHVlcztcblxuXHRcdGlmICggdmFsdWVzLmxlbmd0aCA9PT0gMCApIHtcblx0XHRcdHJldHVybiBzdXBlci5pc1Zpc2libGUoIHJvd0lkICk7XG5cdFx0fVxuXG5cblx0XHRpZiAoIHRoaXMuX3VzZU9yICkge1xuXHRcdFx0Zm9yICggbGV0IGV4cGVjdGVkVmFsdWUgb2YgdGhpcy52aXNpYmxlVmFsdWVzICkge1xuXHRcdFx0XHRpZiAoIHZhbHVlcy5pbmRleE9mKCBleHBlY3RlZFZhbHVlICkgPj0gMCApIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKCBsZXQgZXhwZWN0ZWRWYWx1ZSBvZiB0aGlzLnZpc2libGVWYWx1ZXMgKSB7XG5cdFx0XHRcdGlmICggdmFsdWVzLmluZGV4T2YoIGV4cGVjdGVkVmFsdWUgKSA8IDAgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cdH1cblxuXHRwdWJsaWMgb25GaWx0ZXJVcGRhdGVkKCB2YWx1ZTogc3RyaW5nLCBpc0NoZWNrZWQ6IGJvb2xlYW4gKSB7XG5cdFx0bGV0IGluZGV4ID0gdGhpcy52aXNpYmxlVmFsdWVzLmluZGV4T2YoIHZhbHVlICk7XG5cblx0XHRpZiAoIGlzQ2hlY2tlZCAmJiBpbmRleCA9PT0gLTEgKSB7XG5cdFx0XHR0aGlzLnZpc2libGVWYWx1ZXMucHVzaCggdmFsdWUgKTtcblx0XHR9IGVsc2UgaWYgKCAhaXNDaGVja2VkICYmIGluZGV4ID49IDAgKSB7XG5cdFx0XHR0aGlzLnZpc2libGVWYWx1ZXMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdH1cblxuXHRcdHRoaXMuY29udHJvbGxlci5vbkZpbHRlclVwZGF0ZWQoIHRoaXMuZ2V0SWQoKSApO1xuXHR9XG59XG4iLCJpbXBvcnQgeyBPcHRpb25zIH0gZnJvbSBcIi4uL3R5cGVzXCI7XG5pbXBvcnQgeyBDb250cm9sbGVyIH0gZnJvbSBcIi4vQ29udHJvbGxlclwiO1xuaW1wb3J0IHsgVmlld1NlbGVjdG9yIH0gZnJvbSBcIi4vVmlld1NlbGVjdG9yXCI7XG5pbXBvcnQgeyBWaWV3IH0gZnJvbSBcIi4vVmlldy9WaWV3XCI7XG5pbXBvcnQgeyBMaXN0VmlldyB9IGZyb20gXCIuL1ZpZXcvTGlzdFZpZXdcIjtcbmltcG9ydCB7IFRhYmxlVmlldyB9IGZyb20gXCIuL1ZpZXcvVGFibGVWaWV3XCI7XG5pbXBvcnQgeyBNYXBWaWV3IH0gZnJvbSBcIi4vVmlldy9NYXBWaWV3XCI7XG5pbXBvcnQgeyBDYWxlbmRhclZpZXcgfSBmcm9tIFwiLi9WaWV3L0NhbGVuZGFyVmlld1wiO1xuaW1wb3J0IHsgRmlsdGVyIH0gZnJvbSBcIi4vRmlsdGVyL0ZpbHRlclwiO1xuaW1wb3J0IHsgVmFsdWVGaWx0ZXIgfSBmcm9tIFwiLi9GaWx0ZXIvVmFsdWVGaWx0ZXJcIjtcbmltcG9ydCB7IERpc3RhbmNlRmlsdGVyIH0gZnJvbSBcIi4vRmlsdGVyL0Rpc3RhbmNlRmlsdGVyXCI7XG5pbXBvcnQgeyBOdW1iZXJGaWx0ZXIgfSBmcm9tIFwiLi9GaWx0ZXIvTnVtYmVyRmlsdGVyXCI7XG5cbi8qKlxuICogQ2VudHJhbCBGaWx0ZXJlZCBjbGFzc1xuICpcbiAqIEZhY3RvcnkgdG8gc2V0dXAgZXZlcnlodGluZyBlbHNlXG4gKi9cbmV4cG9ydCBjbGFzcyBGaWx0ZXJlZCB7XG5cblx0cHJpdmF0ZSBjb25maWc6IGFueTtcblx0cHJpdmF0ZSB0YXJnZXQ6IEpRdWVyeTtcblxuXHRwcml2YXRlIHZpZXdUeXBlczogeyBba2V5OiBzdHJpbmddOiBuZXcoIGlkOiBzdHJpbmcsIHRhcmdldDogSlF1ZXJ5LCBjb250cm9sbGVyOiBDb250cm9sbGVyLCBvcHRpb25zPzogYW55ICkgPT4gVmlldyB9ID0ge1xuXHRcdHRhYmxlOiBUYWJsZVZpZXcsXG5cdFx0bGlzdDogTGlzdFZpZXcsXG5cdFx0bWFwOiBNYXBWaWV3LFxuXHRcdGNhbGVuZGFyOiBDYWxlbmRhclZpZXdcblx0fTtcblxuXHRwcml2YXRlIGZpbHRlclR5cGVzOiB7IFtrZXk6IHN0cmluZ106IG5ldyggaWQ6IHN0cmluZywgdGFyZ2V0OiBKUXVlcnksIHByaW50cmVxdWVzdElkOiBzdHJpbmcsIGNvbnRyb2xsZXI6IENvbnRyb2xsZXIsIG9wdGlvbnM/OiBPcHRpb25zICkgPT4gRmlsdGVyIH0gPSB7XG5cdFx0dmFsdWU6IFZhbHVlRmlsdGVyLFxuXHRcdGRpc3RhbmNlOiBEaXN0YW5jZUZpbHRlcixcblx0XHRudW1iZXI6IE51bWJlckZpbHRlclxuXHR9O1xuXG5cdC8qKlxuXHQgKlxuXHQgKiBAcGFyYW0gdGFyZ2V0XG5cdCAqIEBwYXJhbSBjb25maWdcblx0ICovXG5cdHB1YmxpYyBjb25zdHJ1Y3RvciggdGFyZ2V0OiBKUXVlcnksIGNvbmZpZzogYW55ICkge1xuXHRcdHRoaXMuY29uZmlnID0gY29uZmlnO1xuXHRcdHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuXHR9XG5cblx0cHVibGljIHJ1bigpIHtcblxuXHRcdGxldCBjb250cm9sbGVyID0gbmV3IENvbnRyb2xsZXIoIHRoaXMudGFyZ2V0LCB0aGlzLmNvbmZpZy5kYXRhLCB0aGlzLmNvbmZpZy5wcmludHJlcXVlc3RzICk7XG5cblx0XHR0aGlzLmF0dGFjaEZpbHRlcnMoIGNvbnRyb2xsZXIsIHRoaXMudGFyZ2V0LmNoaWxkcmVuKCAnZGl2LmZpbHRlcmVkLWZpbHRlcnMnICkgKTtcblx0XHR0aGlzLmF0dGFjaFZpZXdTZWxlY3RvciggY29udHJvbGxlciwgdGhpcy50YXJnZXQuZmluZCggJ2Rpdi5maWx0ZXJlZC12aWV3cy1zZWxlY3RvcnMtY29udGFpbmVyJyApICk7XG5cdFx0dGhpcy5hdHRhY2hWaWV3cyggY29udHJvbGxlciwgdGhpcy50YXJnZXQuZmluZCggJ2Rpdi5maWx0ZXJlZC12aWV3cy1jb250YWluZXInICkgKTtcblxuXHRcdC8vIGxpZnQtb2ZmXG5cdFx0Y29udHJvbGxlci5zaG93KCk7XG5cblx0fVxuXG5cdHByaXZhdGUgYXR0YWNoRmlsdGVycyggY29udHJvbGxlcjogQ29udHJvbGxlciwgZmlsdGVyc0NvbnRhaW5lcjogSlF1ZXJ5ICkge1xuXG5cdFx0Zm9yICggbGV0IHBySWQgaW4gdGhpcy5jb25maWcucHJpbnRyZXF1ZXN0cyApIHtcblxuXHRcdFx0bGV0IHByID0gdGhpcy5jb25maWcucHJpbnRyZXF1ZXN0c1sgcHJJZCBdO1xuXG5cdFx0XHRpZiAoIHByLmhhc093blByb3BlcnR5KCAnZmlsdGVycycgKSApIHtcblxuXHRcdFx0XHRmb3IgKCBsZXQgZmlsdGVyaWQgaW4gcHIuZmlsdGVycyApIHtcblxuXHRcdFx0XHRcdGlmICggcHIuZmlsdGVycy5oYXNPd25Qcm9wZXJ0eSggZmlsdGVyaWQgKSAmJlxuXHRcdFx0XHRcdFx0cHIuZmlsdGVyc1sgZmlsdGVyaWQgXS5oYXNPd25Qcm9wZXJ0eSggJ3R5cGUnICkgJiZcblx0XHRcdFx0XHRcdHRoaXMuZmlsdGVyVHlwZXMuaGFzT3duUHJvcGVydHkoIHByLmZpbHRlcnNbIGZpbHRlcmlkIF0udHlwZSApICkge1xuXG5cdFx0XHRcdFx0XHQvLyAgdGFyZ2V0OiBKUXVlcnksIHByaW50cmVxdWVzdDogc3RyaW5nLFxuXHRcdFx0XHRcdFx0Ly8gY29udHJvbGxlcjogQ29udHJvbGxlciwgb3B0aW9ucz86IE9wdGlvbnNcblx0XHRcdFx0XHRcdGxldCBmaWx0ZXI6IEZpbHRlciA9IG5ldyB0aGlzLmZpbHRlclR5cGVzWyBwci5maWx0ZXJzWyBmaWx0ZXJpZCBdLnR5cGUgXSggZmlsdGVyaWQsIGZpbHRlcnNDb250YWluZXIuY2hpbGRyZW4oICcjJyArIGZpbHRlcmlkICksIHBySWQsIGNvbnRyb2xsZXIsIHByLmZpbHRlcnNbIGZpbHRlcmlkIF0gKTtcblxuXHRcdFx0XHRcdFx0Y29udHJvbGxlci5hdHRhY2hGaWx0ZXIoIGZpbHRlciApO1xuXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIGF0dGFjaFZpZXdTZWxlY3RvciggY29udHJvbGxlcjogQ29udHJvbGxlciwgdmlld1NlbGVjdG9yQ29udGFpbmVyOiBKUXVlcnkgKSB7XG5cdFx0bGV0IHZpZXdTZWxlY3RvciA9IG5ldyBWaWV3U2VsZWN0b3IoIHZpZXdTZWxlY3RvckNvbnRhaW5lciwgT2JqZWN0LmtleXMoIHRoaXMuY29uZmlnLnZpZXdzICksIGNvbnRyb2xsZXIgKTtcblx0XHR2aWV3U2VsZWN0b3IuaW5pdCgpO1xuXHR9XG5cblx0cHJpdmF0ZSBhdHRhY2hWaWV3cyggY29udHJvbGxlcjogQ29udHJvbGxlciwgdmlld3NDb250YWluZXI6IEpRdWVyeSApIHtcblxuXHRcdC8vIGF0dGFjaCB2aWV3c1xuXHRcdGZvciAoIGxldCB2aWV3aWQgaW4gdGhpcy5jb25maWcudmlld3MgKSB7XG5cblx0XHRcdGxldCB2aWV3dHlwZSA9IHRoaXMuY29uZmlnLnZpZXdzWyB2aWV3aWQgXVsgJ3R5cGUnIF07XG5cdFx0XHRsZXQgdmlld0hhbmRsZXJDbGFzcyA9IHRoaXMudmlld1R5cGVzLmhhc093blByb3BlcnR5KCB2aWV3dHlwZSApID8gdGhpcy52aWV3VHlwZXNbIHZpZXd0eXBlIF0gOiBWaWV3O1xuXG5cdFx0XHRsZXQgdmlldzogVmlldyA9IG5ldyB2aWV3SGFuZGxlckNsYXNzKCB2aWV3aWQsIHZpZXdzQ29udGFpbmVyLmNoaWxkcmVuKCAnIycgKyB2aWV3aWQgKSwgY29udHJvbGxlciwgdGhpcy5jb25maWcudmlld3NbIHZpZXdpZCBdICk7XG5cblx0XHRcdHZpZXcuaW5pdCgpO1xuXG5cdFx0XHRjb250cm9sbGVyLmF0dGFjaFZpZXcoIHZpZXdpZCwgdmlldyApO1xuXG5cdFx0fVxuXHR9XG59XG4iLCJpbXBvcnQgeyBWaWV3IH0gZnJvbSBcIi4vVmlld1wiO1xuZGVjbGFyZSBsZXQgbXc6IGFueTtcblxuZXhwb3J0IGNsYXNzIENhbGVuZGFyVmlldyBleHRlbmRzIFZpZXcge1xuXG5cdHByaXZhdGUgZ2V0STE4TigpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0bW9udGhOYW1lczogWyBtdy5tc2coICdqYW51YXJ5JyApLCBtdy5tc2coICdmZWJydWFyeScgKSwgbXcubXNnKCAnbWFyY2gnICksXG5cdFx0XHRcdG13Lm1zZyggJ2FwcmlsJyApLCBtdy5tc2coICdtYXlfbG9uZycgKSwgbXcubXNnKCAnanVuZScgKSxcblx0XHRcdFx0bXcubXNnKCAnanVseScgKSwgbXcubXNnKCAnYXVndXN0JyApLCBtdy5tc2coICdzZXB0ZW1iZXInICksXG5cdFx0XHRcdG13Lm1zZyggJ29jdG9iZXInICksIG13Lm1zZyggJ25vdmVtYmVyJyApLCBtdy5tc2coICdkZWNlbWJlcicgKVxuXHRcdFx0XSxcblx0XHRcdG1vbnRoTmFtZXNTaG9ydDogWyBtdy5tc2coICdqYW4nICksIG13Lm1zZyggJ2ZlYicgKSwgbXcubXNnKCAnbWFyJyApLFxuXHRcdFx0XHRtdy5tc2coICdhcHInICksIG13Lm1zZyggJ21heScgKSwgbXcubXNnKCAnanVuJyApLFxuXHRcdFx0XHRtdy5tc2coICdqdWwnICksIG13Lm1zZyggJ2F1ZycgKSwgbXcubXNnKCAnc2VwJyApLFxuXHRcdFx0XHRtdy5tc2coICdvY3QnICksIG13Lm1zZyggJ25vdicgKSwgbXcubXNnKCAnZGVjJyApXG5cdFx0XHRdLFxuXHRcdFx0ZGF5TmFtZXM6IFsgbXcubXNnKCAnc3VuZGF5JyApLCBtdy5tc2coICdtb25kYXknICksIG13Lm1zZyggJ3R1ZXNkYXknICksXG5cdFx0XHRcdG13Lm1zZyggJ3dlZG5lc2RheScgKSwgbXcubXNnKCAndGh1cnNkYXknICksIG13Lm1zZyggJ2ZyaWRheScgKSwgbXcubXNnKCAnc2F0dXJkYXknIClcblx0XHRcdF0sXG5cdFx0XHRkYXlOYW1lc1Nob3J0OiBbIG13Lm1zZyggJ3N1bicgKSwgbXcubXNnKCAnbW9uJyApLCBtdy5tc2coICd0dWUnICksXG5cdFx0XHRcdG13Lm1zZyggJ3dlZCcgKSwgbXcubXNnKCAndGh1JyApLCBtdy5tc2coICdmcmknICksIG13Lm1zZyggJ3NhdCcgKVxuXHRcdFx0XSxcblx0XHRcdGJ1dHRvblRleHQ6IHtcblx0XHRcdFx0dG9kYXk6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWxhYmVsLXRvZGF5JyApLFxuXHRcdFx0XHRtb250aDogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItbGFiZWwtbW9udGgnICksXG5cdFx0XHRcdHdlZWs6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWxhYmVsLXdlZWsnICksXG5cdFx0XHRcdGRheTogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItbGFiZWwtZGF5JyApXG5cdFx0XHR9XG5cdFx0XHQsXG5cdFx0XHRhbGxEYXlUZXh0OiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1sYWJlbC1hbGxkYXknICksXG5cdFx0XHR0aW1lRm9ybWF0OiB7XG5cdFx0XHRcdCcnOiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1mb3JtYXQtdGltZScgKSxcblx0XHRcdFx0YWdlbmRhOiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1mb3JtYXQtdGltZS1hZ2VuZGEnIClcblx0XHRcdH1cblx0XHRcdCxcblx0XHRcdGF4aXNGb3JtYXQ6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWZvcm1hdC1heGlzJyApLFxuXHRcdFx0dGl0bGVGb3JtYXQ6IHtcblx0XHRcdFx0bW9udGg6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWZvcm1hdC10aXRsZS1tb250aCcgKSxcblx0XHRcdFx0d2VlazogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItZm9ybWF0LXRpdGxlLXdlZWsnICksXG5cdFx0XHRcdGRheTogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItZm9ybWF0LXRpdGxlLWRheScgKVxuXHRcdFx0fVxuXHRcdFx0LFxuXHRcdFx0Y29sdW1uRm9ybWF0OiB7XG5cdFx0XHRcdG1vbnRoOiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1mb3JtYXQtY29sdW1uLW1vbnRoJyApLFxuXHRcdFx0XHR3ZWVrOiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1mb3JtYXQtY29sdW1uLXdlZWsnICksXG5cdFx0XHRcdGRheTogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItZm9ybWF0LWNvbHVtbi1kYXknIClcblx0XHRcdH1cblx0XHR9O1xuXHR9XG5cblx0cHVibGljIGluaXQoKSB7XG5cblx0XHRsZXQgX2kxOG4gPSB0aGlzLmdldEkxOE4oKTtcblxuXHRcdC8vIGluaXRpYWxpemUgdGhlIGNhbGVuZGFyXG5cdFx0dGhpcy50YXJnZXQuZnVsbENhbGVuZGFyKCB7XG5cblx0XHRcdGZpcnN0RGF5OiB0aGlzLm9wdGlvbnMuZmlyc3REYXksXG5cdFx0XHRpc1JUTDogdGhpcy5vcHRpb25zLmlzUlRMLFxuXHRcdFx0bW9udGhOYW1lczogX2kxOG4ubW9udGhOYW1lcyxcblx0XHRcdG1vbnRoTmFtZXNTaG9ydDogX2kxOG4ubW9udGhOYW1lc1Nob3J0LFxuXHRcdFx0ZGF5TmFtZXM6IF9pMThuLmRheU5hbWVzLFxuXHRcdFx0ZGF5TmFtZXNTaG9ydDogX2kxOG4uZGF5TmFtZXNTaG9ydCxcblx0XHRcdGJ1dHRvblRleHQ6IF9pMThuLmJ1dHRvblRleHQsXG5cdFx0XHRhbGxEYXlUZXh0OiBfaTE4bi5hbGxEYXlUZXh0LFxuXHRcdFx0dGltZUZvcm1hdDogX2kxOG4udGltZUZvcm1hdCxcblx0XHRcdHRpdGxlRm9ybWF0OiBfaTE4bi50aXRsZUZvcm1hdCxcblx0XHRcdGNvbHVtbkZvcm1hdDogX2kxOG4uY29sdW1uRm9ybWF0XG5cdFx0fSApO1xuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblxuXHRwcml2YXRlIGdldEV2ZW50KCByb3dJZDogYW55LCByb3dEYXRhOiBhbnkgKSB7XG5cblx0XHRsZXQgZXZlbnRkYXRhOiBhbnkgPSB7XG5cdFx0XHRpZDogcm93SWQsXG5cdFx0XHR0aXRsZTogcm93RGF0YVsgJ3RpdGxlJyBdLFxuXHRcdFx0c3RhcnQ6IHJvd0RhdGFbICdzdGFydCcgXSxcblx0XHRcdGNsYXNzTmFtZTogcm93SWRcblx0XHR9O1xuXG5cdFx0aWYgKCByb3dEYXRhLmhhc093blByb3BlcnR5KCAnZW5kJyApICkge1xuXHRcdFx0ZXZlbnRkYXRhWyAnZW5kJyBdID0gcm93RGF0YVsgJ2VuZCcgXTtcblx0XHR9XG5cblx0XHRpZiAoIHJvd0RhdGEuaGFzT3duUHJvcGVydHkoICd1cmwnICkgKSB7XG5cdFx0XHRldmVudGRhdGFbICd1cmwnIF0gPSByb3dEYXRhWyAndXJsJyBdO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudGRhdGE7XG5cdH1cblxuXHRwdWJsaWMgc2hvd1Jvd3MoIHJvd0lkczogc3RyaW5nW10gKTogYW55IHtcblxuXHRcdGxldCBldmVudHM6IGFueVtdID0gW107XG5cblx0XHRyb3dJZHMuZm9yRWFjaCggKCByb3dJZDogc3RyaW5nICkgPT4ge1xuXG5cdFx0XHRsZXQgcm93RGF0YSA9IHRoaXMuY29udHJvbGxlci5nZXREYXRhKClbIHJvd0lkIF0uZGF0YVsgdGhpcy5pZCBdO1xuXG5cdFx0XHRpZiAoIHJvd0RhdGEuaGFzT3duUHJvcGVydHkoICdzdGFydCcgKSApIHtcblx0XHRcdFx0ZXZlbnRzLnB1c2goIHRoaXMuZ2V0RXZlbnQoIHJvd0lkLCByb3dEYXRhICkgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cblx0XHR0aGlzLnRhcmdldC5mdWxsQ2FsZW5kYXIoICdhZGRFdmVudFNvdXJjZScsIGV2ZW50cyApO1xuXHR9XG5cblx0cHVibGljIGhpZGVSb3dzKCByb3dJZHM6IHN0cmluZ1tdICk6IGFueSB7XG5cdFx0dGhpcy50YXJnZXQuZnVsbENhbGVuZGFyKCAncmVtb3ZlRXZlbnRzJywgKCBlOiBhbnkgKSA9PiAoIHJvd0lkcy5pbmRleE9mKCBlLl9pZCApID49IDAgKSApO1xuXHR9XG5cblx0cHVibGljIHNob3coKTogYW55IHtcblx0XHRzdXBlci5zaG93KCk7XG5cdFx0dGhpcy50YXJnZXQuZnVsbENhbGVuZGFyKCAncmVuZGVyJyApO1xuXHR9XG5cblx0cHVibGljIGhpZGUoKTogYW55IHtcblx0XHRyZXR1cm4gc3VwZXIuaGlkZSgpO1xuXHR9XG5cbn1cbiIsImltcG9ydCB7IFZpZXcgfSBmcm9tIFwiLi9WaWV3XCI7XG5leHBvcnQgY2xhc3MgTGlzdFZpZXcgZXh0ZW5kcyBWaWV3IHt9XG4iLCIvLy8gPHJlZmVyZW5jZSB0eXBlcz1cImxlYWZsZXRcIiAvPlxuXG5pbXBvcnQgeyBWaWV3IH0gZnJvbSBcIi4vVmlld1wiO1xuaW1wb3J0IHsgT3B0aW9ucyB9IGZyb20gXCIuLi8uLi90eXBlc1wiXG5cbmRlY2xhcmUgbGV0IG13OiBhbnk7XG5cbmV4cG9ydCBjbGFzcyBNYXBWaWV3IGV4dGVuZHMgVmlldyB7XG5cblx0cHJpdmF0ZSBtYXA6IEwuTWFwID0gdW5kZWZpbmVkO1xuXHRwcml2YXRlIGljb246IEwuSWNvbiA9IHVuZGVmaW5lZDtcblx0cHJpdmF0ZSBtYXJrZXJzOiB7IFtrZXk6IHN0cmluZ106IEwuTWFya2VyW10gfSA9IHVuZGVmaW5lZDtcblx0cHJpdmF0ZSBtYXJrZXJDbHVzdGVyR3JvdXA6IEwuTWFya2VyQ2x1c3Rlckdyb3VwID0gdW5kZWZpbmVkO1xuXHRwcml2YXRlIGJvdW5kczogTC5MYXRMbmdCb3VuZHMgPSB1bmRlZmluZWQ7XG5cdHByaXZhdGUgaW5pdGlhbGl6ZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuXHRwcml2YXRlIHpvb206IG51bWJlciA9IC0xO1xuXHRwcml2YXRlIG1pblpvb206IG51bWJlciA9IC0xO1xuXHRwcml2YXRlIG1heFpvb206IG51bWJlciA9IC0xO1xuXG5cdHByaXZhdGUgbGVhZmxldFByb21pc2U6IFByb21pc2U8YW55PiA9IHVuZGVmaW5lZDtcblxuXHRwdWJsaWMgaW5pdCgpIHtcblxuXHRcdGxldCBkYXRhID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKTtcblx0XHRsZXQgbWFya2VyczogeyBbcm93SWQ6IHN0cmluZ106IEwuTWFya2VyW10gfSA9IHt9O1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkoICdoZWlnaHQnICkgKSB7XG5cdFx0XHR0aGlzLnRhcmdldC5oZWlnaHQoIHRoaXMub3B0aW9ucy5oZWlnaHQgKTtcblx0XHR9XG5cblx0XHR0aGlzLmxlYWZsZXRQcm9taXNlID0gbXcubG9hZGVyLnVzaW5nKCAnZXh0LnNyZi5maWx0ZXJlZC5tYXAtdmlldy5sZWFmbGV0JyApXG5cdFx0LnRoZW4oICgpID0+IHtcblxuXHRcdFx0bGV0IGJvdW5kczogTC5MYXRMbmdCb3VuZHMgPSB1bmRlZmluZWQ7XG5cdFx0XHRsZXQgZGlzYWJsZUNsdXN0ZXJpbmdBdFpvb20gPSB0aGlzLmdldFpvb21Gb3JVbmNsdXN0ZXJpbmcoKTtcblxuXHRcdFx0bGV0IGNsdXN0ZXJPcHRpb25zOiBPcHRpb25zID0ge1xuXHRcdFx0XHRhbmltYXRlQWRkaW5nTWFya2VyczogdHJ1ZSxcblx0XHRcdFx0ZGlzYWJsZUNsdXN0ZXJpbmdBdFpvb206IGRpc2FibGVDbHVzdGVyaW5nQXRab29tLFxuXHRcdFx0XHRzcGlkZXJmeU9uTWF4Wm9vbTogZGlzYWJsZUNsdXN0ZXJpbmdBdFpvb20gPT09IG51bGxcblx0XHRcdH07XG5cblx0XHRcdGNsdXN0ZXJPcHRpb25zID0gdGhpcy5nZXRPcHRpb25zKCBbICdtYXhDbHVzdGVyUmFkaXVzJywgJ3pvb21Ub0JvdW5kc09uQ2xpY2snIF0sIGNsdXN0ZXJPcHRpb25zICk7XG5cblx0XHRcdGxldCBtYXJrZXJDbHVzdGVyR3JvdXA6IEwuTWFya2VyQ2x1c3Rlckdyb3VwID0gTC5tYXJrZXJDbHVzdGVyR3JvdXAoIGNsdXN0ZXJPcHRpb25zICk7XG5cblx0XHRcdGZvciAoIGxldCByb3dJZCBpbiBkYXRhICkge1xuXG5cdFx0XHRcdGlmICggZGF0YVsgcm93SWQgXVsgJ2RhdGEnIF0uaGFzT3duUHJvcGVydHkoIHRoaXMuaWQgKSApIHtcblx0XHRcdFx0XHRsZXQgcG9zaXRpb25zOiBMLkxhdExuZ0xpdGVyYWxbXSA9IGRhdGFbIHJvd0lkIF1bICdkYXRhJyBdWyB0aGlzLmlkIF1bICdwb3NpdGlvbnMnIF07XG5cdFx0XHRcdFx0bWFya2Vyc1sgcm93SWQgXSA9IFtdO1xuXG5cdFx0XHRcdFx0Zm9yICggbGV0IHBvcyBvZiBwb3NpdGlvbnMgKSB7XG5cblx0XHRcdFx0XHRcdGJvdW5kcyA9ICggYm91bmRzID09PSB1bmRlZmluZWQgKSA/IG5ldyBMLkxhdExuZ0JvdW5kcyggcG9zLCBwb3MgKSA6IGJvdW5kcy5leHRlbmQoIHBvcyApO1xuXG5cdFx0XHRcdFx0XHRsZXQgbWFya2VyID0gdGhpcy5nZXRNYXJrZXIoIHBvcywgZGF0YVsgcm93SWQgXSApO1xuXHRcdFx0XHRcdFx0bWFya2Vyc1sgcm93SWQgXS5wdXNoKCBtYXJrZXIgKTtcblx0XHRcdFx0XHRcdG1hcmtlckNsdXN0ZXJHcm91cC5hZGRMYXllciggbWFya2VyICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMubWFya2VyQ2x1c3Rlckdyb3VwID0gbWFya2VyQ2x1c3Rlckdyb3VwO1xuXHRcdFx0dGhpcy5tYXJrZXJzID0gbWFya2Vycztcblx0XHRcdHRoaXMuYm91bmRzID0gKCBib3VuZHMgPT09IHVuZGVmaW5lZCApID8gbmV3IEwuTGF0TG5nQm91bmRzKCBbIC0xODAsIC05MCBdLCBbIDE4MCwgOTAgXSApIDogYm91bmRzO1xuXHRcdH0gKTtcblxuXHRcdHJldHVybiBzdXBlci5pbml0KCk7XG5cdH1cblxuXHRwcml2YXRlIGdldFpvb21Gb3JVbmNsdXN0ZXJpbmcoKSB7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ21hcmtlciBjbHVzdGVyJyApICYmIHRoaXMub3B0aW9uc1sgJ21hcmtlciBjbHVzdGVyJyBdID09PSBmYWxzZSApIHtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnbWFya2VyIGNsdXN0ZXIgbWF4IHpvb20nICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5vcHRpb25zWyAnbWFya2VyIGNsdXN0ZXIgbWF4IHpvb20nIF0gKyAxO1xuXHRcdH1cblxuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRJY29uKCkge1xuXHRcdGlmICggdGhpcy5pY29uID09PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdGxldCBpY29uUGF0aCA9IHRoaXMuY29udHJvbGxlci5nZXRQYXRoKCkgKyAnY3NzL2ltYWdlcy8nO1xuXG5cdFx0XHR0aGlzLmljb24gPSBuZXcgTC5JY29uKCB7XG5cdFx0XHRcdCdpY29uVXJsJzogaWNvblBhdGggKyAnbWFya2VyLWljb24ucG5nJyxcblx0XHRcdFx0J2ljb25SZXRpbmFVcmwnOiBpY29uUGF0aCArICdtYXJrZXItaWNvbi0yeC5wbmcnLFxuXHRcdFx0XHQnc2hhZG93VXJsJzogaWNvblBhdGggKyAnbWFya2VyLXNoYWRvdy5wbmcnLFxuXHRcdFx0XHQnaWNvblNpemUnOiBbIDI1LCA0MSBdLFxuXHRcdFx0XHQnaWNvbkFuY2hvcic6IFsgMTIsIDQxIF0sXG5cdFx0XHRcdCdwb3B1cEFuY2hvcic6IFsgMSwgLTM0IF0sXG5cdFx0XHRcdC8vICd0b29sdGlwQW5jaG9yJzogWzE2LCAtMjhdLFxuXHRcdFx0XHQnc2hhZG93U2l6ZSc6IFsgNDEsIDQxIF1cblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5pY29uO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRNYXJrZXIoIGxhdExuZzogTC5MYXRMbmdFeHByZXNzaW9uLCByb3c6IGFueSApIHtcblx0XHRsZXQgdGl0bGUgPSB1bmRlZmluZWQ7XG5cdFx0bGV0IHBvcHVwID0gW107XG5cblx0XHQvLyBUT0RPOiBVc2UgPGRpdj4gaW5zdGVhZCBvZiA8Yj4gYW5kIGRvIENTUyBzdHlsaW5nXG5cblx0XHRmb3IgKCBsZXQgcHJJZCBpbiByb3dbICdwcmludG91dHMnIF0gKSB7XG5cdFx0XHRsZXQgcHJpbnRyZXF1ZXN0ID0gKHRoaXMuY29udHJvbGxlci5nZXRQcmludFJlcXVlc3RzKCkpWyBwcklkIF07XG5cblx0XHRcdGlmICggISBwcmludHJlcXVlc3QuaGFzT3duUHJvcGVydHkoJ2hpZGUnKSB8fCBwcmludHJlcXVlc3QuaGlkZSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdGxldCBwcmludG91dHMgPSByb3dbICdwcmludG91dHMnIF1bIHBySWQgXTtcblxuXHRcdFx0XHRpZiAoIHRpdGxlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0dGl0bGUgPSBwcmludG91dHNbICd2YWx1ZXMnIF0uam9pbiggJywgJyApO1xuXHRcdFx0XHRcdHBvcHVwLnB1c2goICc8Yj4nICsgcHJpbnRvdXRzWyAnZm9ybWF0dGVkIHZhbHVlcycgXS5qb2luKCAnLCAnICkgKyAnPC9iPicgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRwb3B1cC5wdXNoKCAocHJpbnRvdXRzLmxhYmVsID8gJzxiPicgKyBwcmludG91dHMubGFiZWwgKyAnOjwvYj4gJyA6ICcnKSArIHByaW50b3V0c1sgJ2Zvcm1hdHRlZCB2YWx1ZXMnIF0uam9pbiggJywgJyApIClcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGxldCBtYXJrZXIgPSBMLm1hcmtlciggbGF0TG5nLCB7IHRpdGxlOiB0aXRsZSwgYWx0OiB0aXRsZSB9ICk7XG5cdFx0bWFya2VyLmJpbmRQb3B1cCggcG9wdXAuam9pbiggJzxicj4nICkgKTtcblxuXHRcdG1hcmtlci5zZXRJY29uKCB0aGlzLmdldEljb24oKSApO1xuXHRcdHJldHVybiBtYXJrZXI7XG5cdH1cblxuXHRwdWJsaWMgbGF0ZUluaXQoKSB7XG5cblx0XHRpZiAoIHRoaXMuaW5pdGlhbGl6ZWQgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dGhpcy5pbml0aWFsaXplZCA9IHRydWU7XG5cblx0XHRsZXQgdGhhdCA9IHRoaXM7XG5cblx0XHR0aGlzLmxlYWZsZXRQcm9taXNlLnRoZW4oICgpID0+IHtcblxuXHRcdFx0bGV0IG1hcE9wdGlvbnM6IE9wdGlvbnMgPSB7XG5cdFx0XHRcdGNlbnRlcjogdGhpcy5ib3VuZHMgIT09IHVuZGVmaW5lZCA/IHRoaXMuYm91bmRzLmdldENlbnRlcigpIDogWyAwLCAwIF1cblx0XHRcdH07XG5cblx0XHRcdG1hcE9wdGlvbnMgPSB0aGF0LmdldE9wdGlvbnMoIFsgJ3pvb20nLCAnbWluWm9vbScsICdtYXhab29tJyBdLCBtYXBPcHRpb25zICk7XG5cblx0XHRcdC8vIFRPRE86IExpbWl0IHpvb20gdmFsdWVzIHRvIG1hcCBtYXggem9vbVxuXG5cdFx0XHR0aGF0Lm1hcCA9IEwubWFwKCB0aGF0LmdldFRhcmdldEVsZW1lbnQoKS5nZXQoIDAgKSwgbWFwT3B0aW9ucyApO1xuXHRcdFx0dGhhdC5tYXAuYWRkTGF5ZXIoIHRoYXQubWFya2VyQ2x1c3Rlckdyb3VwICk7XG5cblx0XHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnbWFwIHByb3ZpZGVyJyApICkge1xuXHRcdFx0XHRMLnRpbGVMYXllci5wcm92aWRlciggdGhpcy5vcHRpb25zWyAnbWFwIHByb3ZpZGVyJyBdICkuYWRkVG8oIHRoYXQubWFwICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggIW1hcE9wdGlvbnMuaGFzT3duUHJvcGVydHkoICd6b29tJyApICkge1xuXHRcdFx0XHR0aGF0Lm1hcC5maXRCb3VuZHMoIHRoYXQuYm91bmRzICk7XG5cdFx0XHR9XG5cblx0XHR9ICk7XG5cblx0fVxuXG5cdHB1YmxpYyBnZXRPcHRpb25zKCBrZXlzOiBzdHJpbmdbXSwgZGVmYXVsdHM6IE9wdGlvbnMgPSB7fSApIHtcblxuXHRcdGZvciAoIGxldCBrZXkgb2Yga2V5cyApIHtcblx0XHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCBrZXkgKSApIHtcblx0XHRcdFx0ZGVmYXVsdHNbIGtleSBdID0gdGhpcy5vcHRpb25zWyBrZXkgXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZGVmYXVsdHM7XG5cdH1cblxuXHRwdWJsaWMgc2hvd1Jvd3MoIHJvd0lkczogc3RyaW5nW10gKSB7XG5cdFx0dGhpcy5sZWFmbGV0UHJvbWlzZS50aGVuKCAoKSA9PiB7XG5cdFx0XHR0aGlzLm1hbmlwdWxhdGVMYXllcnMoIHJvd0lkcywgKCBsYXllcnM6IEwuTGF5ZXJbXSApID0+IHtcblx0XHRcdFx0dGhpcy5tYXJrZXJDbHVzdGVyR3JvdXAuYWRkTGF5ZXJzKCBsYXllcnMgKVxuXHRcdFx0fSApXG5cdFx0fSApO1xuXHR9XG5cblx0cHVibGljIGhpZGVSb3dzKCByb3dJZHM6IHN0cmluZ1tdICkge1xuXHRcdHRoaXMubGVhZmxldFByb21pc2UudGhlbiggKCkgPT4ge1xuXHRcdFx0dGhpcy5tYW5pcHVsYXRlTGF5ZXJzKCByb3dJZHMsICggbGF5ZXJzOiBMLkxheWVyW10gKSA9PiB7XG5cdFx0XHRcdHRoaXMubWFya2VyQ2x1c3Rlckdyb3VwLnJlbW92ZUxheWVycyggbGF5ZXJzIClcblx0XHRcdH0gKVxuXHRcdH0gKTtcblx0fVxuXG5cdHByaXZhdGUgbWFuaXB1bGF0ZUxheWVycyggcm93SWRzOiBzdHJpbmdbXSwgY2I6ICggbGF5ZXJzOiBMLkxheWVyW10gKSA9PiB2b2lkICkge1xuXG5cdFx0bGV0IGxheWVyc0Zyb21Sb3dJZHMgPSB0aGlzLmdldExheWVyc0Zyb21Sb3dJZHMoIHJvd0lkcyApO1xuXG5cdFx0aWYgKCBsYXllcnNGcm9tUm93SWRzLmxlbmd0aCA+IDAgKSB7XG5cdFx0XHRjYiggbGF5ZXJzRnJvbVJvd0lkcyApO1xuXHRcdH1cblxuXHR9XG5cblx0cHJpdmF0ZSBnZXRMYXllcnNGcm9tUm93SWRzKCByb3dJZHM6IHN0cmluZ1tdICkge1xuXHRcdHJldHVybiB0aGlzLmZsYXR0ZW4oIHRoaXMuZ2V0TGF5ZXJzRnJvbVJvd0lkc1Jhdyggcm93SWRzICkgKTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0TGF5ZXJzRnJvbVJvd0lkc1Jhdyggcm93SWRzOiBzdHJpbmdbXSApIHtcblx0XHRyZXR1cm4gcm93SWRzLm1hcCggKCByb3dJZDogc3RyaW5nICkgPT4gdGhpcy5tYXJrZXJzWyByb3dJZCBdID8gdGhpcy5tYXJrZXJzWyByb3dJZCBdIDogW10gKTtcblx0fVxuXG5cdHByaXZhdGUgZmxhdHRlbiggbWFya2VyczogTC5MYXllcltdW10gKTogTC5MYXllcltdIHtcblx0XHRyZXR1cm4gbWFya2Vycy5yZWR1Y2UoICggcmVzdWx0OiBMLkxheWVyW10sIGxheWVyczogTC5MYXllcltdICkgPT4gcmVzdWx0LmNvbmNhdCggbGF5ZXJzICksIFtdICk7XG5cdH1cblxuXHRwdWJsaWMgc2hvdygpIHtcblx0XHRzdXBlci5zaG93KCk7XG5cdFx0dGhpcy5sYXRlSW5pdCgpO1xuXHR9XG5cbn1cbiIsImltcG9ydCB7IFZpZXcgfSBmcm9tIFwiLi9WaWV3XCI7XG5leHBvcnQgY2xhc3MgVGFibGVWaWV3IGV4dGVuZHMgVmlldyB7fSIsImltcG9ydCB7IE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcbmltcG9ydCB7IENvbnRyb2xsZXIgfSBmcm9tIFwiLi4vQ29udHJvbGxlclwiO1xuXG5leHBvcnQgY2xhc3MgVmlldyB7XG5cblx0cHJvdGVjdGVkIGlkOiBzdHJpbmcgPSB1bmRlZmluZWQ7XG5cdHByb3RlY3RlZCB0YXJnZXQ6IEpRdWVyeSA9IHVuZGVmaW5lZDtcblx0cHJvdGVjdGVkIGNvbnRyb2xsZXI6IENvbnRyb2xsZXIgPSB1bmRlZmluZWQ7XG5cdHByb3RlY3RlZCBvcHRpb25zOiBPcHRpb25zID0gdW5kZWZpbmVkO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvciggaWQ6IHN0cmluZywgdGFyZ2V0OiBKUXVlcnksIGM6IENvbnRyb2xsZXIsIG9wdGlvbnM6IE9wdGlvbnMgPSB7fSApIHtcblx0XHR0aGlzLmlkID0gaWQ7XG5cdFx0dGhpcy50YXJnZXQgPSB0YXJnZXQ7XG5cdFx0dGhpcy5jb250cm9sbGVyID0gYztcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXHR9XG5cblx0cHVibGljIGluaXQoKSB7fVxuXG5cdHB1YmxpYyBnZXRUYXJnZXRFbGVtZW50KCk6IEpRdWVyeSB7XG5cdFx0cmV0dXJuIHRoaXMudGFyZ2V0O1xuXHR9XG5cblx0cHVibGljIHNob3dSb3dzKCByb3dJZHM6IHN0cmluZ1tdICkge1xuXHRcdHJvd0lkcy5mb3JFYWNoKCAoIHJvd0lkOiBzdHJpbmcgKSA9PiB7XG5cdFx0XHR0aGlzLnRhcmdldC5maW5kKCAnLicgKyByb3dJZCApLnNsaWRlRG93biggNDAwICk7XG5cdFx0fSApO1xuXHR9XG5cblx0cHVibGljIGhpZGVSb3dzKCByb3dJZHM6IHN0cmluZ1tdICkge1xuXHRcdHJvd0lkcy5mb3JFYWNoKCAoIHJvd0lkOiBzdHJpbmcgKSA9PiB7XG5cdFx0XHR0aGlzLnRhcmdldC5maW5kKCAnLicgKyByb3dJZCApLnNsaWRlVXAoIDQwMCApO1xuXHRcdH0gKTtcblx0fVxuXG5cdHB1YmxpYyBzaG93KCkge1xuXHRcdHRoaXMudGFyZ2V0LnNob3coKTtcblx0fVxuXG5cdHB1YmxpYyBoaWRlKCkge1xuXHRcdHRoaXMudGFyZ2V0LmhpZGUoKTtcblx0fVxufVxuIiwiaW1wb3J0IHsgQ29udHJvbGxlciB9IGZyb20gXCIuL0NvbnRyb2xsZXJcIjtcbmV4cG9ydCBjbGFzcyBWaWV3U2VsZWN0b3Ige1xuXG5cdHByaXZhdGUgdGFyZ2V0OiBKUXVlcnkgPSB1bmRlZmluZWQ7XG5cdHByaXZhdGUgdmlld0lEczogc3RyaW5nW10gPSB1bmRlZmluZWQ7XG5cblx0cHJpdmF0ZSBjb250cm9sbGVyOiBDb250cm9sbGVyID0gdW5kZWZpbmVkO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvciggdGFyZ2V0OiBKUXVlcnksIHZpZXdJRHM6IHN0cmluZ1tdLCBjb250cm9sbGVyOiBDb250cm9sbGVyICkge1xuXHRcdHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuXHRcdHRoaXMudmlld0lEcyA9IHZpZXdJRHM7XG5cdFx0dGhpcy5jb250cm9sbGVyID0gY29udHJvbGxlcjtcblx0fVxuXG5cdHB1YmxpYyBpbml0KCkge1xuXHRcdGlmICggdGhpcy52aWV3SURzLmxlbmd0aCA+IDEgKSB7XG5cdFx0XHR0aGlzLnZpZXdJRHMuZm9yRWFjaCggKCBpZDogc3RyaW5nKSA9PiB7IHRoaXMudGFyZ2V0Lm9uKCAnY2xpY2snLCAnLicgKyBpZCwgeyAndGFyZ2V0JzogaWQsICdjb250cm9sbGVyJyA6IHRoaXMuY29udHJvbGxlciB9LCBWaWV3U2VsZWN0b3Iub25TZWxlY3RvclNlbGVjdGVkICk7IH0gKTtcblx0XHRcdHRoaXMudGFyZ2V0LmNoaWxkcmVuKCkuZmlyc3QoKS5hZGRDbGFzcyggJ3NlbGVjdGVkJyk7XG5cdFx0XHR0aGlzLnRhcmdldC5zaG93KCk7XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBzdGF0aWMgb25TZWxlY3RvclNlbGVjdGVkKCBldmVudDogSlF1ZXJ5RXZlbnRPYmplY3QgKSB7XG5cblx0XHRldmVudC5kYXRhLmNvbnRyb2xsZXIub25WaWV3U2VsZWN0ZWQoIGV2ZW50LmRhdGEudGFyZ2V0ICk7XG5cblx0XHQkKCBldmVudC50YXJnZXQgKVxuXHRcdC5hZGRDbGFzcyggJ3NlbGVjdGVkJylcblx0XHQuc2libGluZ3MoKS5yZW1vdmVDbGFzcyggJ3NlbGVjdGVkJyApO1xuXG5cdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0fVxuXG59IiwiaW1wb3J0IHsgRmlsdGVyZWQgfSBmcm9tIFwiLi9GaWx0ZXJlZC9GaWx0ZXJlZFwiO1xuXG5kZWNsYXJlIGxldCBtdzogYW55O1xubGV0IGNvbmZpZyA9IG13LmNvbmZpZy5nZXQoICdzcmZGaWx0ZXJlZENvbmZpZycgKTtcblxuZm9yICggbGV0IGlkIGluIGNvbmZpZyApIHtcblx0aWYgKCBjb25maWcuaGFzT3duUHJvcGVydHkoIGlkICkgKSB7XG5cdFx0bGV0IGYgPSBuZXcgRmlsdGVyZWQoICQoICcjJyArIGlkICksIGNvbmZpZ1sgaWQgXSApO1xuXHRcdGYucnVuKCk7XG5cdH1cbn0iXX0="}