{"version":3,"sources":["node_modules/browser-pack/_prelude.js","resources/ts/Filtered/Controller.ts","resources/ts/Filtered/Filter/DistanceFilter.ts","resources/ts/Filtered/Filter/Filter.ts","resources/ts/Filtered/Filter/NumberFilter.ts","resources/ts/Filtered/Filter/ValueFilter.ts","resources/ts/Filtered/Filtered.ts","resources/ts/Filtered/View/CalendarView.ts","resources/ts/Filtered/View/ListView.ts","resources/ts/Filtered/View/MapView.ts","resources/ts/Filtered/View/TableView.ts","resources/ts/Filtered/View/View.ts","resources/ts/Filtered/ViewSelector.ts","resources/ts/bootstrap.ts"],"names":[],"mappings":"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","file":"ext.srf.filtered.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/// <reference types=\"jquery\" />\n\nimport { Options, ResultData } from \"../types\";\ndeclare let srf: any;\n\nimport { View } from \"./View/View\";\nimport { Filter } from \"./Filter/Filter\";\n\nexport class Controller {\n\tprivate target: JQuery = undefined;\n\tprivate filterSpinner: JQuery = undefined;\n\n\tprivate views: { [key: string]: View } = {};\n\tprivate filters: { [key: string]: Filter } = {};\n\tprivate currentView: View = undefined;\n\tprivate data: ResultData;\n\tprivate printRequests: Options;\n\n\tpublic constructor( target: JQuery, data: ResultData, printRequests: Options ) {\n\t\tthis.target = target;\n\n\t\tif ( this.target !== undefined ) {\n\t\t\tthis.filterSpinner = this.target.find( 'div.filtered-filter-spinner' );\n\t\t}\n\n\t\tthis.data = data;\n\t\tthis.printRequests = printRequests;\n\n\t\tfor ( let rowId in this.data ) {\n\t\t\tif ( !this.data[ rowId ].hasOwnProperty( 'visible' ) ) {\n\t\t\t\tthis.data[ rowId ].visible = {};\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getData(): any {\n\t\treturn this.data;\n\t}\n\n\tpublic getPrintRequests(): Options {\n\t\treturn this.printRequests;\n\t}\n\n\tpublic getPath() {\n\t\treturn srf.settings.get( 'srfgScriptPath' ) + '/formats/filtered/resources/';\n\t}\n\n\tpublic attachView( viewid: string, view: View ) {\n\n\t\tthis.views[ viewid ] = view;\n\n\t\tif ( this.currentView === undefined ) {\n\t\t\tthis.currentView = view;\n\t\t\tview.show();\n\t\t} else {\n\t\t\tview.hide();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic getView( viewId: string ): View {\n\t\treturn this.views[ viewId ];\n\t}\n\n\tpublic attachFilter( filter: Filter ): JQueryPromise< void > {\n\t\tlet filterId = filter.getId();\n\n\t\tthis.filters[ filterId ] = filter;\n\n\t\tfilter.init();\n\n\t\treturn this.onFilterUpdated( filterId );\n\t}\n\n\tpublic getFilter( filterId: string ): Filter {\n\t\treturn this.filters[ filterId ];\n\t}\n\n\tpublic show() {\n\t\tthis.initializeFilters();\n\t\tthis.target.children( '.filtered-spinner' ).remove();\n\t\tthis.target.children().show();\n\t\tthis.switchToView( this.currentView );\n\t}\n\n\tprivate switchToView( view: View ) {\n\n\t\tif ( this.currentView instanceof View ) {\n\t\t\tthis.currentView.hide();\n\t\t}\n\n\t\tthis.currentView = view;\n\n\t\tif ( this.currentView instanceof View ) {\n\t\t\tview.show();\n\t\t}\n\n\t}\n\n\tprivate initializeFilters() {\n\t\tlet toShow: string[] = [];\n\t\tlet toHide: string[] = [];\n\n\t\tfor ( let rowId in this.data ) {\n\t\t\tfor ( let filterId in this.filters ) {\n\t\t\t\tthis.data[ rowId ].visible[ filterId ] = this.filters[ filterId ].isDisabled() || this.filters[ filterId ].isVisible( rowId );\n\t\t\t}\n\t\t\tif ( this.isVisible( rowId ) ) {\n\t\t\t\ttoShow.push( rowId );\n\t\t\t} else {\n\t\t\t\ttoHide.push( rowId );\n\t\t\t}\n\t\t}\n\n\t\tthis.hideRows( toHide );\n\t\tthis.showRows( toShow );\n\t}\n\n\tpublic onViewSelected( viewID: string ) {\n\t\tthis.switchToView( this.views[ viewID ] );\n\t}\n\n\tpublic onFilterUpdated( filterId: string ): JQueryPromise< void > {\n\n\t\treturn this.showSpinner()\n\t\t.then(() => {\n\n\t\t\tlet toShow: string[] = [];\n\t\t\tlet toHide: string[] = [];\n\n\t\t\tlet disabled = this.filters[ filterId ].isDisabled();\n\n\t\t\tfor ( let rowId in this.data ) {\n\n\t\t\t\tlet newVisible: boolean = disabled || this.filters[ filterId ].isVisible( rowId );\n\n\t\t\t\tif ( this.data[ rowId ].visible[ filterId ] !== newVisible ) {\n\n\t\t\t\t\tthis.data[ rowId ].visible[ filterId ] = newVisible;\n\n\t\t\t\t\tif ( newVisible && this.isVisible( rowId ) ) {\n\t\t\t\t\t\ttoShow.push( rowId );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoHide.push( rowId );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.hideRows( toHide );\n\t\t\tthis.showRows( toShow );\n\t\t})\n\t\t.then( () => { this.hideSpinner() } );\n\t}\n\n\tpublic isVisible( rowId: any ) {\n\t\tfor ( let filterId in this.data[ rowId ].visible ) {\n\t\t\tif ( !this.data[ rowId ].visible[ filterId ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate hideRows( rowIds: string[] ) {\n\t\tif ( rowIds.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\tfor ( let viewId in this.views ) {\n\t\t\tthis.views[ viewId ].hideRows( rowIds );\n\t\t}\n\t}\n\n\tprivate showRows( rowIds: string[] ) {\n\t\tif ( rowIds.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\tfor ( let viewId in this.views ) {\n\t\t\tthis.views[ viewId ].showRows( rowIds );\n\t\t}\n\t}\n\n\tprivate showSpinner(): JQueryPromise< void > {\n\t\treturn this.animateSpinner();\n\t}\n\n\tprivate hideSpinner(): JQueryPromise< void > {\n\t\treturn this.animateSpinner( false );\n\t}\n\n\tprivate animateSpinner( show: boolean = true ): JQueryPromise< void > {\n\n\t\tif ( this.filterSpinner === undefined ) {\n\t\t\treturn jQuery.when();\n\t\t}\n\n\t\tif ( show ) {\n\t\t\treturn this.filterSpinner.fadeIn( 200 ).promise();\n\t\t}\n\n\t\treturn this.filterSpinner.fadeOut( 200 ).promise();\n\t}\n\n}\n","import { Filter } from \"./Filter\";\n\ndeclare let mw: any;\n\nexport class DistanceFilter extends Filter {\n\n\tprivate static readonly earthRadius: { [key: string]: number } = {\n\t\tm: 6371008.8,\n\t\tkm: 6371.0088,\n\t\tmi: 3958.7613,\n\t\tnm: 3440.0695,\n\t\tÅ: 63710088000000000\n\t};\n\n\tprivate earthRadiusValue: number = DistanceFilter.earthRadius.km;\n\tprivate filterValue: number = 0;\n\n\tpublic init() {\n\n\t\tlet values = this.controller.getData();\n\n\t\tlet origin = this.options[ 'origin' ];\n\n\t\tif ( !( origin !== undefined && origin.hasOwnProperty( 'lat' ) && origin.hasOwnProperty( 'lng' ) ) ) {\n\t\t\tthis.target.detach();\n\t\t\treturn;\n\t\t}\n\n\t\tlet unit = 'km';\n\n\t\tif ( this.options[ 'unit' ] && DistanceFilter.earthRadius[ this.options[ 'unit' ] ] ) {\n\t\t\tunit = this.options[ 'unit' ];\n\t\t}\n\n\t\tthis.earthRadiusValue = DistanceFilter.earthRadius[ unit ];\n\n\t\tlet maxValue: number = this.updateDistances( origin );\n\n\t\tlet precision = 10 ** ( Math.floor( Math.log( maxValue ) * Math.LOG10E ) - 1);\n\n\t\tif ( this.options[ 'max' ] !== undefined && this.options[ 'max' ] > maxValue ) {\n\t\t\tmaxValue = this.options[ 'max' ];\n\t\t} else {\n\t\t\tmaxValue = Math.ceil( maxValue / precision ) * precision;\n\t\t}\n\n\t\tthis.filterValue = this.options[ 'initial value' ] ? Math.min( this.options[ 'initial value' ], maxValue ) : maxValue;\n\n\t\t// build filter controls\n\t\tlet filtercontrols = this.buildEmptyControl();\n\n\t\tlet readout = $( '<div class=\"filtered-distance-readout\">' + this.filterValue + '</div>' );\n\n\t\tlet table = $( '<table class=\"filtered-distance-table\"><tbody><tr><td class=\"filtered-distance-min-cell\">0</td>' +\n\t\t\t'<td class=\"filtered-distance-slider-cell\"><div class=\"filtered-distance-slider\"></div></td>' +\n\t\t\t'<td class=\"filtered-distance-max-cell\">' + maxValue + '</td></tr>' +\n\t\t\t'<tr><td colspan=3 class=\"filtered-distance-unit-cell\">' + unit + '</td></tr></tbody></table>' );\n\n\t\tfiltercontrols.append( table );\n\n\t\tlet that = this;\n\t\tmw.loader.using( 'jquery.ui.slider' ).then( function () {\n\n\t\t\ttable.find( '.filtered-distance-slider' )\n\t\t\t.slider( {\n\t\t\t\tanimate: true,\n\t\t\t\tmax: maxValue,\n\t\t\t\tvalue: that.filterValue,\n\t\t\t\tstep: precision / 100\n\t\t\t} )\n\t\t\t.on( 'slidechange', undefined, { 'filter': that }, function ( eventObject: JQueryEventObject, ui: any ) {\n\t\t\t\teventObject.data.ui = ui;\n\t\t\t\teventObject.data.filter.onFilterUpdated( eventObject );\n\t\t\t} )\n\t\t\t.on( 'slide', undefined, { 'filter': that }, function ( eventObject: JQueryEventObject, ui: any ) {\n\t\t\t\treadout.text( ui.value );\n\t\t\t} )\n\t\t\t.find( '.ui-slider-handle' )\n\t\t\t.append( readout );\n\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\tprivate updateDistances( origin: L.LatLngLiteral ): number {\n\n\t\tlet values = this.controller.getData();\n\t\tlet max = 1;\n\n\t\tlet prId = this.printrequestId;\n\n\t\tfor ( let rowId in values ) {\n\n\t\t\tif ( values[ rowId ].data.hasOwnProperty( this.filterId ) ) {\n\t\t\t\tlet distances: number[] = values[ rowId ].data[ this.filterId ].positions.map( ( pos: L.LatLngLiteral ) => this.distance( origin, pos ) );\n\t\t\t\tlet dist = Math.min( ...distances );\n\n\t\t\t\tvalues[ rowId ].data[ this.filterId ].distance = dist;\n\t\t\t\tmax = Math.max( max, dist );\n\t\t\t} else {\n\t\t\t\tvalues[ rowId ].data[ this.filterId ].distance = Infinity;\n\t\t\t}\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tpublic onFilterUpdated( eventObject: JQueryEventObject ) {\n\t\tthis.filterValue = eventObject.data.ui.value;\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tprivate distance( a: L.LatLngLiteral, b: L.LatLngLiteral ) {\n\n\t\tconst DEG2RAD = Math.PI / 180.0;\n\n\t\tfunction squared( x: number ) {\n\t\t\treturn x * x\n\t\t}\n\n\t\tlet f =\n\t\t\tsquared( Math.sin( ( b.lat - a.lat ) * DEG2RAD / 2.0 ) ) +\n\t\t\tMath.cos( a.lat * DEG2RAD ) * Math.cos( b.lat * DEG2RAD ) *\n\t\t\tsquared( Math.sin( ( b.lng - a.lng ) * DEG2RAD / 2.0 ) );\n\n\t\treturn this.earthRadiusValue * 2 * Math.atan2( Math.sqrt( f ), Math.sqrt( 1 - f ) );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\n\t\tlet rowdata = this.controller.getData()[ rowId ].data;\n\n\t\tif ( rowdata.hasOwnProperty( this.filterId ) ) {\n\t\t\treturn rowdata[ this.filterId ].distance <= this.filterValue;\n\t\t}\n\n\t\treturn super.isVisible( rowId );\n\n\t}\n\n}\n","import { Options } from \"../../types\";\nimport { Controller } from \"../Controller\";\n\nexport abstract class Filter{\n\n\tprivate outerTarget: JQuery = undefined;\n\tprotected target: JQuery = undefined;\n\tprotected filterId: string;\n\tprotected printrequestId: string;\n\tprotected controller: Controller;\n\tprotected options: Options = undefined;\n\tprotected disabled: boolean = false;\n\tprotected collapsed: boolean = false;\n\n\tpublic constructor( filterId: string, target: JQuery, printrequestId: string, controller: Controller, options?: Options ) {\n\t\tthis.target = target;\n\t\tthis.outerTarget = target;\n\t\tthis.filterId = filterId;\n\t\tthis.printrequestId = printrequestId;\n\t\tthis.controller = controller;\n\t\tthis.options = options || {};\n\t}\n\n\tpublic init() {};\n\n\tpublic isDisabled() : boolean {\n\t\treturn this.disabled;\n\t}\n\n\tpublic disable() {\n\t\tthis.disabled = true;\n\n\t\tthis.outerTarget\n\t\t.removeClass( 'enabled' )\n\t\t.addClass( 'disabled' );\n\n\t\tthis.collapse();\n\n\t\tthis.target.promise().then( () =>\tthis.controller.onFilterUpdated( this.filterId ) );\n\t}\n\n\tpublic enable() {\n\t\tthis.disabled = false;\n\n\t\tthis.outerTarget\n\t\t.removeClass( 'disabled' )\n\t\t.addClass( 'enabled' );\n\n\t\tif ( ! this.collapsed ) {\n\t\t\tthis.uncollapse();\n\t\t}\n\n\t\tthis.target.promise().then( () =>\tthis.controller.onFilterUpdated( this.filterId ) );\n\t}\n\n\tprivate collapse( duration : number = 400 ) {\n\n\t\tif ( ! this.collapsed ) {\n\n\t\t\tthis.outerTarget.promise()\n\t\t\t.then( () => {\n\n\t\t\t\tthis.target.slideUp( duration );\n\n\t\t\t\tthis.outerTarget.animate( {\n\t\t\t\t\t'padding-top': 0,\n\t\t\t\t\t'padding-bottom': 0,\n\t\t\t\t\t'margin-bottom': '2em'\n\t\t\t\t}, duration );\n\t\t\t} );\n\t\t}\n\t}\n\n\tprivate uncollapse() {\n\t\tthis.outerTarget.promise()\n\t\t.then( () => {\n\t\t\tthis.target.slideDown();\n\n\t\t\tlet style = this.outerTarget.attr( 'style' );\n\t\t\tthis.outerTarget.removeAttr( 'style' );\n\t\t\tlet uncollapsedCss = this.outerTarget.css( [ 'padding-top', 'padding-bottom', 'margin-bottom' ] );\n\t\t\tthis.outerTarget.attr( 'style', style );\n\n\t\t\tthis.outerTarget.animate( uncollapsedCss );\n\t\t} );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\t\treturn this.options.hasOwnProperty( 'show if undefined' ) && this.options[ 'show if undefined' ] === true;\n\t}\n\n\tpublic getId() {\n\t\treturn this.filterId;\n\t}\n\n\tprotected buildEmptyControl() {\n\n\t\tthis.target = $( '<div class=\"filtered-filter-container\">' );\n\n\t\tthis.outerTarget\n\t\t.append( this.target )\n\t\t.addClass( 'enabled' );\n\n\t\tthis.addOnOffSwitch();\n\t\tthis.addLabel();\n\t\tthis.addControlForCollapsing();\n\n\t\treturn this.target;\n\t}\n\n\tprivate addLabel() {\n\t\t// insert the label of the printout this filter filters on\n\t\tthis.target.before( `<div class=\"filtered-filter-label\">${this.options[ 'label' ]}</div>` );\n\t}\n\n\tprotected addOnOffSwitch() {\n\n\t\tif ( this.options.hasOwnProperty( 'switches' ) ) {\n\n\t\t\tlet switches = this.options[ 'switches' ];\n\n\t\t\tif ( switches.length > 0 && $.inArray( 'on off', switches ) >= 0 ) {\n\n\t\t\t\tlet onOffControl = $( `<div class=\"filtered-filter-onoff on\"></div>` );\n\n\t\t\t\tthis.target.before( onOffControl );\n\n\t\t\t\tonOffControl.click( () => {\n\n\t\t\t\t\tif ( this.outerTarget.hasClass('enabled' ) ) {\n\t\t\t\t\t\tthis.disable();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.enable();\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected addControlForCollapsing() {\n\t\tlet collapsible = this.options.hasOwnProperty( 'collapsible' ) ? this.options[ 'collapsible' ] : undefined;\n\t\tif ( collapsible === 'collapsed' || collapsible === 'uncollapsed' ) {\n\n\t\t\tlet collapseControl = $( '<span class=\"filtered-filter-collapse\">' );\n\n\t\t\tthis.target.before( collapseControl );\n\n\t\t\tcollapseControl.click( () => {\n\t\t\t\tif ( collapseControl.hasClass( 'collapsed' ) ) {\n\t\t\t\t\tthis.uncollapse();\n\t\t\t\t\tthis.collapsed = false;\n\n\t\t\t\t\tcollapseControl\n\t\t\t\t\t.removeClass( 'collapsed' )\n\t\t\t\t\t.addClass( 'uncollapsed' );\n\t\t\t\t} else {\n\t\t\t\t\tthis.collapse();\n\t\t\t\t\tthis.collapsed = true;\n\n\t\t\t\t\tcollapseControl\n\t\t\t\t\t.removeClass( 'uncollapsed' )\n\t\t\t\t\t.addClass( 'collapsed' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( collapsible === 'collapsed' ) {\n\n\t\t\t\tthis.collapse( 0 );\n\t\t\t\tthis.collapsed = true;\n\t\t\t\tcollapseControl.addClass('collapsed');\n\n\t\t\t} else {\n\t\t\t\tcollapseControl.addClass('uncollapsed');\n\t\t\t}\n\t\t}\n\t}\n\n}","///<reference path=\"../../../../node_modules/@types/ion.rangeslider/index.d.ts\"/>\nimport { Filter } from \"./Filter\";\nimport { Options } from \"../../types\";\n\ndeclare let mw: any;\n\nexport class NumberFilter extends Filter {\n\n\tprivate MODE_RANGE = 0;\n\tprivate MODE_MIN = 1;\n\tprivate MODE_MAX = 2;\n\tprivate MODE_SELECT = 3;\n\n\tprivate filterValueUpper: number = 0;\n\tprivate filterValueLower: number = 0;\n\tprivate mode = this.MODE_RANGE;\n\n\tpublic init() {\n\n\t\tlet values: number[] = this.getValues();\n\n\t\tlet { minValue, maxValue, precision } = this.getRangeParameters( values );\n\n\t\tlet sliderOptions: IonRangeSliderOptions = {\n\t\t\tprettify_enabled: false,\n\t\t\tforce_edges: true,\n\t\t\tgrid: true\n\t\t};\n\n\t\tif ( this.options.hasOwnProperty( 'values' ) ) {\n\t\t\tsliderOptions = this.adjustSliderOptionsFromValues( sliderOptions, values );\n\n\t\t} else {\n\t\t\tsliderOptions = this.adjustSliderOptionsFromRangeParameters( sliderOptions, minValue, maxValue, precision );\n\t\t}\n\n\t\tswitch( this.options[ 'sliders' ] ) {\n\n\t\t\tcase \"min\":\n\n\t\t\t\tthis.mode = this.MODE_MIN;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tcase \"max\":\n\n\t\t\t\tthis.mode = this.MODE_MAX;\n\t\t\t\tsliderOptions.from = sliderOptions.to;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tcase \"select\":\n\n\t\t\t\tthis.mode = this.MODE_SELECT;\n\t\t\t\tmaxValue = minValue;\n\t\t\t\tsliderOptions.type = 'single';\n\t\t\t\tbreak;\n\n\t\t\tdefault: // == case \"range\"\n\n\t\t\t\tthis.mode = this.MODE_RANGE;\n\t\t\t\tsliderOptions.type = 'double';\n\t\t}\n\n\t\tthis.buildFilterControls( sliderOptions );\n\n\t\tthis.filterValueLower = minValue;\n\t\tthis.filterValueUpper = maxValue;\n\n\t\treturn this;\n\t}\n\n\tprivate adjustSliderOptionsFromRangeParameters( sliderOptions: IonRangeSliderOptions, minValue: number, maxValue: number, precision: number ) {\n\n\t\tsliderOptions.min = minValue;\n\t\tsliderOptions.max = maxValue;\n\t\tsliderOptions.step = this.getStep( precision );\n\t\tsliderOptions.grid_num = Math.min( 4, Math.round( ( maxValue - minValue ) / sliderOptions.step ) );\n\n\t\tsliderOptions.from = minValue;\n\t\tsliderOptions.to = maxValue;\n\n\t\tsliderOptions.onFinish = ( data: IonRangeSliderEvent ) => this.onFilterUpdated( data.from, data.to );\n\n\t\treturn sliderOptions;\n\t}\n\n\tprivate adjustSliderOptionsFromValues( sliderOptions: IonRangeSliderOptions, values: number[] ) {\n\n\t\tsliderOptions.values = values;\n\n\t\tsliderOptions.from = 0;\n\t\tsliderOptions.to = values.length - 1;\n\n\t\tsliderOptions.onFinish = ( data: IonRangeSliderEvent ) => this.onFilterUpdated( data.from_value, data.to_value );\n\n\t\treturn sliderOptions;\n\t}\n\n\tprivate getRangeParameters( values: number[] ) {\n\n\t\tlet minValue = values[ 0 ];\n\t\tlet maxValue = values[ values.length - 1 ];\n\t\tlet precision: number = this.getPrecision( minValue, maxValue );\n\n\t\tif ( !this.options.hasOwnProperty( 'values' ) ) {\n\t\t\tminValue = this.getMinSliderValue( minValue, precision );\n\t\t\tmaxValue = this.getMaxSliderValue( maxValue, precision );\n\t\t}\n\n\t\treturn { minValue, maxValue, precision };\n\t}\n\n\tprivate getValues(): number[] {\n\t\tlet values: number[];\n\t\tif ( this.options.hasOwnProperty( 'values' ) && this.options[ 'values' ][0] !== 'auto' ) {\n\t\t\tvalues =  this.options[ 'values' ]\n\t\t} else {\n\t\t\tvalues =  this.getSortedValues();\n\t\t}\n\n\t\tif ( values.length === 0 ) {\n\t\t\tvalues = [ 0, 0 ];\n\t\t} else if ( values.length === 1 ) {\n\t\t\tvalues.push( values[ 0 ] );\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tprivate buildFilterControls( sliderOptions: IonRangeSliderOptions ) {\n\n\t\tlet filterClassNames: any = {};\n\t\tfilterClassNames[ this.MODE_MIN.toString() ] = \"mode-min\";\n\t\tfilterClassNames[ this.MODE_MAX ] = \"mode-max\";\n\t\tfilterClassNames[ this.MODE_RANGE ] = \"mode-range\";\n\t\tfilterClassNames[ this.MODE_SELECT ] = \"mode-select\";\n\n\t\tlet filtercontrols = this.buildEmptyControl();\n\n\t\tlet slider = $( '<input type=\"text\" value=\"\" />' );\n\t\tlet sliderContainer = $( `<div class=\"filtered-number-slider ${filterClassNames[ this.mode ]}\" />` ).append( slider );\n\t\tfiltercontrols.append( sliderContainer );\n\n\t\tif ( this.options.hasOwnProperty( 'caption' ) ) {\n\t\t\tlet caption = `<div class=\"filtered-number-caption\">${this.options[ 'caption' ]}</div>`;\n\t\t\tfiltercontrols.append( caption );\n\t\t}\n\n\t\tmw.loader.using( 'ext.srf.filtered.slider' ).then( () => slider.ionRangeSlider( sliderOptions ) );\n\t}\n\n\tprivate getMinSliderValue( minValue: number, precision: number ) {\n\t\tlet requestedMin = this.options[ 'min' ];\n\n\t\tif ( requestedMin === undefined || isNaN( Number( requestedMin ) ) ) {\n\t\t\treturn Math.floor( minValue / precision ) * precision;\n\t\t}\n\n\t\treturn Math.min( requestedMin, minValue );\n\t}\n\n\tprivate getMaxSliderValue( maxValue: number, precision: number ) {\n\t\tlet requestedMax = this.options[ 'max' ];\n\n\t\tif ( requestedMax === undefined || isNaN( Number( requestedMax ) ) ) {\n\t\t\treturn Math.ceil( maxValue / precision ) * precision;\n\t\t}\n\n\t\treturn Math.max( requestedMax, maxValue );\n\t}\n\n\tprivate getPrecision( minValue: number, maxValue: number ): number {\n\t\tif ( maxValue - minValue > 0 ) {\n\t\t\treturn 10 ** ( Math.floor( Math.log( maxValue - minValue ) * Math.LOG10E ) - 1 );\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\tprivate getStep( precision: number ): number {\n\n\t\tlet step = this.options[ 'step' ];\n\n\t\tif ( step !== undefined ) {\n\n\t\t\tstep = Number( step );\n\n\t\t\tif ( !isNaN( step ) ) {\n\t\t\t\treturn step;\n\t\t\t}\n\t\t}\n\n\t\treturn precision / 10;\n\t}\n\n\tprivate getRangeFromValues(): [ number, number ] {\n\n\t\tlet rows = this.controller.getData();\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tfor ( let rowId in rows ) {\n\n\t\t\tif ( rows[ rowId ].data.hasOwnProperty( this.filterId ) ) {\n\t\t\t\tlet values: number[] = rows[ rowId ].data[ this.filterId ].values;\n\t\t\t\tmin = Math.min( min, ...values );\n\t\t\t\tmax = Math.max( max, ...values );\n\t\t\t}\n\t\t}\n\n\t\treturn [ min, max ];\n\t}\n\n\tprivate getSortedValues(): number[] {\n\n\t\tlet valueArray: number[] = [];\n\t\tlet rows = this.controller.getData();\n\n\t\tfor ( let rowId in rows ) {\n\n\t\t\tlet cells = rows[ rowId ].data;\n\n\t\t\tif ( cells.hasOwnProperty( this.filterId ) ) {\n\n\t\t\t\tlet values = cells[ this.filterId ].values;\n\n\t\t\t\tfor ( let valueId in values ) {\n\n\t\t\t\t\tlet value = Number( values[ valueId ] );\n\n\t\t\t\t\tif ( valueArray.indexOf( value ) === -1 ) {\n\t\t\t\t\t\tvalueArray.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn valueArray.sort( ( a: any, b: any ) => a - b );\n\t}\n\n\tpublic onFilterUpdated( from: number, to: number ) {\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase this.MODE_MIN:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tbreak;\n\n\t\t\tcase this.MODE_MAX:\n\n\t\t\t\tthis.filterValueUpper = from;\n\t\t\t\tbreak;\n\n\t\t\tcase this.MODE_SELECT:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tthis.filterValueUpper = from;\n\t\t\t\tbreak;\n\n\t\t\tdefault: // case this.MODE_RANGE:\n\n\t\t\t\tthis.filterValueLower = from;\n\t\t\t\tthis.filterValueUpper = to;\n\t\t}\n\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\t\tlet rowdata = this.controller.getData()[ rowId ].data;\n\n\t\tif ( rowdata.hasOwnProperty( this.filterId ) && rowdata[ this.filterId ].values.length > 0 ) {\n\n\t\t\tfor ( let value of rowdata[ this.filterId ].values ) {\n\t\t\t\tif ( value >= this.filterValueLower && value <= this.filterValueUpper ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.isVisible( rowId );\n\t}\n\n}\n","import { Filter } from \"./Filter\";\nimport { IdTextPair } from \"select2\";\n\ndeclare let mw: any;\n\nexport class ValueFilter extends Filter {\n\n\tprivate values: any = {};\n\tprivate visibleValues: string[] = [];\n\n\tprivate _useOr = true;\n\n\tpublic init() {\n\t\tthis.values = this.getSortedValues();\n\t\tthis.buildControl();\n\t}\n\n\tpublic useOr( useOr: boolean ) {\n\t\tthis._useOr = useOr;\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n\n\tprivate getSortedValues(): any {\n\n\t\t/** Map of value => label distinct values */\n\t\tlet distinctValues: any = {};\n\t\t/** Map of value => sort value distinct values */\n\t\tlet distinctSortValues: any = {};\n\n\t\tif ( this.options.hasOwnProperty( 'values' ) ) {\n\n\t\t\treturn this.options[ 'values' ].map(\n\t\t\t\t( item: string ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprintoutValue: item,\n\t\t\t\t\t\tformattedValue: item\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\n\t\t} else {\n\t\t\t// build filter values from available values in result set\n\t\t\tlet data = this.controller.getData();\n\t\t\tlet sortedEntries: any[] = [];\n\t\t\tfor ( let id in data ) {\n\n\t\t\t\tlet printoutValues: any = data[ id ][ 'printouts' ][ this.printrequestId ][ 'values' ];\n\t\t\t\tlet printoutFormattedValues = data[ id ][ 'printouts' ][ this.printrequestId ][ 'formatted values' ];\n\t\t\t\tlet printoutSortValues: any = data[ id ][ 'printouts' ][ this.printrequestId ][ 'sort values' ];\n\n\t\t\t\tfor ( let i in printoutValues ) {\n\t\t\t\t\tlet printoutFormattedValue = printoutFormattedValues[ i ];\n\n\t\t\t\t\tif ( printoutFormattedValue.indexOf( '<a' ) > -1 ) {\n\t\t\t\t\t\tprintoutFormattedValue = /<a.*>(.*?)<\\/a>/.exec( printoutFormattedValue )[ 1 ];\n\t\t\t\t\t}\n\n\t\t\t\t\tdistinctValues[ printoutValues[ i ] ] = printoutFormattedValue;\n\t\t\t\t\tdistinctSortValues[ printoutValues[ i ] ] = printoutSortValues[ i ];\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let printoutValue in distinctSortValues ) {\n\t\t\t\tsortedEntries.push( {\n\t\t\t\t\tprintoutValue: printoutValue,\n\t\t\t\t\tsortValue: distinctSortValues[ printoutValue ],\n\t\t\t\t\tformattedValue: distinctValues[ printoutValue ]\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tsortedEntries.sort(\n\t\t\t\t( a: any, b: any ) => {\n\t\t\t\t\treturn a.sortValue.localeCompare( b.sortValue );\n\t\t\t\t} );\n\t\t\treturn sortedEntries;\n\n\t\t}\n\n\t}\n\n\tprivate buildControl() {\n\n\t\tlet filtercontrols = this.buildEmptyControl();\n\n\t\tfiltercontrols = this.addControlForSwitches( filtercontrols );\n\n\t\tlet maxCheckboxes = this.options.hasOwnProperty( 'max checkboxes' ) ? this.options[ 'max checkboxes' ] : 5;\n\n\t\tif ( this.values.length > maxCheckboxes ) {\n\t\t\tfiltercontrols.append( this.getSelected2Control() );\n\t\t} else {\n\t\t\tfiltercontrols.append( this.getCheckboxesControl() );\n\t\t}\n\n\t}\n\n\tprivate getCheckboxesControl() {\n\n\t\tlet checkboxes = $( '<div class=\"filtered-value-checkboxes\" style=\"width: 100%;\">' );\n\n\t\t// insert options (checkboxes and labels)\n\t\tfor ( let value of this.values ) {\n\t\t\tcheckboxes.append( `<div class=\"filtered-value-option\"><label><input type=\"checkbox\" value=\"${value.printoutValue}\" ><div class=\"filtered-value-option-label\">${value.formattedValue || value.printoutValue}</div></label></div>` );\n\t\t}\n\n\t\t// attach event handler\n\t\tcheckboxes\n\t\t.on( 'change', ':checkbox', ( eventObject: JQueryEventObject ) => {\n\t\t\tlet checkboxElement = <HTMLInputElement> eventObject.currentTarget;\n\t\t\tthis.onFilterUpdated( checkboxElement.value, checkboxElement.checked );\n\t\t} );\n\n\t\treturn checkboxes;\n\t}\n\n\tprivate getSelected2Control() {\n\n\t\tlet select = $( '<select class=\"filtered-value-select\" style=\"width: 100%;\">' );\n\n\t\tlet data: IdTextPair[] = [];\n\n\t\t// insert options (checkboxes and labels) and attach event handlers\n\t\tfor ( let value of this.values ) {\n\t\t\t// Try to get label, if not fall back to value id\n\t\t\tlet label = value.formattedValue || value.printoutValue;\n\t\t\tdata.push( { id: value.printoutValue, text: label } );\n\n\t\t}\n\n\t\tmw.loader.using( 'ext.srf.filtered.value-filter.select' ).then( () => {\n\n\t\t\tselect.select2( {\n\t\t\t\tmultiple: true,\n\t\t\t\tplaceholder: mw.message( 'srf-filtered-value-filter-placeholder' ).text(),\n\t\t\t\tdata: data\n\t\t\t} );\n\n\t\t\tselect.on( \"select2:select\", ( e: any ) => {\n\t\t\t\tthis.onFilterUpdated( e.params.data.id, true );\n\t\t\t} );\n\n\t\t\tselect.on( \"select2:unselect\", ( e: any ) => {\n\t\t\t\tthis.onFilterUpdated( e.params.data.id, false );\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn select;\n\t}\n\n\tprivate addControlForSwitches( filtercontrols: JQuery ): JQuery {\n\t\t// insert switches\n\t\tlet switches = this.options.hasOwnProperty( 'switches' ) ? this.options[ 'switches' ] : undefined;\n\n\t\tif ( switches !== undefined && $.inArray( 'and or', switches ) >= 0 ) {\n\n\t\t\tlet switchControls = $( '<div class=\"filtered-value-switches\">' );\n\n\t\t\tlet andorControl = $( '<div class=\"filtered-value-andor\">' );\n\n\t\t\tlet orControl = this.getRadioControl( 'or', true );\n\t\t\tlet andControl = this.getRadioControl( 'and' );\n\n\t\t\tandorControl\n\t\t\t.append( orControl )\n\t\t\t.append( andControl )\n\t\t\t.appendTo( switchControls );\n\n\t\t\tandorControl\n\t\t\t.find( 'input' )\n\t\t\t.on( 'change', undefined, { 'filter': this }, ( eventObject: JQueryEventObject ) =>\n\t\t\t\teventObject.data.filter.useOr( eventObject.target.getAttribute( 'value' ) === 'or' )\n\t\t\t);\n\n\n\t\t\tfiltercontrols.append( switchControls );\n\t\t}\n\n\t\treturn filtercontrols;\n\t}\n\n\tprivate getRadioControl( type: string, isChecked: boolean = false ) {\n\n\t\tlet checkedAttr = isChecked?'checked':'';\n\t\tlet labelText = mw.message( 'srf-filtered-value-filter-' + type ).text();\n\n\t\tlet controlText =\n\t\t\t`<label for=\"filtered-value-${type}-${this.printrequestId}\">` +\n\t\t\t`<input type=\"radio\" name=\"filtered-value-${this.printrequestId}\"  class=\"filtered-value-${type}\" id=\"filtered-value-${type}-${this.printrequestId}\" value=\"${type}\" ${checkedAttr}>` +\n\t\t\t`${labelText}</label>`;\n\n\t\treturn $( controlText );\n\t}\n\n\tpublic isVisible( rowId: string ): boolean {\n\n\t\tif ( this.visibleValues.length === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet values: string[] = this.controller.getData()[ rowId ].printouts[ this.printrequestId ].values;\n\n\t\tif ( values.length === 0 ) {\n\t\t\treturn super.isVisible( rowId );\n\t\t}\n\n\n\t\tif ( this._useOr ) {\n\t\t\tfor ( let expectedValue of this.visibleValues ) {\n\t\t\t\tif ( values.indexOf( expectedValue ) >= 0 ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\tfor ( let expectedValue of this.visibleValues ) {\n\t\t\t\tif ( values.indexOf( expectedValue ) < 0 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic onFilterUpdated( value: string, isChecked: boolean ) {\n\t\tlet index = this.visibleValues.indexOf( value );\n\n\t\tif ( isChecked && index === -1 ) {\n\t\t\tthis.visibleValues.push( value );\n\t\t} else if ( !isChecked && index >= 0 ) {\n\t\t\tthis.visibleValues.splice( index, 1 );\n\t\t}\n\n\t\tthis.controller.onFilterUpdated( this.getId() );\n\t}\n}\n","import { Options } from \"../types\";\nimport { Controller } from \"./Controller\";\nimport { ViewSelector } from \"./ViewSelector\";\nimport { View } from \"./View/View\";\nimport { ListView } from \"./View/ListView\";\nimport { TableView } from \"./View/TableView\";\nimport { MapView } from \"./View/MapView\";\nimport { CalendarView } from \"./View/CalendarView\";\nimport { Filter } from \"./Filter/Filter\";\nimport { ValueFilter } from \"./Filter/ValueFilter\";\nimport { DistanceFilter } from \"./Filter/DistanceFilter\";\nimport { NumberFilter } from \"./Filter/NumberFilter\";\n\n/**\n * Central Filtered class\n *\n * Factory to setup everyhting else\n */\nexport class Filtered {\n\n\tprivate config: any;\n\tprivate target: JQuery;\n\n\tprivate viewTypes: { [key: string]: new( id: string, target: JQuery, controller: Controller, options?: any ) => View } = {\n\t\ttable: TableView,\n\t\tlist: ListView,\n\t\tmap: MapView,\n\t\tcalendar: CalendarView\n\t};\n\n\tprivate filterTypes: { [key: string]: new( id: string, target: JQuery, printrequestId: string, controller: Controller, options?: Options ) => Filter } = {\n\t\tvalue: ValueFilter,\n\t\tdistance: DistanceFilter,\n\t\tnumber: NumberFilter\n\t};\n\n\t/**\n\t *\n\t * @param target\n\t * @param config\n\t */\n\tpublic constructor( target: JQuery, config: any ) {\n\t\tthis.config = config;\n\t\tthis.target = target;\n\t}\n\n\tpublic run() {\n\n\t\tlet controller = new Controller( this.target, this.config.data, this.config.printrequests );\n\n\t\tthis.attachFilters( controller, this.target.children( 'div.filtered-filters' ) );\n\t\tthis.attachViewSelector( controller, this.target.find( 'div.filtered-views-selectors-container' ) );\n\t\tthis.attachViews( controller, this.target.find( 'div.filtered-views-container' ) );\n\n\t\t// lift-off\n\t\tcontroller.show();\n\n\t}\n\n\tprivate attachFilters( controller: Controller, filtersContainer: JQuery ) {\n\n\t\tfor ( let prId in this.config.printrequests ) {\n\n\t\t\tlet pr = this.config.printrequests[ prId ];\n\n\t\t\tif ( pr.hasOwnProperty( 'filters' ) ) {\n\n\t\t\t\tfor ( let filterid in pr.filters ) {\n\n\t\t\t\t\tif ( pr.filters.hasOwnProperty( filterid ) &&\n\t\t\t\t\t\tpr.filters[ filterid ].hasOwnProperty( 'type' ) &&\n\t\t\t\t\t\tthis.filterTypes.hasOwnProperty( pr.filters[ filterid ].type ) ) {\n\n\t\t\t\t\t\t//  target: JQuery, printrequest: string,\n\t\t\t\t\t\t// controller: Controller, options?: Options\n\t\t\t\t\t\tlet filter: Filter = new this.filterTypes[ pr.filters[ filterid ].type ]( filterid, filtersContainer.children( '#' + filterid ), prId, controller, pr.filters[ filterid ] );\n\n\t\t\t\t\t\tcontroller.attachFilter( filter );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprivate attachViewSelector( controller: Controller, viewSelectorContainer: JQuery ) {\n\t\tlet viewSelector = new ViewSelector( viewSelectorContainer, Object.keys( this.config.views ), controller );\n\t\tviewSelector.init();\n\t}\n\n\tprivate attachViews( controller: Controller, viewsContainer: JQuery ) {\n\n\t\t// attach views\n\t\tfor ( let viewid in this.config.views ) {\n\n\t\t\tlet viewtype = this.config.views[ viewid ][ 'type' ];\n\t\t\tlet viewHandlerClass = this.viewTypes.hasOwnProperty( viewtype ) ? this.viewTypes[ viewtype ] : View;\n\n\t\t\tlet view: View = new viewHandlerClass( viewid, viewsContainer.children( '#' + viewid ), controller, this.config.views[ viewid ] );\n\n\t\t\tview.init();\n\n\t\t\tcontroller.attachView( viewid, view );\n\n\t\t}\n\t}\n}\n","import { View } from \"./View\";\ndeclare let mw: any;\n\nexport class CalendarView extends View {\n\n\tprivate getI18N() {\n\t\treturn {\n\t\t\tmonthNames: [ mw.msg( 'january' ), mw.msg( 'february' ), mw.msg( 'march' ),\n\t\t\t\tmw.msg( 'april' ), mw.msg( 'may_long' ), mw.msg( 'june' ),\n\t\t\t\tmw.msg( 'july' ), mw.msg( 'august' ), mw.msg( 'september' ),\n\t\t\t\tmw.msg( 'october' ), mw.msg( 'november' ), mw.msg( 'december' )\n\t\t\t],\n\t\t\tmonthNamesShort: [ mw.msg( 'jan' ), mw.msg( 'feb' ), mw.msg( 'mar' ),\n\t\t\t\tmw.msg( 'apr' ), mw.msg( 'may' ), mw.msg( 'jun' ),\n\t\t\t\tmw.msg( 'jul' ), mw.msg( 'aug' ), mw.msg( 'sep' ),\n\t\t\t\tmw.msg( 'oct' ), mw.msg( 'nov' ), mw.msg( 'dec' )\n\t\t\t],\n\t\t\tdayNames: [ mw.msg( 'sunday' ), mw.msg( 'monday' ), mw.msg( 'tuesday' ),\n\t\t\t\tmw.msg( 'wednesday' ), mw.msg( 'thursday' ), mw.msg( 'friday' ), mw.msg( 'saturday' )\n\t\t\t],\n\t\t\tdayNamesShort: [ mw.msg( 'sun' ), mw.msg( 'mon' ), mw.msg( 'tue' ),\n\t\t\t\tmw.msg( 'wed' ), mw.msg( 'thu' ), mw.msg( 'fri' ), mw.msg( 'sat' )\n\t\t\t],\n\t\t\tbuttonText: {\n\t\t\t\ttoday: mw.msg( 'srf-ui-eventcalendar-label-today' ),\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-label-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-label-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-label-day' )\n\t\t\t}\n\t\t\t,\n\t\t\tallDayText: mw.msg( 'srf-ui-eventcalendar-label-allday' ),\n\t\t\ttimeFormat: {\n\t\t\t\t'': mw.msg( 'srf-ui-eventcalendar-format-time' ),\n\t\t\t\tagenda: mw.msg( 'srf-ui-eventcalendar-format-time-agenda' )\n\t\t\t}\n\t\t\t,\n\t\t\taxisFormat: mw.msg( 'srf-ui-eventcalendar-format-axis' ),\n\t\t\ttitleFormat: {\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-format-title-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-format-title-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-format-title-day' )\n\t\t\t}\n\t\t\t,\n\t\t\tcolumnFormat: {\n\t\t\t\tmonth: mw.msg( 'srf-ui-eventcalendar-format-column-month' ),\n\t\t\t\tweek: mw.msg( 'srf-ui-eventcalendar-format-column-week' ),\n\t\t\t\tday: mw.msg( 'srf-ui-eventcalendar-format-column-day' )\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic init() {\n\n\t\tlet _i18n = this.getI18N();\n\n\t\t// initialize the calendar\n\t\tthis.target.fullCalendar( {\n\n\t\t\tfirstDay: this.options.firstDay,\n\t\t\tisRTL: this.options.isRTL,\n\t\t\tmonthNames: _i18n.monthNames,\n\t\t\tmonthNamesShort: _i18n.monthNamesShort,\n\t\t\tdayNames: _i18n.dayNames,\n\t\t\tdayNamesShort: _i18n.dayNamesShort,\n\t\t\tbuttonText: _i18n.buttonText,\n\t\t\tallDayText: _i18n.allDayText,\n\t\t\ttimeFormat: _i18n.timeFormat,\n\t\t\ttitleFormat: _i18n.titleFormat,\n\t\t\tcolumnFormat: _i18n.columnFormat\n\t\t} );\n\t}\n\n\tprivate getEvent( rowId: any, rowData: any ) {\n\n\t\tlet eventdata: any = {\n\t\t\tid: rowId,\n\t\t\ttitle: rowData[ 'title' ],\n\t\t\tstart: rowData[ 'start' ],\n\t\t\tclassName: rowId\n\t\t};\n\n\t\tif ( rowData.hasOwnProperty( 'end' ) ) {\n\t\t\teventdata[ 'end' ] = rowData[ 'end' ];\n\t\t}\n\n\t\tif ( rowData.hasOwnProperty( 'url' ) ) {\n\t\t\teventdata[ 'url' ] = rowData[ 'url' ];\n\t\t}\n\n\t\treturn eventdata;\n\t}\n\n\tpublic showRows( rowIds: string[] ): any {\n\n\t\tlet events: any[] = [];\n\n\t\trowIds.forEach( ( rowId: string ) => {\n\n\t\t\tlet rowData = this.controller.getData()[ rowId ].data[ this.id ];\n\n\t\t\tif ( rowData.hasOwnProperty( 'start' ) ) {\n\t\t\t\tevents.push( this.getEvent( rowId, rowData ) );\n\t\t\t}\n\t\t} );\n\n\t\tthis.target.fullCalendar( 'addEventSource', events );\n\t}\n\n\tpublic hideRows( rowIds: string[] ): any {\n\t\tthis.target.fullCalendar( 'removeEvents', ( e: any ) => ( rowIds.indexOf( e._id ) >= 0 ) );\n\t}\n\n\tpublic show(): any {\n\t\tsuper.show();\n\t\tthis.target.fullCalendar( 'render' );\n\t}\n\n\tpublic hide(): any {\n\t\treturn super.hide();\n\t}\n\n}\n","import { View } from \"./View\";\n\nexport class ListView extends View {\n\n\tprotected getItemClassName() {\n\t\treturn '.filtered-list-item';\n\t}\n\n\n}\n","/// <reference types=\"leaflet\" />\n\nimport { View } from \"./View\";\nimport { Options } from \"../../types\"\n\ndeclare let mw: any;\n\nexport class MapView extends View {\n\n\tprivate map: L.Map = undefined;\n\tprivate icon: { [key: string]: L.Icon } = undefined;\n\tprivate markers: { [key: string]: L.Marker[] } = undefined;\n\tprivate markerClusterGroup: L.MarkerClusterGroup = undefined;\n\tprivate bounds: L.LatLngBounds = undefined;\n\tprivate initialized: boolean = false;\n\n\tprivate zoom: number = -1;\n\tprivate minZoom: number = -1;\n\tprivate maxZoom: number = -1;\n\n\tprivate leafletPromise: Promise<any> = undefined;\n\n\tpublic init(): Promise<any> {\n\n\t\tlet data = this.controller.getData();\n\t\tlet markers: { [rowId: string]: L.Marker[] } = {};\n\n\t\tif ( this.options.hasOwnProperty( 'height' ) ) {\n\t\t\tthis.target.height( this.options.height );\n\t\t}\n\n\t\tthis.leafletPromise = mw.loader.using( 'ext.srf.filtered.map-view.leaflet' )\n\t\t.then( () => {\n\n\t\t\tlet bounds: L.LatLngBounds = undefined;\n\t\t\tlet disableClusteringAtZoom = this.getZoomForUnclustering();\n\n\t\t\tlet clusterOptions: Options = {\n\t\t\t\tanimateAddingMarkers: true,\n\t\t\t\tdisableClusteringAtZoom: disableClusteringAtZoom,\n\t\t\t\tspiderfyOnMaxZoom: disableClusteringAtZoom === null\n\t\t\t};\n\n\t\t\tclusterOptions = this.getOptions( [ 'maxClusterRadius', 'zoomToBoundsOnClick' ], clusterOptions );\n\n\t\t\tlet markerClusterGroup: L.MarkerClusterGroup = L.markerClusterGroup( clusterOptions );\n\n\t\t\tfor ( let rowId in data ) {\n\n\t\t\t\tif ( data[ rowId ][ 'data' ].hasOwnProperty( this.id ) ) {\n\t\t\t\t\tlet positions: L.LatLngLiteral[] = data[ rowId ][ 'data' ][ this.id ][ 'positions' ];\n\t\t\t\t\tmarkers[ rowId ] = [];\n\n\t\t\t\t\tfor ( let pos of positions ) {\n\n\t\t\t\t\t\tbounds = ( bounds === undefined ) ? new L.LatLngBounds( pos, pos ) : bounds.extend( pos );\n\n\t\t\t\t\t\tlet marker = this.getMarker( pos, data[ rowId ] );\n\t\t\t\t\t\tmarkers[ rowId ].push( marker );\n\t\t\t\t\t\tmarkerClusterGroup.addLayer( marker );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markerClusterGroup = markerClusterGroup;\n\t\t\tthis.markers = markers;\n\t\t\tthis.bounds = ( bounds === undefined ) ? new L.LatLngBounds( [ -180, -90 ], [ 180, 90 ] ) : bounds;\n\t\t} );\n\n\t\treturn this.leafletPromise;\n\t}\n\n\tprivate getZoomForUnclustering() {\n\n\t\tif ( this.options.hasOwnProperty( 'marker cluster' ) && this.options[ 'marker cluster' ] === false ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ( this.options.hasOwnProperty( 'marker cluster max zoom' ) ) {\n\t\t\treturn this.options[ 'marker cluster max zoom' ] + 1;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate getIcon( row: any ) {\n\n\t\tif ( this.icon === undefined ) {\n\t\t\tthis.buildIconList();\n\t\t}\n\n\t\tif ( this.options.hasOwnProperty( 'marker icon property' ) ) {\n\n\t\t\tlet vals: string[] = row[ 'printouts' ][ this.options[ 'marker icon property' ] ][ 'values' ];\n\n\t\t\tif ( vals.length > 0 && this.icon.hasOwnProperty( vals[ 0 ] ) ) {\n\t\t\t\treturn this.icon[ vals[ 0 ] ];\n\t\t\t}\n\t\t}\n\n\t\treturn this.icon[ 'default' ];\n\t}\n\n\tprivate buildIconList() {\n\t\tthis.icon = {};\n\n\t\tlet iconPath = this.controller.getPath() + 'css/images/';\n\n\t\tthis.icon[ 'default' ] = new L.Icon( {\n\t\t\t'iconUrl': iconPath + 'marker-icon.png',\n\t\t\t'iconRetinaUrl': iconPath + 'marker-icon-2x.png',\n\t\t\t'shadowUrl': iconPath + 'marker-shadow.png',\n\t\t\t'iconSize': [ 25, 41 ],\n\t\t\t'iconAnchor': [ 12, 41 ],\n\t\t\t'popupAnchor': [ 1, -34 ],\n\t\t\t// 'tooltipAnchor': [16, -28],\n\t\t\t'shadowSize': [ 41, 41 ]\n\t\t} );\n\n\t\tif ( this.options.hasOwnProperty( 'marker icons' ) ) {\n\n\t\t\tfor ( let value in this.options[ 'marker icons' ] ) {\n\t\t\t\tthis.icon[ value ] = new L.Icon( {\n\t\t\t\t\t'iconUrl': this.options[ 'marker icons' ][ value ],\n\t\t\t\t\t// 'iconRetinaUrl': iconPath + 'marker-icon-2x.png',\n\t\t\t\t\t'shadowUrl': iconPath + 'marker-shadow.png',\n\t\t\t\t\t'iconSize': [ 32, 32 ],\n\t\t\t\t\t'iconAnchor': [ 16, 32 ],\n\t\t\t\t\t'popupAnchor': [ 1, -30 ],\n\t\t\t\t\t// 'tooltipAnchor': [16, -28],\n\t\t\t\t\t'shadowSize': [ 41, 41 ],\n\t\t\t\t\t'shadowAnchor': [ 12, 41 ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getMarker( latLng: L.LatLngExpression, row: any ) {\n\t\tlet title = undefined;\n\t\tlet popup = [];\n\n\t\t// TODO: Use <div> instead of <b> and do CSS styling\n\n\t\tfor ( let prId in row[ 'printouts' ] ) {\n\t\t\tlet printrequest = (this.controller.getPrintRequests())[ prId ];\n\n\t\t\tif ( ! printrequest.hasOwnProperty('hide') || printrequest.hide === false ) {\n\t\t\t\tlet printouts = row[ 'printouts' ][ prId ];\n\n\t\t\t\tif ( title === undefined ) {\n\t\t\t\t\ttitle = printouts[ 'values' ].join( ', ' );\n\t\t\t\t\tpopup.push( '<b>' + printouts[ 'formatted values' ].join( ', ' ) + '</b>' );\n\t\t\t\t} else {\n\t\t\t\t\tpopup.push( (printouts.label ? '<b>' + printouts.label + ':</b> ' : '') + printouts[ 'formatted values' ].join( ', ' ) )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet marker = L.marker( latLng, { title: title, alt: title } );\n\t\tmarker.bindPopup( popup.join( '<br>' ) );\n\n\t\tmarker.setIcon( this.getIcon( row ) );\n\t\treturn marker;\n\t}\n\n\tpublic lateInit() {\n\n\t\tif ( this.initialized ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initialized = true;\n\n\t\tlet that = this;\n\n\t\tthis.leafletPromise.then( () => {\n\n\t\t\tlet mapOptions: Options = {\n\t\t\t\tcenter: this.bounds !== undefined ? this.bounds.getCenter() : [ 0, 0 ]\n\t\t\t};\n\n\t\t\tmapOptions = that.getOptions( [ 'zoom', 'minZoom', 'maxZoom' ], mapOptions );\n\n\t\t\t// TODO: Limit zoom values to map max zoom\n\n\t\t\tthat.map = L.map( <HTMLElement> that.getTargetElement().get( 0 ), mapOptions );\n\t\t\tthat.map.addLayer( that.markerClusterGroup );\n\n\t\t\tif ( this.options.hasOwnProperty( 'map provider' ) ) {\n\t\t\t\tL.tileLayer.provider( this.options[ 'map provider' ] ).addTo( that.map );\n\t\t\t}\n\n\t\t\tif ( !mapOptions.hasOwnProperty( 'zoom' ) ) {\n\t\t\t\tthat.map.fitBounds( that.bounds );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tpublic getOptions( keys: string[], defaults: Options = {} ) {\n\n\t\tfor ( let key of keys ) {\n\t\t\tif ( this.options.hasOwnProperty( key ) ) {\n\t\t\t\tdefaults[ key ] = this.options[ key ];\n\t\t\t}\n\t\t}\n\n\t\treturn defaults;\n\t}\n\n\tpublic showRows( rowIds: string[] ) {\n\t\tthis.leafletPromise.then( () => {\n\t\t\tthis.manipulateLayers( rowIds, ( layers: L.Layer[] ) => {\n\t\t\t\tthis.markerClusterGroup.addLayers( layers )\n\t\t\t} )\n\t\t} );\n\t}\n\n\tpublic hideRows( rowIds: string[] ) {\n\t\tthis.leafletPromise.then( () => {\n\t\t\tthis.manipulateLayers( rowIds, ( layers: L.Layer[] ) => {\n\t\t\t\tthis.markerClusterGroup.removeLayers( layers )\n\t\t\t} )\n\t\t} );\n\t}\n\n\tprivate manipulateLayers( rowIds: string[], cb: ( layers: L.Layer[] ) => void ) {\n\n\t\tlet layersFromRowIds = this.getLayersFromRowIds( rowIds );\n\n\t\tif ( layersFromRowIds.length > 0 ) {\n\t\t\tcb( layersFromRowIds );\n\t\t}\n\n\t}\n\n\tprivate getLayersFromRowIds( rowIds: string[] ) {\n\t\treturn this.flatten( this.getLayersFromRowIdsRaw( rowIds ) );\n\t}\n\n\tprivate getLayersFromRowIdsRaw( rowIds: string[] ) {\n\t\treturn rowIds.map( ( rowId: string ) => this.markers[ rowId ] ? this.markers[ rowId ] : [] );\n\t}\n\n\tprivate flatten( markers: L.Layer[][] ): L.Layer[] {\n\t\treturn markers.reduce( ( result: L.Layer[], layers: L.Layer[] ) => result.concat( layers ), [] );\n\t}\n\n\tpublic show() {\n\t\tsuper.show();\n\t\tthis.lateInit();\n\t}\n\n}\n","import { View } from \"./View\";\n\nexport class TableView extends View {\n\n\tprotected getItemClassName() {\n\t\treturn '.filtered-table-item';\n\t}\n\n}","import { Options } from \"../../types\";\nimport { Controller } from \"../Controller\";\n\nexport class View {\n\n\tprotected id: string = undefined;\n\tprotected target: JQuery = undefined;\n\tprotected controller: Controller = undefined;\n\tprotected options: Options = undefined;\n\tprotected visible: boolean = false;\n\tprotected rows: { [ rowId: string ]: JQuery } = {};\n\n\tpublic constructor( id: string, target: JQuery, c: Controller, options: Options = {} ) {\n\t\tthis.id = id;\n\t\tthis.target = target;\n\t\tthis.controller = c;\n\t\tthis.options = options;\n\t}\n\n\tpublic init(): Promise<any>|void {\n\n\t\tlet rowIds = Object.keys( this.controller.getData() );\n\t\tlet rows = this.target.find( this.getItemClassName() );\n\n\t\trows.each( ( index, elem ) => {\n\t\t\tlet classes = elem.classList;\n\t\t\tfor ( let i = 0; i < classes.length; i++ ) {\n\t\t\t\tif ( rowIds.indexOf( classes[ i ] ) >= 0 ) {\n\t\t\t\t\tthis.rows[ classes[ i ] ] = $( rows[ index ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\tprotected getItemClassName() {\n\t\treturn '.filtered-item';\n\t}\n\n\tpublic getTargetElement(): JQuery {\n\t\treturn this.target;\n\t}\n\n\tpublic showRows( rowIds: string[] ) {\n\n\t\tif ( this.visible && rowIds.length < 200 ) {\n\n\t\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\t\tthis.rows[ rowId ].slideDown( 400 );\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\t\tthis.rows[ rowId ].css( 'display', '');\n\t\t\t} );\n\n\t\t}\n\t}\n\n\tpublic hideRows( rowIds: string[] ) {\n\n\t\tif ( this.visible && rowIds.length < 200 ) {\n\n\t\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\t\tthis.rows[ rowId ].slideUp( 400 );\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\trowIds.forEach( ( rowId: string ) => {\n\t\t\t\tthis.rows[ rowId ].css( 'display', 'none');\n\t\t\t} );\n\n\t\t}\n\t}\n\n\tpublic show() {\n\t\tthis.target.show();\n\t\tthis.visible = true;\n\t}\n\n\tpublic hide() {\n\t\tthis.target.hide();\n\t\tthis.visible = false;\n\t}\n}\n","import { Controller } from \"./Controller\";\nexport class ViewSelector {\n\n\tprivate target: JQuery = undefined;\n\tprivate viewIDs: string[] = undefined;\n\n\tprivate controller: Controller = undefined;\n\n\tpublic constructor( target: JQuery, viewIDs: string[], controller: Controller ) {\n\t\tthis.target = target;\n\t\tthis.viewIDs = viewIDs;\n\t\tthis.controller = controller;\n\t}\n\n\tpublic init() {\n\t\tif ( this.viewIDs.length > 1 ) {\n\t\t\tthis.viewIDs.forEach( ( id: string) => { this.target.on( 'click', '.' + id, { 'target': id, 'controller' : this.controller }, ViewSelector.onSelectorSelected ); } );\n\t\t\tthis.target.children().first().addClass( 'selected');\n\t\t\tthis.target.show();\n\t\t}\n\t}\n\n\tprivate static onSelectorSelected( event: JQueryEventObject ) {\n\n\t\tevent.data.controller.onViewSelected( event.data.target );\n\n\t\t$( event.target )\n\t\t.addClass( 'selected')\n\t\t.siblings().removeClass( 'selected' );\n\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n\n}","import { Filtered } from \"./Filtered/Filtered\";\n\ndeclare let mw: any;\nlet config = mw.config.get( 'srfFilteredConfig' );\n\nfor ( let id in config ) {\n\tif ( config.hasOwnProperty( id ) ) {\n\t\tlet f = new Filtered( $( '#' + id ), config[ id ] );\n\t\tmw.hook( 'wikipage.content' ).add( () => f.run() );\n\t}\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJyZXNvdXJjZXMvdHMvRmlsdGVyZWQvQ29udHJvbGxlci50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9GaWx0ZXIvRGlzdGFuY2VGaWx0ZXIudHMiLCJyZXNvdXJjZXMvdHMvRmlsdGVyZWQvRmlsdGVyL0ZpbHRlci50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9GaWx0ZXIvTnVtYmVyRmlsdGVyLnRzIiwicmVzb3VyY2VzL3RzL0ZpbHRlcmVkL0ZpbHRlci9WYWx1ZUZpbHRlci50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9GaWx0ZXJlZC50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L0NhbGVuZGFyVmlldy50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L0xpc3RWaWV3LnRzIiwicmVzb3VyY2VzL3RzL0ZpbHRlcmVkL1ZpZXcvTWFwVmlldy50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L1RhYmxlVmlldy50cyIsInJlc291cmNlcy90cy9GaWx0ZXJlZC9WaWV3L1ZpZXcudHMiLCJyZXNvdXJjZXMvdHMvRmlsdGVyZWQvVmlld1NlbGVjdG9yLnRzIiwicmVzb3VyY2VzL3RzL2Jvb3RzdHJhcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUNBQSxnQ0FBZ0M7O0FBS2hDLG9DQUFtQztBQUduQztJQVVDLG9CQUFvQixNQUFjLEVBQUUsSUFBZ0IsRUFBRSxhQUFzQjtRQVRwRSxXQUFNLEdBQVcsU0FBUyxDQUFDO1FBQzNCLGtCQUFhLEdBQVcsU0FBUyxDQUFDO1FBRWxDLFVBQUssR0FBNEIsRUFBRSxDQUFDO1FBQ3BDLFlBQU8sR0FBOEIsRUFBRSxDQUFDO1FBQ3hDLGdCQUFXLEdBQVMsU0FBUyxDQUFDO1FBS3JDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBRXJCLElBQUssSUFBSSxDQUFDLE1BQU0sS0FBSyxTQUFT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RUFBRSxFQUFQLENBQU8sQ0FBRSxDQUFDO0tBQ25EOztBQUpGLEtBQU0sSUFBSSxFQUFFLElBQUksTUFBTTtZQUFaLEVBQUU7Q0FLWCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIi8vLyA8cmVmZXJlbmNlIHR5cGVzPVwianF1ZXJ5XCIgLz5cblxuaW1wb3J0IHsgT3B0aW9ucywgUmVzdWx0RGF0YSB9IGZyb20gXCIuLi90eXBlc1wiO1xuZGVjbGFyZSBsZXQgc3JmOiBhbnk7XG5cbmltcG9ydCB7IFZpZXcgfSBmcm9tIFwiLi9WaWV3L1ZpZXdcIjtcbmltcG9ydCB7IEZpbHRlciB9IGZyb20gXCIuL0ZpbHRlci9GaWx0ZXJcIjtcblxuZXhwb3J0IGNsYXNzIENvbnRyb2xsZXIge1xuXHRwcml2YXRlIHRhcmdldDogSlF1ZXJ5ID0gdW5kZWZpbmVkO1xuXHRwcml2YXRlIGZpbHRlclNwaW5uZXI6IEpRdWVyeSA9IHVuZGVmaW5lZDtcblxuXHRwcml2YXRlIHZpZXdzOiB7IFtrZXk6IHN0cmluZ106IFZpZXcgfSA9IHt9O1xuXHRwcml2YXRlIGZpbHRlcnM6IHsgW2tleTogc3RyaW5nXTogRmlsdGVyIH0gPSB7fTtcblx0cHJpdmF0ZSBjdXJyZW50VmlldzogVmlldyA9IHVuZGVmaW5lZDtcblx0cHJpdmF0ZSBkYXRhOiBSZXN1bHREYXRhO1xuXHRwcml2YXRlIHByaW50UmVxdWVzdHM6IE9wdGlvbnM7XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKCB0YXJnZXQ6IEpRdWVyeSwgZGF0YTogUmVzdWx0RGF0YSwgcHJpbnRSZXF1ZXN0czogT3B0aW9ucyApIHtcblx0XHR0aGlzLnRhcmdldCA9IHRhcmdldDtcblxuXHRcdGlmICggdGhpcy50YXJnZXQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHRoaXMuZmlsdGVyU3Bpbm5lciA9IHRoaXMudGFyZ2V0LmZpbmQoICdkaXYuZmlsdGVyZWQtZmlsdGVyLXNwaW5uZXInICk7XG5cdFx0fVxuXG5cdFx0dGhpcy5kYXRhID0gZGF0YTtcblx0XHR0aGlzLnByaW50UmVxdWVzdHMgPSBwcmludFJlcXVlc3RzO1xuXG5cdFx0Zm9yICggbGV0IHJvd0lkIGluIHRoaXMuZGF0YSApIHtcblx0XHRcdGlmICggIXRoaXMuZGF0YVsgcm93SWQgXS5oYXNPd25Qcm9wZXJ0eSggJ3Zpc2libGUnICkgKSB7XG5cdFx0XHRcdHRoaXMuZGF0YVsgcm93SWQgXS52aXNpYmxlID0ge307XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cHVibGljIGdldERhdGEoKTogYW55IHtcblx0XHRyZXR1cm4gdGhpcy5kYXRhO1xuXHR9XG5cblx0cHVibGljIGdldFByaW50UmVxdWVzdHMoKTogT3B0aW9ucyB7XG5cdFx0cmV0dXJuIHRoaXMucHJpbnRSZXF1ZXN0cztcblx0fVxuXG5cdHB1YmxpYyBnZXRQYXRoKCkge1xuXHRcdHJldHVybiBzcmYuc2V0dGluZ3MuZ2V0KCAnc3JmZ1NjcmlwdFBhdGgnICkgKyAnL2Zvcm1hdHMvZmlsdGVyZWQvcmVzb3VyY2VzLyc7XG5cdH1cblxuXHRwdWJsaWMgYXR0YWNoVmlldyggdmlld2lkOiBzdHJpbmcsIHZpZXc6IFZpZXcgKSB7XG5cblx0XHR0aGlzLnZpZXdzWyB2aWV3aWQgXSA9IHZpZXc7XG5cblx0XHRpZiAoIHRoaXMuY3VycmVudFZpZXcgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHRoaXMuY3VycmVudFZpZXcgPSB2aWV3O1xuXHRcdFx0dmlldy5zaG93KCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZpZXcuaGlkZSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cblx0cHVibGljIGdldFZpZXcoIHZpZXdJZDogc3RyaW5nICk6IFZpZXcge1xuXHRcdHJldHVybiB0aGlzLnZpZXdzWyB2aWV3SWQgXTtcblx0fVxuXG5cdHB1YmxpYyBhdHRhY2hGaWx0ZXIoIGZpbHRlcjogRmlsdGVyICk6IEpRdWVyeVByb21pc2U8IHZvaWQgPiB7XG5cdFx0bGV0IGZpbHRlcklkID0gZmlsdGVyLmdldElkKCk7XG5cblx0XHR0aGlzLmZpbHRlcnNbIGZpbHRlcklkIF0gPSBmaWx0ZXI7XG5cblx0XHRmaWx0ZXIuaW5pdCgpO1xuXG5cdFx0cmV0dXJuIHRoaXMub25GaWx0ZXJVcGRhdGVkKCBmaWx0ZXJJZCApO1xuXHR9XG5cblx0cHVibGljIGdldEZpbHRlciggZmlsdGVySWQ6IHN0cmluZyApOiBGaWx0ZXIge1xuXHRcdHJldHVybiB0aGlzLmZpbHRlcnNbIGZpbHRlcklkIF07XG5cdH1cblxuXHRwdWJsaWMgc2hvdygpIHtcblx0XHR0aGlzLmluaXRpYWxpemVGaWx0ZXJzKCk7XG5cdFx0dGhpcy50YXJnZXQuY2hpbGRyZW4oICcuZmlsdGVyZWQtc3Bpbm5lcicgKS5yZW1vdmUoKTtcblx0XHR0aGlzLnRhcmdldC5jaGlsZHJlbigpLnNob3coKTtcblx0XHR0aGlzLnN3aXRjaFRvVmlldyggdGhpcy5jdXJyZW50VmlldyApO1xuXHR9XG5cblx0cHJpdmF0ZSBzd2l0Y2hUb1ZpZXcoIHZpZXc6IFZpZXcgKSB7XG5cblx0XHRpZiAoIHRoaXMuY3VycmVudFZpZXcgaW5zdGFuY2VvZiBWaWV3ICkge1xuXHRcdFx0dGhpcy5jdXJyZW50Vmlldy5oaWRlKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5jdXJyZW50VmlldyA9IHZpZXc7XG5cblx0XHRpZiAoIHRoaXMuY3VycmVudFZpZXcgaW5zdGFuY2VvZiBWaWV3ICkge1xuXHRcdFx0dmlldy5zaG93KCk7XG5cdFx0fVxuXG5cdH1cblxuXHRwcml2YXRlIGluaXRpYWxpemVGaWx0ZXJzKCkge1xuXHRcdGxldCB0b1Nob3c6IHN0cmluZ1tdID0gW107XG5cdFx0bGV0IHRvSGlkZTogc3RyaW5nW10gPSBbXTtcblxuXHRcdGZvciAoIGxldCByb3dJZCBpbiB0aGlzLmRhdGEgKSB7XG5cdFx0XHRmb3IgKCBsZXQgZmlsdGVySWQgaW4gdGhpcy5maWx0ZXJzICkge1xuXHRcdFx0XHR0aGlzLmRhdGFbIHJvd0lkIF0udmlzaWJsZVsgZmlsdGVySWQgXSA9IHRoaXMuZmlsdGVyc1sgZmlsdGVySWQgXS5pc0Rpc2FibGVkKCkgfHwgdGhpcy5maWx0ZXJzWyBmaWx0ZXJJZCBdLmlzVmlzaWJsZSggcm93SWQgKTtcblx0XHRcdH1cblx0XHRcdGlmICggdGhpcy5pc1Zpc2libGUoIHJvd0lkICkgKSB7XG5cdFx0XHRcdHRvU2hvdy5wdXNoKCByb3dJZCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dG9IaWRlLnB1c2goIHJvd0lkICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0dGhpcy5oaWRlUm93cyggdG9IaWRlICk7XG5cdFx0dGhpcy5zaG93Um93cyggdG9TaG93ICk7XG5cdH1cblxuXHRwdWJsaWMgb25WaWV3U2VsZWN0ZWQoIHZpZXdJRDogc3RyaW5nICkge1xuXHRcdHRoaXMuc3dpdGNoVG9WaWV3KCB0aGlzLnZpZXdzWyB2aWV3SUQgXSApO1xuXHR9XG5cblx0cHVibGljIG9uRmlsdGVyVXBkYXRlZCggZmlsdGVySWQ6IHN0cmluZyApOiBKUXVlcnlQcm9taXNlPCB2b2lkID4ge1xuXG5cdFx0cmV0dXJuIHRoaXMuc2hvd1NwaW5uZXIoKVxuXHRcdC50aGVuKCgpID0+IHtcblxuXHRcdFx0bGV0IHRvU2hvdzogc3RyaW5nW10gPSBbXTtcblx0XHRcdGxldCB0b0hpZGU6IHN0cmluZ1tdID0gW107XG5cblx0XHRcdGxldCBkaXNhYmxlZCA9IHRoaXMuZmlsdGVyc1sgZmlsdGVySWQgXS5pc0Rpc2FibGVkKCk7XG5cblx0XHRcdGZvciAoIGxldCByb3dJZCBpbiB0aGlzLmRhdGEgKSB7XG5cblx0XHRcdFx0bGV0IG5ld1Zpc2libGU6IGJvb2xlYW4gPSBkaXNhYmxlZCB8fCB0aGlzLmZpbHRlcnNbIGZpbHRlcklkIF0uaXNWaXNpYmxlKCByb3dJZCApO1xuXG5cdFx0XHRcdGlmICggdGhpcy5kYXRhWyByb3dJZCBdLnZpc2libGVbIGZpbHRlcklkIF0gIT09IG5ld1Zpc2libGUgKSB7XG5cblx0XHRcdFx0XHR0aGlzLmRhdGFbIHJvd0lkIF0udmlzaWJsZVsgZmlsdGVySWQgXSA9IG5ld1Zpc2libGU7XG5cblx0XHRcdFx0XHRpZiAoIG5ld1Zpc2libGUgJiYgdGhpcy5pc1Zpc2libGUoIHJvd0lkICkgKSB7XG5cdFx0XHRcdFx0XHR0b1Nob3cucHVzaCggcm93SWQgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dG9IaWRlLnB1c2goIHJvd0lkICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMuaGlkZVJvd3MoIHRvSGlkZSApO1xuXHRcdFx0dGhpcy5zaG93Um93cyggdG9TaG93ICk7XG5cdFx0fSlcblx0XHQudGhlbiggKCkgPT4geyB0aGlzLmhpZGVTcGlubmVyKCkgfSApO1xuXHR9XG5cblx0cHVibGljIGlzVmlzaWJsZSggcm93SWQ6IGFueSApIHtcblx0XHRmb3IgKCBsZXQgZmlsdGVySWQgaW4gdGhpcy5kYXRhWyByb3dJZCBdLnZpc2libGUgKSB7XG5cdFx0XHRpZiAoICF0aGlzLmRhdGFbIHJvd0lkIF0udmlzaWJsZVsgZmlsdGVySWQgXSApIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdHByaXZhdGUgaGlkZVJvd3MoIHJvd0lkczogc3RyaW5nW10gKSB7XG5cdFx0aWYgKCByb3dJZHMubGVuZ3RoID09PSAwICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRmb3IgKCBsZXQgdmlld0lkIGluIHRoaXMudmlld3MgKSB7XG5cdFx0XHR0aGlzLnZpZXdzWyB2aWV3SWQgXS5oaWRlUm93cyggcm93SWRzICk7XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBzaG93Um93cyggcm93SWRzOiBzdHJpbmdbXSApIHtcblx0XHRpZiAoIHJvd0lkcy5sZW5ndGggPT09IDAgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdGZvciAoIGxldCB2aWV3SWQgaW4gdGhpcy52aWV3cyApIHtcblx0XHRcdHRoaXMudmlld3NbIHZpZXdJZCBdLnNob3dSb3dzKCByb3dJZHMgKTtcblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIHNob3dTcGlubmVyKCk6IEpRdWVyeVByb21pc2U8IHZvaWQgPiB7XG5cdFx0cmV0dXJuIHRoaXMuYW5pbWF0ZVNwaW5uZXIoKTtcblx0fVxuXG5cdHByaXZhdGUgaGlkZVNwaW5uZXIoKTogSlF1ZXJ5UHJvbWlzZTwgdm9pZCA+IHtcblx0XHRyZXR1cm4gdGhpcy5hbmltYXRlU3Bpbm5lciggZmFsc2UgKTtcblx0fVxuXG5cdHByaXZhdGUgYW5pbWF0ZVNwaW5uZXIoIHNob3c6IGJvb2xlYW4gPSB0cnVlICk6IEpRdWVyeVByb21pc2U8IHZvaWQgPiB7XG5cblx0XHRpZiAoIHRoaXMuZmlsdGVyU3Bpbm5lciA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS53aGVuKCk7XG5cdFx0fVxuXG5cdFx0aWYgKCBzaG93ICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZmlsdGVyU3Bpbm5lci5mYWRlSW4oIDIwMCApLnByb21pc2UoKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5maWx0ZXJTcGlubmVyLmZhZGVPdXQoIDIwMCApLnByb21pc2UoKTtcblx0fVxuXG59XG4iLCJpbXBvcnQgeyBGaWx0ZXIgfSBmcm9tIFwiLi9GaWx0ZXJcIjtcblxuZGVjbGFyZSBsZXQgbXc6IGFueTtcblxuZXhwb3J0IGNsYXNzIERpc3RhbmNlRmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcblxuXHRwcml2YXRlIHN0YXRpYyByZWFkb25seSBlYXJ0aFJhZGl1czogeyBba2V5OiBzdHJpbmddOiBudW1iZXIgfSA9IHtcblx0XHRtOiA2MzcxMDA4LjgsXG5cdFx0a206IDYzNzEuMDA4OCxcblx0XHRtaTogMzk1OC43NjEzLFxuXHRcdG5tOiAzNDQwLjA2OTUsXG5cdFx0w4U6IDYzNzEwMDg4MDAwMDAwMDAwXG5cdH07XG5cblx0cHJpdmF0ZSBlYXJ0aFJhZGl1c1ZhbHVlOiBudW1iZXIgPSBEaXN0YW5jZUZpbHRlci5lYXJ0aFJhZGl1cy5rbTtcblx0cHJpdmF0ZSBmaWx0ZXJWYWx1ZTogbnVtYmVyID0gMDtcblxuXHRwdWJsaWMgaW5pdCgpIHtcblxuXHRcdGxldCB2YWx1ZXMgPSB0aGlzLmNvbnRyb2xsZXIuZ2V0RGF0YSgpO1xuXG5cdFx0bGV0IG9yaWdpbiA9IHRoaXMub3B0aW9uc1sgJ29yaWdpbicgXTtcblxuXHRcdGlmICggISggb3JpZ2luICE9PSB1bmRlZmluZWQgJiYgb3JpZ2luLmhhc093blByb3BlcnR5KCAnbGF0JyApICYmIG9yaWdpbi5oYXNPd25Qcm9wZXJ0eSggJ2xuZycgKSApICkge1xuXHRcdFx0dGhpcy50YXJnZXQuZGV0YWNoKCk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0bGV0IHVuaXQgPSAna20nO1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnNbICd1bml0JyBdICYmIERpc3RhbmNlRmlsdGVyLmVhcnRoUmFkaXVzWyB0aGlzLm9wdGlvbnNbICd1bml0JyBdIF0gKSB7XG5cdFx0XHR1bml0ID0gdGhpcy5vcHRpb25zWyAndW5pdCcgXTtcblx0XHR9XG5cblx0XHR0aGlzLmVhcnRoUmFkaXVzVmFsdWUgPSBEaXN0YW5jZUZpbHRlci5lYXJ0aFJhZGl1c1sgdW5pdCBdO1xuXG5cdFx0bGV0IG1heFZhbHVlOiBudW1iZXIgPSB0aGlzLnVwZGF0ZURpc3RhbmNlcyggb3JpZ2luICk7XG5cblx0XHRsZXQgcHJlY2lzaW9uID0gMTAgKiogKCBNYXRoLmZsb29yKCBNYXRoLmxvZyggbWF4VmFsdWUgKSAqIE1hdGguTE9HMTBFICkgLSAxKTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zWyAnbWF4JyBdICE9PSB1bmRlZmluZWQgJiYgdGhpcy5vcHRpb25zWyAnbWF4JyBdID4gbWF4VmFsdWUgKSB7XG5cdFx0XHRtYXhWYWx1ZSA9IHRoaXMub3B0aW9uc1sgJ21heCcgXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF4VmFsdWUgPSBNYXRoLmNlaWwoIG1heFZhbHVlIC8gcHJlY2lzaW9uICkgKiBwcmVjaXNpb247XG5cdFx0fVxuXG5cdFx0dGhpcy5maWx0ZXJWYWx1ZSA9IHRoaXMub3B0aW9uc1sgJ2luaXRpYWwgdmFsdWUnIF0gPyBNYXRoLm1pbiggdGhpcy5vcHRpb25zWyAnaW5pdGlhbCB2YWx1ZScgXSwgbWF4VmFsdWUgKSA6IG1heFZhbHVlO1xuXG5cdFx0Ly8gYnVpbGQgZmlsdGVyIGNvbnRyb2xzXG5cdFx0bGV0IGZpbHRlcmNvbnRyb2xzID0gdGhpcy5idWlsZEVtcHR5Q29udHJvbCgpO1xuXG5cdFx0bGV0IHJlYWRvdXQgPSAkKCAnPGRpdiBjbGFzcz1cImZpbHRlcmVkLWRpc3RhbmNlLXJlYWRvdXRcIj4nICsgdGhpcy5maWx0ZXJWYWx1ZSArICc8L2Rpdj4nICk7XG5cblx0XHRsZXQgdGFibGUgPSAkKCAnPHRhYmxlIGNsYXNzPVwiZmlsdGVyZWQtZGlzdGFuY2UtdGFibGVcIj48dGJvZHk+PHRyPjx0ZCBjbGFzcz1cImZpbHRlcmVkLWRpc3RhbmNlLW1pbi1jZWxsXCI+MDwvdGQ+JyArXG5cdFx0XHQnPHRkIGNsYXNzPVwiZmlsdGVyZWQtZGlzdGFuY2Utc2xpZGVyLWNlbGxcIj48ZGl2IGNsYXNzPVwiZmlsdGVyZWQtZGlzdGFuY2Utc2xpZGVyXCI+PC9kaXY+PC90ZD4nICtcblx0XHRcdCc8dGQgY2xhc3M9XCJmaWx0ZXJlZC1kaXN0YW5jZS1tYXgtY2VsbFwiPicgKyBtYXhWYWx1ZSArICc8L3RkPjwvdHI+JyArXG5cdFx0XHQnPHRyPjx0ZCBjb2xzcGFuPTMgY2xhc3M9XCJmaWx0ZXJlZC1kaXN0YW5jZS11bml0LWNlbGxcIj4nICsgdW5pdCArICc8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPicgKTtcblxuXHRcdGZpbHRlcmNvbnRyb2xzLmFwcGVuZCggdGFibGUgKTtcblxuXHRcdGxldCB0aGF0ID0gdGhpcztcblx0XHRtdy5sb2FkZXIudXNpbmcoICdqcXVlcnkudWkuc2xpZGVyJyApLnRoZW4oIGZ1bmN0aW9uICgpIHtcblxuXHRcdFx0dGFibGUuZmluZCggJy5maWx0ZXJlZC1kaXN0YW5jZS1zbGlkZXInIClcblx0XHRcdC5zbGlkZXIoIHtcblx0XHRcdFx0YW5pbWF0ZTogdHJ1ZSxcblx0XHRcdFx0bWF4OiBtYXhWYWx1ZSxcblx0XHRcdFx0dmFsdWU6IHRoYXQuZmlsdGVyVmFsdWUsXG5cdFx0XHRcdHN0ZXA6IHByZWNpc2lvbiAvIDEwMFxuXHRcdFx0fSApXG5cdFx0XHQub24oICdzbGlkZWNoYW5nZScsIHVuZGVmaW5lZCwgeyAnZmlsdGVyJzogdGhhdCB9LCBmdW5jdGlvbiAoIGV2ZW50T2JqZWN0OiBKUXVlcnlFdmVudE9iamVjdCwgdWk6IGFueSApIHtcblx0XHRcdFx0ZXZlbnRPYmplY3QuZGF0YS51aSA9IHVpO1xuXHRcdFx0XHRldmVudE9iamVjdC5kYXRhLmZpbHRlci5vbkZpbHRlclVwZGF0ZWQoIGV2ZW50T2JqZWN0ICk7XG5cdFx0XHR9IClcblx0XHRcdC5vbiggJ3NsaWRlJywgdW5kZWZpbmVkLCB7ICdmaWx0ZXInOiB0aGF0IH0sIGZ1bmN0aW9uICggZXZlbnRPYmplY3Q6IEpRdWVyeUV2ZW50T2JqZWN0LCB1aTogYW55ICkge1xuXHRcdFx0XHRyZWFkb3V0LnRleHQoIHVpLnZhbHVlICk7XG5cdFx0XHR9IClcblx0XHRcdC5maW5kKCAnLnVpLXNsaWRlci1oYW5kbGUnIClcblx0XHRcdC5hcHBlbmQoIHJlYWRvdXQgKTtcblxuXHRcdH0gKTtcblxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cblx0cHJpdmF0ZSB1cGRhdGVEaXN0YW5jZXMoIG9yaWdpbjogTC5MYXRMbmdMaXRlcmFsICk6IG51bWJlciB7XG5cblx0XHRsZXQgdmFsdWVzID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKTtcblx0XHRsZXQgbWF4ID0gMTtcblxuXHRcdGxldCBwcklkID0gdGhpcy5wcmludHJlcXVlc3RJZDtcblxuXHRcdGZvciAoIGxldCByb3dJZCBpbiB2YWx1ZXMgKSB7XG5cblx0XHRcdGlmICggdmFsdWVzWyByb3dJZCBdLmRhdGEuaGFzT3duUHJvcGVydHkoIHRoaXMuZmlsdGVySWQgKSApIHtcblx0XHRcdFx0bGV0IGRpc3RhbmNlczogbnVtYmVyW10gPSB2YWx1ZXNbIHJvd0lkIF0uZGF0YVsgdGhpcy5maWx0ZXJJZCBdLnBvc2l0aW9ucy5tYXAoICggcG9zOiBMLkxhdExuZ0xpdGVyYWwgKSA9PiB0aGlzLmRpc3RhbmNlKCBvcmlnaW4sIHBvcyApICk7XG5cdFx0XHRcdGxldCBkaXN0ID0gTWF0aC5taW4oIC4uLmRpc3RhbmNlcyApO1xuXG5cdFx0XHRcdHZhbHVlc1sgcm93SWQgXS5kYXRhWyB0aGlzLmZpbHRlcklkIF0uZGlzdGFuY2UgPSBkaXN0O1xuXHRcdFx0XHRtYXggPSBNYXRoLm1heCggbWF4LCBkaXN0ICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR2YWx1ZXNbIHJvd0lkIF0uZGF0YVsgdGhpcy5maWx0ZXJJZCBdLmRpc3RhbmNlID0gSW5maW5pdHk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1heDtcblx0fVxuXG5cdHB1YmxpYyBvbkZpbHRlclVwZGF0ZWQoIGV2ZW50T2JqZWN0OiBKUXVlcnlFdmVudE9iamVjdCApIHtcblx0XHR0aGlzLmZpbHRlclZhbHVlID0gZXZlbnRPYmplY3QuZGF0YS51aS52YWx1ZTtcblx0XHR0aGlzLmNvbnRyb2xsZXIub25GaWx0ZXJVcGRhdGVkKCB0aGlzLmdldElkKCkgKTtcblx0fVxuXG5cdHByaXZhdGUgZGlzdGFuY2UoIGE6IEwuTGF0TG5nTGl0ZXJhbCwgYjogTC5MYXRMbmdMaXRlcmFsICkge1xuXG5cdFx0Y29uc3QgREVHMlJBRCA9IE1hdGguUEkgLyAxODAuMDtcblxuXHRcdGZ1bmN0aW9uIHNxdWFyZWQoIHg6IG51bWJlciApIHtcblx0XHRcdHJldHVybiB4ICogeFxuXHRcdH1cblxuXHRcdGxldCBmID1cblx0XHRcdHNxdWFyZWQoIE1hdGguc2luKCAoIGIubGF0IC0gYS5sYXQgKSAqIERFRzJSQUQgLyAyLjAgKSApICtcblx0XHRcdE1hdGguY29zKCBhLmxhdCAqIERFRzJSQUQgKSAqIE1hdGguY29zKCBiLmxhdCAqIERFRzJSQUQgKSAqXG5cdFx0XHRzcXVhcmVkKCBNYXRoLnNpbiggKCBiLmxuZyAtIGEubG5nICkgKiBERUcyUkFEIC8gMi4wICkgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhcnRoUmFkaXVzVmFsdWUgKiAyICogTWF0aC5hdGFuMiggTWF0aC5zcXJ0KCBmICksIE1hdGguc3FydCggMSAtIGYgKSApO1xuXHR9XG5cblx0cHVibGljIGlzVmlzaWJsZSggcm93SWQ6IHN0cmluZyApOiBib29sZWFuIHtcblxuXHRcdGxldCByb3dkYXRhID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKVsgcm93SWQgXS5kYXRhO1xuXG5cdFx0aWYgKCByb3dkYXRhLmhhc093blByb3BlcnR5KCB0aGlzLmZpbHRlcklkICkgKSB7XG5cdFx0XHRyZXR1cm4gcm93ZGF0YVsgdGhpcy5maWx0ZXJJZCBdLmRpc3RhbmNlIDw9IHRoaXMuZmlsdGVyVmFsdWU7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHN1cGVyLmlzVmlzaWJsZSggcm93SWQgKTtcblxuXHR9XG5cbn1cbiIsImltcG9ydCB7IE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcbmltcG9ydCB7IENvbnRyb2xsZXIgfSBmcm9tIFwiLi4vQ29udHJvbGxlclwiO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgRmlsdGVye1xuXG5cdHByaXZhdGUgb3V0ZXJUYXJnZXQ6IEpRdWVyeSA9IHVuZGVmaW5lZDtcblx0cHJvdGVjdGVkIHRhcmdldDogSlF1ZXJ5ID0gdW5kZWZpbmVkO1xuXHRwcm90ZWN0ZWQgZmlsdGVySWQ6IHN0cmluZztcblx0cHJvdGVjdGVkIHByaW50cmVxdWVzdElkOiBzdHJpbmc7XG5cdHByb3RlY3RlZCBjb250cm9sbGVyOiBDb250cm9sbGVyO1xuXHRwcm90ZWN0ZWQgb3B0aW9uczogT3B0aW9ucyA9IHVuZGVmaW5lZDtcblx0cHJvdGVjdGVkIGRpc2FibGVkOiBib29sZWFuID0gZmFsc2U7XG5cdHByb3RlY3RlZCBjb2xsYXBzZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuXHRwdWJsaWMgY29uc3RydWN0b3IoIGZpbHRlcklkOiBzdHJpbmcsIHRhcmdldDogSlF1ZXJ5LCBwcmludHJlcXVlc3RJZDogc3RyaW5nLCBjb250cm9sbGVyOiBDb250cm9sbGVyLCBvcHRpb25zPzogT3B0aW9ucyApIHtcblx0XHR0aGlzLnRhcmdldCA9IHRhcmdldDtcblx0XHR0aGlzLm91dGVyVGFyZ2V0ID0gdGFyZ2V0O1xuXHRcdHRoaXMuZmlsdGVySWQgPSBmaWx0ZXJJZDtcblx0XHR0aGlzLnByaW50cmVxdWVzdElkID0gcHJpbnRyZXF1ZXN0SWQ7XG5cdFx0dGhpcy5jb250cm9sbGVyID0gY29udHJvbGxlcjtcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXHR9XG5cblx0cHVibGljIGluaXQoKSB7fTtcblxuXHRwdWJsaWMgaXNEaXNhYmxlZCgpIDogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMuZGlzYWJsZWQ7XG5cdH1cblxuXHRwdWJsaWMgZGlzYWJsZSgpIHtcblx0XHR0aGlzLmRpc2FibGVkID0gdHJ1ZTtcblxuXHRcdHRoaXMub3V0ZXJUYXJnZXRcblx0XHQucmVtb3ZlQ2xhc3MoICdlbmFibGVkJyApXG5cdFx0LmFkZENsYXNzKCAnZGlzYWJsZWQnICk7XG5cblx0XHR0aGlzLmNvbGxhcHNlKCk7XG5cblx0XHR0aGlzLnRhcmdldC5wcm9taXNlKCkudGhlbiggKCkgPT5cdHRoaXMuY29udHJvbGxlci5vbkZpbHRlclVwZGF0ZWQoIHRoaXMuZmlsdGVySWQgKSApO1xuXHR9XG5cblx0cHVibGljIGVuYWJsZSgpIHtcblx0XHR0aGlzLmRpc2FibGVkID0gZmFsc2U7XG5cblx0XHR0aGlzLm91dGVyVGFyZ2V0XG5cdFx0LnJlbW92ZUNsYXNzKCAnZGlzYWJsZWQnIClcblx0XHQuYWRkQ2xhc3MoICdlbmFibGVkJyApO1xuXG5cdFx0aWYgKCAhIHRoaXMuY29sbGFwc2VkICkge1xuXHRcdFx0dGhpcy51bmNvbGxhcHNlKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy50YXJnZXQucHJvbWlzZSgpLnRoZW4oICgpID0+XHR0aGlzLmNvbnRyb2xsZXIub25GaWx0ZXJVcGRhdGVkKCB0aGlzLmZpbHRlcklkICkgKTtcblx0fVxuXG5cdHByaXZhdGUgY29sbGFwc2UoIGR1cmF0aW9uIDogbnVtYmVyID0gNDAwICkge1xuXG5cdFx0aWYgKCAhIHRoaXMuY29sbGFwc2VkICkge1xuXG5cdFx0XHR0aGlzLm91dGVyVGFyZ2V0LnByb21pc2UoKVxuXHRcdFx0LnRoZW4oICgpID0+IHtcblxuXHRcdFx0XHR0aGlzLnRhcmdldC5zbGlkZVVwKCBkdXJhdGlvbiApO1xuXG5cdFx0XHRcdHRoaXMub3V0ZXJUYXJnZXQuYW5pbWF0ZSgge1xuXHRcdFx0XHRcdCdwYWRkaW5nLXRvcCc6IDAsXG5cdFx0XHRcdFx0J3BhZGRpbmctYm90dG9tJzogMCxcblx0XHRcdFx0XHQnbWFyZ2luLWJvdHRvbSc6ICcyZW0nXG5cdFx0XHRcdH0sIGR1cmF0aW9uICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSB1bmNvbGxhcHNlKCkge1xuXHRcdHRoaXMub3V0ZXJUYXJnZXQucHJvbWlzZSgpXG5cdFx0LnRoZW4oICgpID0+IHtcblx0XHRcdHRoaXMudGFyZ2V0LnNsaWRlRG93bigpO1xuXG5cdFx0XHRsZXQgc3R5bGUgPSB0aGlzLm91dGVyVGFyZ2V0LmF0dHIoICdzdHlsZScgKTtcblx0XHRcdHRoaXMub3V0ZXJUYXJnZXQucmVtb3ZlQXR0ciggJ3N0eWxlJyApO1xuXHRcdFx0bGV0IHVuY29sbGFwc2VkQ3NzID0gdGhpcy5vdXRlclRhcmdldC5jc3MoIFsgJ3BhZGRpbmctdG9wJywgJ3BhZGRpbmctYm90dG9tJywgJ21hcmdpbi1ib3R0b20nIF0gKTtcblx0XHRcdHRoaXMub3V0ZXJUYXJnZXQuYXR0ciggJ3N0eWxlJywgc3R5bGUgKTtcblxuXHRcdFx0dGhpcy5vdXRlclRhcmdldC5hbmltYXRlKCB1bmNvbGxhcHNlZENzcyApO1xuXHRcdH0gKTtcblx0fVxuXG5cdHB1YmxpYyBpc1Zpc2libGUoIHJvd0lkOiBzdHJpbmcgKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ3Nob3cgaWYgdW5kZWZpbmVkJyApICYmIHRoaXMub3B0aW9uc1sgJ3Nob3cgaWYgdW5kZWZpbmVkJyBdID09PSB0cnVlO1xuXHR9XG5cblx0cHVibGljIGdldElkKCkge1xuXHRcdHJldHVybiB0aGlzLmZpbHRlcklkO1xuXHR9XG5cblx0cHJvdGVjdGVkIGJ1aWxkRW1wdHlDb250cm9sKCkge1xuXG5cdFx0dGhpcy50YXJnZXQgPSAkKCAnPGRpdiBjbGFzcz1cImZpbHRlcmVkLWZpbHRlci1jb250YWluZXJcIj4nICk7XG5cblx0XHR0aGlzLm91dGVyVGFyZ2V0XG5cdFx0LmFwcGVuZCggdGhpcy50YXJnZXQgKVxuXHRcdC5hZGRDbGFzcyggJ2VuYWJsZWQnICk7XG5cblx0XHR0aGlzLmFkZE9uT2ZmU3dpdGNoKCk7XG5cdFx0dGhpcy5hZGRMYWJlbCgpO1xuXHRcdHRoaXMuYWRkQ29udHJvbEZvckNvbGxhcHNpbmcoKTtcblxuXHRcdHJldHVybiB0aGlzLnRhcmdldDtcblx0fVxuXG5cdHByaXZhdGUgYWRkTGFiZWwoKSB7XG5cdFx0Ly8gaW5zZXJ0IHRoZSBsYWJlbCBvZiB0aGUgcHJpbnRvdXQgdGhpcyBmaWx0ZXIgZmlsdGVycyBvblxuXHRcdHRoaXMudGFyZ2V0LmJlZm9yZSggYDxkaXYgY2xhc3M9XCJmaWx0ZXJlZC1maWx0ZXItbGFiZWxcIj4ke3RoaXMub3B0aW9uc1sgJ2xhYmVsJyBdfTwvZGl2PmAgKTtcblx0fVxuXG5cdHByb3RlY3RlZCBhZGRPbk9mZlN3aXRjaCgpIHtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnc3dpdGNoZXMnICkgKSB7XG5cblx0XHRcdGxldCBzd2l0Y2hlcyA9IHRoaXMub3B0aW9uc1sgJ3N3aXRjaGVzJyBdO1xuXG5cdFx0XHRpZiAoIHN3aXRjaGVzLmxlbmd0aCA+IDAgJiYgJC5pbkFycmF5KCAnb24gb2ZmJywgc3dpdGNoZXMgKSA+PSAwICkge1xuXG5cdFx0XHRcdGxldCBvbk9mZkNvbnRyb2wgPSAkKCBgPGRpdiBjbGFzcz1cImZpbHRlcmVkLWZpbHRlci1vbm9mZiBvblwiPjwvZGl2PmAgKTtcblxuXHRcdFx0XHR0aGlzLnRhcmdldC5iZWZvcmUoIG9uT2ZmQ29udHJvbCApO1xuXG5cdFx0XHRcdG9uT2ZmQ29udHJvbC5jbGljayggKCkgPT4ge1xuXG5cdFx0XHRcdFx0aWYgKCB0aGlzLm91dGVyVGFyZ2V0Lmhhc0NsYXNzKCdlbmFibGVkJyApICkge1xuXHRcdFx0XHRcdFx0dGhpcy5kaXNhYmxlKCk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRoaXMuZW5hYmxlKCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRwcm90ZWN0ZWQgYWRkQ29udHJvbEZvckNvbGxhcHNpbmcoKSB7XG5cdFx0bGV0IGNvbGxhcHNpYmxlID0gdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnY29sbGFwc2libGUnICkgPyB0aGlzLm9wdGlvbnNbICdjb2xsYXBzaWJsZScgXSA6IHVuZGVmaW5lZDtcblx0XHRpZiAoIGNvbGxhcHNpYmxlID09PSAnY29sbGFwc2VkJyB8fCBjb2xsYXBzaWJsZSA9PT0gJ3VuY29sbGFwc2VkJyApIHtcblxuXHRcdFx0bGV0IGNvbGxhcHNlQ29udHJvbCA9ICQoICc8c3BhbiBjbGFzcz1cImZpbHRlcmVkLWZpbHRlci1jb2xsYXBzZVwiPicgKTtcblxuXHRcdFx0dGhpcy50YXJnZXQuYmVmb3JlKCBjb2xsYXBzZUNvbnRyb2wgKTtcblxuXHRcdFx0Y29sbGFwc2VDb250cm9sLmNsaWNrKCAoKSA9PiB7XG5cdFx0XHRcdGlmICggY29sbGFwc2VDb250cm9sLmhhc0NsYXNzKCAnY29sbGFwc2VkJyApICkge1xuXHRcdFx0XHRcdHRoaXMudW5jb2xsYXBzZSgpO1xuXHRcdFx0XHRcdHRoaXMuY29sbGFwc2VkID0gZmFsc2U7XG5cblx0XHRcdFx0XHRjb2xsYXBzZUNvbnRyb2xcblx0XHRcdFx0XHQucmVtb3ZlQ2xhc3MoICdjb2xsYXBzZWQnIClcblx0XHRcdFx0XHQuYWRkQ2xhc3MoICd1bmNvbGxhcHNlZCcgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0aGlzLmNvbGxhcHNlKCk7XG5cdFx0XHRcdFx0dGhpcy5jb2xsYXBzZWQgPSB0cnVlO1xuXG5cdFx0XHRcdFx0Y29sbGFwc2VDb250cm9sXG5cdFx0XHRcdFx0LnJlbW92ZUNsYXNzKCAndW5jb2xsYXBzZWQnIClcblx0XHRcdFx0XHQuYWRkQ2xhc3MoICdjb2xsYXBzZWQnICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0fSApO1xuXG5cdFx0XHRpZiAoIGNvbGxhcHNpYmxlID09PSAnY29sbGFwc2VkJyApIHtcblxuXHRcdFx0XHR0aGlzLmNvbGxhcHNlKCAwICk7XG5cdFx0XHRcdHRoaXMuY29sbGFwc2VkID0gdHJ1ZTtcblx0XHRcdFx0Y29sbGFwc2VDb250cm9sLmFkZENsYXNzKCdjb2xsYXBzZWQnKTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y29sbGFwc2VDb250cm9sLmFkZENsYXNzKCd1bmNvbGxhcHNlZCcpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG59IiwiLy8vPHJlZmVyZW5jZSBwYXRoPVwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0eXBlcy9pb24ucmFuZ2VzbGlkZXIvaW5kZXguZC50c1wiLz5cbmltcG9ydCB7IEZpbHRlciB9IGZyb20gXCIuL0ZpbHRlclwiO1xuaW1wb3J0IHsgT3B0aW9ucyB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuXG5kZWNsYXJlIGxldCBtdzogYW55O1xuXG5leHBvcnQgY2xhc3MgTnVtYmVyRmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcblxuXHRwcml2YXRlIE1PREVfUkFOR0UgPSAwO1xuXHRwcml2YXRlIE1PREVfTUlOID0gMTtcblx0cHJpdmF0ZSBNT0RFX01BWCA9IDI7XG5cdHByaXZhdGUgTU9ERV9TRUxFQ1QgPSAzO1xuXG5cdHByaXZhdGUgZmlsdGVyVmFsdWVVcHBlcjogbnVtYmVyID0gMDtcblx0cHJpdmF0ZSBmaWx0ZXJWYWx1ZUxvd2VyOiBudW1iZXIgPSAwO1xuXHRwcml2YXRlIG1vZGUgPSB0aGlzLk1PREVfUkFOR0U7XG5cblx0cHVibGljIGluaXQoKSB7XG5cblx0XHRsZXQgdmFsdWVzOiBudW1iZXJbXSA9IHRoaXMuZ2V0VmFsdWVzKCk7XG5cblx0XHRsZXQgeyBtaW5WYWx1ZSwgbWF4VmFsdWUsIHByZWNpc2lvbiB9ID0gdGhpcy5nZXRSYW5nZVBhcmFtZXRlcnMoIHZhbHVlcyApO1xuXG5cdFx0bGV0IHNsaWRlck9wdGlvbnM6IElvblJhbmdlU2xpZGVyT3B0aW9ucyA9IHtcblx0XHRcdHByZXR0aWZ5X2VuYWJsZWQ6IGZhbHNlLFxuXHRcdFx0Zm9yY2VfZWRnZXM6IHRydWUsXG5cdFx0XHRncmlkOiB0cnVlXG5cdFx0fTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAndmFsdWVzJyApICkge1xuXHRcdFx0c2xpZGVyT3B0aW9ucyA9IHRoaXMuYWRqdXN0U2xpZGVyT3B0aW9uc0Zyb21WYWx1ZXMoIHNsaWRlck9wdGlvbnMsIHZhbHVlcyApO1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdHNsaWRlck9wdGlvbnMgPSB0aGlzLmFkanVzdFNsaWRlck9wdGlvbnNGcm9tUmFuZ2VQYXJhbWV0ZXJzKCBzbGlkZXJPcHRpb25zLCBtaW5WYWx1ZSwgbWF4VmFsdWUsIHByZWNpc2lvbiApO1xuXHRcdH1cblxuXHRcdHN3aXRjaCggdGhpcy5vcHRpb25zWyAnc2xpZGVycycgXSApIHtcblxuXHRcdFx0Y2FzZSBcIm1pblwiOlxuXG5cdFx0XHRcdHRoaXMubW9kZSA9IHRoaXMuTU9ERV9NSU47XG5cdFx0XHRcdHNsaWRlck9wdGlvbnMudHlwZSA9ICdzaW5nbGUnO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSBcIm1heFwiOlxuXG5cdFx0XHRcdHRoaXMubW9kZSA9IHRoaXMuTU9ERV9NQVg7XG5cdFx0XHRcdHNsaWRlck9wdGlvbnMuZnJvbSA9IHNsaWRlck9wdGlvbnMudG87XG5cdFx0XHRcdHNsaWRlck9wdGlvbnMudHlwZSA9ICdzaW5nbGUnO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSBcInNlbGVjdFwiOlxuXG5cdFx0XHRcdHRoaXMubW9kZSA9IHRoaXMuTU9ERV9TRUxFQ1Q7XG5cdFx0XHRcdG1heFZhbHVlID0gbWluVmFsdWU7XG5cdFx0XHRcdHNsaWRlck9wdGlvbnMudHlwZSA9ICdzaW5nbGUnO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0ZGVmYXVsdDogLy8gPT0gY2FzZSBcInJhbmdlXCJcblxuXHRcdFx0XHR0aGlzLm1vZGUgPSB0aGlzLk1PREVfUkFOR0U7XG5cdFx0XHRcdHNsaWRlck9wdGlvbnMudHlwZSA9ICdkb3VibGUnO1xuXHRcdH1cblxuXHRcdHRoaXMuYnVpbGRGaWx0ZXJDb250cm9scyggc2xpZGVyT3B0aW9ucyApO1xuXG5cdFx0dGhpcy5maWx0ZXJWYWx1ZUxvd2VyID0gbWluVmFsdWU7XG5cdFx0dGhpcy5maWx0ZXJWYWx1ZVVwcGVyID0gbWF4VmFsdWU7XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdHByaXZhdGUgYWRqdXN0U2xpZGVyT3B0aW9uc0Zyb21SYW5nZVBhcmFtZXRlcnMoIHNsaWRlck9wdGlvbnM6IElvblJhbmdlU2xpZGVyT3B0aW9ucywgbWluVmFsdWU6IG51bWJlciwgbWF4VmFsdWU6IG51bWJlciwgcHJlY2lzaW9uOiBudW1iZXIgKSB7XG5cblx0XHRzbGlkZXJPcHRpb25zLm1pbiA9IG1pblZhbHVlO1xuXHRcdHNsaWRlck9wdGlvbnMubWF4ID0gbWF4VmFsdWU7XG5cdFx0c2xpZGVyT3B0aW9ucy5zdGVwID0gdGhpcy5nZXRTdGVwKCBwcmVjaXNpb24gKTtcblx0XHRzbGlkZXJPcHRpb25zLmdyaWRfbnVtID0gTWF0aC5taW4oIDQsIE1hdGgucm91bmQoICggbWF4VmFsdWUgLSBtaW5WYWx1ZSApIC8gc2xpZGVyT3B0aW9ucy5zdGVwICkgKTtcblxuXHRcdHNsaWRlck9wdGlvbnMuZnJvbSA9IG1pblZhbHVlO1xuXHRcdHNsaWRlck9wdGlvbnMudG8gPSBtYXhWYWx1ZTtcblxuXHRcdHNsaWRlck9wdGlvbnMub25GaW5pc2ggPSAoIGRhdGE6IElvblJhbmdlU2xpZGVyRXZlbnQgKSA9PiB0aGlzLm9uRmlsdGVyVXBkYXRlZCggZGF0YS5mcm9tLCBkYXRhLnRvICk7XG5cblx0XHRyZXR1cm4gc2xpZGVyT3B0aW9ucztcblx0fVxuXG5cdHByaXZhdGUgYWRqdXN0U2xpZGVyT3B0aW9uc0Zyb21WYWx1ZXMoIHNsaWRlck9wdGlvbnM6IElvblJhbmdlU2xpZGVyT3B0aW9ucywgdmFsdWVzOiBudW1iZXJbXSApIHtcblxuXHRcdHNsaWRlck9wdGlvbnMudmFsdWVzID0gdmFsdWVzO1xuXG5cdFx0c2xpZGVyT3B0aW9ucy5mcm9tID0gMDtcblx0XHRzbGlkZXJPcHRpb25zLnRvID0gdmFsdWVzLmxlbmd0aCAtIDE7XG5cblx0XHRzbGlkZXJPcHRpb25zLm9uRmluaXNoID0gKCBkYXRhOiBJb25SYW5nZVNsaWRlckV2ZW50ICkgPT4gdGhpcy5vbkZpbHRlclVwZGF0ZWQoIGRhdGEuZnJvbV92YWx1ZSwgZGF0YS50b192YWx1ZSApO1xuXG5cdFx0cmV0dXJuIHNsaWRlck9wdGlvbnM7XG5cdH1cblxuXHRwcml2YXRlIGdldFJhbmdlUGFyYW1ldGVycyggdmFsdWVzOiBudW1iZXJbXSApIHtcblxuXHRcdGxldCBtaW5WYWx1ZSA9IHZhbHVlc1sgMCBdO1xuXHRcdGxldCBtYXhWYWx1ZSA9IHZhbHVlc1sgdmFsdWVzLmxlbmd0aCAtIDEgXTtcblx0XHRsZXQgcHJlY2lzaW9uOiBudW1iZXIgPSB0aGlzLmdldFByZWNpc2lvbiggbWluVmFsdWUsIG1heFZhbHVlICk7XG5cblx0XHRpZiAoICF0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkoICd2YWx1ZXMnICkgKSB7XG5cdFx0XHRtaW5WYWx1ZSA9IHRoaXMuZ2V0TWluU2xpZGVyVmFsdWUoIG1pblZhbHVlLCBwcmVjaXNpb24gKTtcblx0XHRcdG1heFZhbHVlID0gdGhpcy5nZXRNYXhTbGlkZXJWYWx1ZSggbWF4VmFsdWUsIHByZWNpc2lvbiApO1xuXHRcdH1cblxuXHRcdHJldHVybiB7IG1pblZhbHVlLCBtYXhWYWx1ZSwgcHJlY2lzaW9uIH07XG5cdH1cblxuXHRwcml2YXRlIGdldFZhbHVlcygpOiBudW1iZXJbXSB7XG5cdFx0bGV0IHZhbHVlczogbnVtYmVyW107XG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuaGFzT3duUHJvcGVydHkoICd2YWx1ZXMnICkgJiYgdGhpcy5vcHRpb25zWyAndmFsdWVzJyBdWzBdICE9PSAnYXV0bycgKSB7XG5cdFx0XHR2YWx1ZXMgPSAgdGhpcy5vcHRpb25zWyAndmFsdWVzJyBdXG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhbHVlcyA9ICB0aGlzLmdldFNvcnRlZFZhbHVlcygpO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWVzLmxlbmd0aCA9PT0gMCApIHtcblx0XHRcdHZhbHVlcyA9IFsgMCwgMCBdO1xuXHRcdH0gZWxzZSBpZiAoIHZhbHVlcy5sZW5ndGggPT09IDEgKSB7XG5cdFx0XHR2YWx1ZXMucHVzaCggdmFsdWVzWyAwIF0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdmFsdWVzO1xuXHR9XG5cblx0cHJpdmF0ZSBidWlsZEZpbHRlckNvbnRyb2xzKCBzbGlkZXJPcHRpb25zOiBJb25SYW5nZVNsaWRlck9wdGlvbnMgKSB7XG5cblx0XHRsZXQgZmlsdGVyQ2xhc3NOYW1lczogYW55ID0ge307XG5cdFx0ZmlsdGVyQ2xhc3NOYW1lc1sgdGhpcy5NT0RFX01JTi50b1N0cmluZygpIF0gPSBcIm1vZGUtbWluXCI7XG5cdFx0ZmlsdGVyQ2xhc3NOYW1lc1sgdGhpcy5NT0RFX01BWCBdID0gXCJtb2RlLW1heFwiO1xuXHRcdGZpbHRlckNsYXNzTmFtZXNbIHRoaXMuTU9ERV9SQU5HRSBdID0gXCJtb2RlLXJhbmdlXCI7XG5cdFx0ZmlsdGVyQ2xhc3NOYW1lc1sgdGhpcy5NT0RFX1NFTEVDVCBdID0gXCJtb2RlLXNlbGVjdFwiO1xuXG5cdFx0bGV0IGZpbHRlcmNvbnRyb2xzID0gdGhpcy5idWlsZEVtcHR5Q29udHJvbCgpO1xuXG5cdFx0bGV0IHNsaWRlciA9ICQoICc8aW5wdXQgdHlwZT1cInRleHRcIiB2YWx1ZT1cIlwiIC8+JyApO1xuXHRcdGxldCBzbGlkZXJDb250YWluZXIgPSAkKCBgPGRpdiBjbGFzcz1cImZpbHRlcmVkLW51bWJlci1zbGlkZXIgJHtmaWx0ZXJDbGFzc05hbWVzWyB0aGlzLm1vZGUgXX1cIiAvPmAgKS5hcHBlbmQoIHNsaWRlciApO1xuXHRcdGZpbHRlcmNvbnRyb2xzLmFwcGVuZCggc2xpZGVyQ29udGFpbmVyICk7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ2NhcHRpb24nICkgKSB7XG5cdFx0XHRsZXQgY2FwdGlvbiA9IGA8ZGl2IGNsYXNzPVwiZmlsdGVyZWQtbnVtYmVyLWNhcHRpb25cIj4ke3RoaXMub3B0aW9uc1sgJ2NhcHRpb24nIF19PC9kaXY+YDtcblx0XHRcdGZpbHRlcmNvbnRyb2xzLmFwcGVuZCggY2FwdGlvbiApO1xuXHRcdH1cblxuXHRcdG13LmxvYWRlci51c2luZyggJ2V4dC5zcmYuZmlsdGVyZWQuc2xpZGVyJyApLnRoZW4oICgpID0+IHNsaWRlci5pb25SYW5nZVNsaWRlciggc2xpZGVyT3B0aW9ucyApICk7XG5cdH1cblxuXHRwcml2YXRlIGdldE1pblNsaWRlclZhbHVlKCBtaW5WYWx1ZTogbnVtYmVyLCBwcmVjaXNpb246IG51bWJlciApIHtcblx0XHRsZXQgcmVxdWVzdGVkTWluID0gdGhpcy5vcHRpb25zWyAnbWluJyBdO1xuXG5cdFx0aWYgKCByZXF1ZXN0ZWRNaW4gPT09IHVuZGVmaW5lZCB8fCBpc05hTiggTnVtYmVyKCByZXF1ZXN0ZWRNaW4gKSApICkge1xuXHRcdFx0cmV0dXJuIE1hdGguZmxvb3IoIG1pblZhbHVlIC8gcHJlY2lzaW9uICkgKiBwcmVjaXNpb247XG5cdFx0fVxuXG5cdFx0cmV0dXJuIE1hdGgubWluKCByZXF1ZXN0ZWRNaW4sIG1pblZhbHVlICk7XG5cdH1cblxuXHRwcml2YXRlIGdldE1heFNsaWRlclZhbHVlKCBtYXhWYWx1ZTogbnVtYmVyLCBwcmVjaXNpb246IG51bWJlciApIHtcblx0XHRsZXQgcmVxdWVzdGVkTWF4ID0gdGhpcy5vcHRpb25zWyAnbWF4JyBdO1xuXG5cdFx0aWYgKCByZXF1ZXN0ZWRNYXggPT09IHVuZGVmaW5lZCB8fCBpc05hTiggTnVtYmVyKCByZXF1ZXN0ZWRNYXggKSApICkge1xuXHRcdFx0cmV0dXJuIE1hdGguY2VpbCggbWF4VmFsdWUgLyBwcmVjaXNpb24gKSAqIHByZWNpc2lvbjtcblx0XHR9XG5cblx0XHRyZXR1cm4gTWF0aC5tYXgoIHJlcXVlc3RlZE1heCwgbWF4VmFsdWUgKTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0UHJlY2lzaW9uKCBtaW5WYWx1ZTogbnVtYmVyLCBtYXhWYWx1ZTogbnVtYmVyICk6IG51bWJlciB7XG5cdFx0aWYgKCBtYXhWYWx1ZSAtIG1pblZhbHVlID4gMCApIHtcblx0XHRcdHJldHVybiAxMCAqKiAoIE1hdGguZmxvb3IoIE1hdGgubG9nKCBtYXhWYWx1ZSAtIG1pblZhbHVlICkgKiBNYXRoLkxPRzEwRSApIC0gMSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXR1cm4gMTtcblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIGdldFN0ZXAoIHByZWNpc2lvbjogbnVtYmVyICk6IG51bWJlciB7XG5cblx0XHRsZXQgc3RlcCA9IHRoaXMub3B0aW9uc1sgJ3N0ZXAnIF07XG5cblx0XHRpZiAoIHN0ZXAgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0c3RlcCA9IE51bWJlciggc3RlcCApO1xuXG5cdFx0XHRpZiAoICFpc05hTiggc3RlcCApICkge1xuXHRcdFx0XHRyZXR1cm4gc3RlcDtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gcHJlY2lzaW9uIC8gMTA7XG5cdH1cblxuXHRwcml2YXRlIGdldFJhbmdlRnJvbVZhbHVlcygpOiBbIG51bWJlciwgbnVtYmVyIF0ge1xuXG5cdFx0bGV0IHJvd3MgPSB0aGlzLmNvbnRyb2xsZXIuZ2V0RGF0YSgpO1xuXHRcdGxldCBtaW4gPSBJbmZpbml0eTtcblx0XHRsZXQgbWF4ID0gLUluZmluaXR5O1xuXG5cdFx0Zm9yICggbGV0IHJvd0lkIGluIHJvd3MgKSB7XG5cblx0XHRcdGlmICggcm93c1sgcm93SWQgXS5kYXRhLmhhc093blByb3BlcnR5KCB0aGlzLmZpbHRlcklkICkgKSB7XG5cdFx0XHRcdGxldCB2YWx1ZXM6IG51bWJlcltdID0gcm93c1sgcm93SWQgXS5kYXRhWyB0aGlzLmZpbHRlcklkIF0udmFsdWVzO1xuXHRcdFx0XHRtaW4gPSBNYXRoLm1pbiggbWluLCAuLi52YWx1ZXMgKTtcblx0XHRcdFx0bWF4ID0gTWF0aC5tYXgoIG1heCwgLi4udmFsdWVzICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIFsgbWluLCBtYXggXTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0U29ydGVkVmFsdWVzKCk6IG51bWJlcltdIHtcblxuXHRcdGxldCB2YWx1ZUFycmF5OiBudW1iZXJbXSA9IFtdO1xuXHRcdGxldCByb3dzID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKTtcblxuXHRcdGZvciAoIGxldCByb3dJZCBpbiByb3dzICkge1xuXG5cdFx0XHRsZXQgY2VsbHMgPSByb3dzWyByb3dJZCBdLmRhdGE7XG5cblx0XHRcdGlmICggY2VsbHMuaGFzT3duUHJvcGVydHkoIHRoaXMuZmlsdGVySWQgKSApIHtcblxuXHRcdFx0XHRsZXQgdmFsdWVzID0gY2VsbHNbIHRoaXMuZmlsdGVySWQgXS52YWx1ZXM7XG5cblx0XHRcdFx0Zm9yICggbGV0IHZhbHVlSWQgaW4gdmFsdWVzICkge1xuXG5cdFx0XHRcdFx0bGV0IHZhbHVlID0gTnVtYmVyKCB2YWx1ZXNbIHZhbHVlSWQgXSApO1xuXG5cdFx0XHRcdFx0aWYgKCB2YWx1ZUFycmF5LmluZGV4T2YoIHZhbHVlICkgPT09IC0xICkge1xuXHRcdFx0XHRcdFx0dmFsdWVBcnJheS5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB2YWx1ZUFycmF5LnNvcnQoICggYTogYW55LCBiOiBhbnkgKSA9PiBhIC0gYiApO1xuXHR9XG5cblx0cHVibGljIG9uRmlsdGVyVXBkYXRlZCggZnJvbTogbnVtYmVyLCB0bzogbnVtYmVyICkge1xuXG5cdFx0c3dpdGNoICggdGhpcy5tb2RlICkge1xuXG5cdFx0XHRjYXNlIHRoaXMuTU9ERV9NSU46XG5cblx0XHRcdFx0dGhpcy5maWx0ZXJWYWx1ZUxvd2VyID0gZnJvbTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdGNhc2UgdGhpcy5NT0RFX01BWDpcblxuXHRcdFx0XHR0aGlzLmZpbHRlclZhbHVlVXBwZXIgPSBmcm9tO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0Y2FzZSB0aGlzLk1PREVfU0VMRUNUOlxuXG5cdFx0XHRcdHRoaXMuZmlsdGVyVmFsdWVMb3dlciA9IGZyb207XG5cdFx0XHRcdHRoaXMuZmlsdGVyVmFsdWVVcHBlciA9IGZyb207XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRkZWZhdWx0OiAvLyBjYXNlIHRoaXMuTU9ERV9SQU5HRTpcblxuXHRcdFx0XHR0aGlzLmZpbHRlclZhbHVlTG93ZXIgPSBmcm9tO1xuXHRcdFx0XHR0aGlzLmZpbHRlclZhbHVlVXBwZXIgPSB0bztcblx0XHR9XG5cblx0XHR0aGlzLmNvbnRyb2xsZXIub25GaWx0ZXJVcGRhdGVkKCB0aGlzLmdldElkKCkgKTtcblx0fVxuXG5cdHB1YmxpYyBpc1Zpc2libGUoIHJvd0lkOiBzdHJpbmcgKTogYm9vbGVhbiB7XG5cdFx0bGV0IHJvd2RhdGEgPSB0aGlzLmNvbnRyb2xsZXIuZ2V0RGF0YSgpWyByb3dJZCBdLmRhdGE7XG5cblx0XHRpZiAoIHJvd2RhdGEuaGFzT3duUHJvcGVydHkoIHRoaXMuZmlsdGVySWQgKSAmJiByb3dkYXRhWyB0aGlzLmZpbHRlcklkIF0udmFsdWVzLmxlbmd0aCA+IDAgKSB7XG5cblx0XHRcdGZvciAoIGxldCB2YWx1ZSBvZiByb3dkYXRhWyB0aGlzLmZpbHRlcklkIF0udmFsdWVzICkge1xuXHRcdFx0XHRpZiAoIHZhbHVlID49IHRoaXMuZmlsdGVyVmFsdWVMb3dlciAmJiB2YWx1ZSA8PSB0aGlzLmZpbHRlclZhbHVlVXBwZXIgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiBzdXBlci5pc1Zpc2libGUoIHJvd0lkICk7XG5cdH1cblxufVxuIiwiaW1wb3J0IHsgRmlsdGVyIH0gZnJvbSBcIi4vRmlsdGVyXCI7XG5pbXBvcnQgeyBJZFRleHRQYWlyIH0gZnJvbSBcInNlbGVjdDJcIjtcblxuZGVjbGFyZSBsZXQgbXc6IGFueTtcblxuZXhwb3J0IGNsYXNzIFZhbHVlRmlsdGVyIGV4dGVuZHMgRmlsdGVyIHtcblxuXHRwcml2YXRlIHZhbHVlczogYW55ID0ge307XG5cdHByaXZhdGUgdmlzaWJsZVZhbHVlczogc3RyaW5nW10gPSBbXTtcblxuXHRwcml2YXRlIF91c2VPciA9IHRydWU7XG5cblx0cHVibGljIGluaXQoKSB7XG5cdFx0dGhpcy52YWx1ZXMgPSB0aGlzLmdldFNvcnRlZFZhbHVlcygpO1xuXHRcdHRoaXMuYnVpbGRDb250cm9sKCk7XG5cdH1cblxuXHRwdWJsaWMgdXNlT3IoIHVzZU9yOiBib29sZWFuICkge1xuXHRcdHRoaXMuX3VzZU9yID0gdXNlT3I7XG5cdFx0dGhpcy5jb250cm9sbGVyLm9uRmlsdGVyVXBkYXRlZCggdGhpcy5nZXRJZCgpICk7XG5cdH1cblxuXHRwcml2YXRlIGdldFNvcnRlZFZhbHVlcygpOiBhbnkge1xuXG5cdFx0LyoqIE1hcCBvZiB2YWx1ZSA9PiBsYWJlbCBkaXN0aW5jdCB2YWx1ZXMgKi9cblx0XHRsZXQgZGlzdGluY3RWYWx1ZXM6IGFueSA9IHt9O1xuXHRcdC8qKiBNYXAgb2YgdmFsdWUgPT4gc29ydCB2YWx1ZSBkaXN0aW5jdCB2YWx1ZXMgKi9cblx0XHRsZXQgZGlzdGluY3RTb3J0VmFsdWVzOiBhbnkgPSB7fTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAndmFsdWVzJyApICkge1xuXG5cdFx0XHRyZXR1cm4gdGhpcy5vcHRpb25zWyAndmFsdWVzJyBdLm1hcChcblx0XHRcdFx0KCBpdGVtOiBzdHJpbmcgKSA9PiB7XG5cdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdHByaW50b3V0VmFsdWU6IGl0ZW0sXG5cdFx0XHRcdFx0XHRmb3JtYXR0ZWRWYWx1ZTogaXRlbVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblx0XHRcdCk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gYnVpbGQgZmlsdGVyIHZhbHVlcyBmcm9tIGF2YWlsYWJsZSB2YWx1ZXMgaW4gcmVzdWx0IHNldFxuXHRcdFx0bGV0IGRhdGEgPSB0aGlzLmNvbnRyb2xsZXIuZ2V0RGF0YSgpO1xuXHRcdFx0bGV0IHNvcnRlZEVudHJpZXM6IGFueVtdID0gW107XG5cdFx0XHRmb3IgKCBsZXQgaWQgaW4gZGF0YSApIHtcblxuXHRcdFx0XHRsZXQgcHJpbnRvdXRWYWx1ZXM6IGFueSA9IGRhdGFbIGlkIF1bICdwcmludG91dHMnIF1bIHRoaXMucHJpbnRyZXF1ZXN0SWQgXVsgJ3ZhbHVlcycgXTtcblx0XHRcdFx0bGV0IHByaW50b3V0Rm9ybWF0dGVkVmFsdWVzID0gZGF0YVsgaWQgXVsgJ3ByaW50b3V0cycgXVsgdGhpcy5wcmludHJlcXVlc3RJZCBdWyAnZm9ybWF0dGVkIHZhbHVlcycgXTtcblx0XHRcdFx0bGV0IHByaW50b3V0U29ydFZhbHVlczogYW55ID0gZGF0YVsgaWQgXVsgJ3ByaW50b3V0cycgXVsgdGhpcy5wcmludHJlcXVlc3RJZCBdWyAnc29ydCB2YWx1ZXMnIF07XG5cblx0XHRcdFx0Zm9yICggbGV0IGkgaW4gcHJpbnRvdXRWYWx1ZXMgKSB7XG5cdFx0XHRcdFx0bGV0IHByaW50b3V0Rm9ybWF0dGVkVmFsdWUgPSBwcmludG91dEZvcm1hdHRlZFZhbHVlc1sgaSBdO1xuXG5cdFx0XHRcdFx0aWYgKCBwcmludG91dEZvcm1hdHRlZFZhbHVlLmluZGV4T2YoICc8YScgKSA+IC0xICkge1xuXHRcdFx0XHRcdFx0cHJpbnRvdXRGb3JtYXR0ZWRWYWx1ZSA9IC88YS4qPiguKj8pPFxcL2E+Ly5leGVjKCBwcmludG91dEZvcm1hdHRlZFZhbHVlIClbIDEgXTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRkaXN0aW5jdFZhbHVlc1sgcHJpbnRvdXRWYWx1ZXNbIGkgXSBdID0gcHJpbnRvdXRGb3JtYXR0ZWRWYWx1ZTtcblx0XHRcdFx0XHRkaXN0aW5jdFNvcnRWYWx1ZXNbIHByaW50b3V0VmFsdWVzWyBpIF0gXSA9IHByaW50b3V0U29ydFZhbHVlc1sgaSBdO1xuXHRcdFx0XHR9XG5cblx0XHRcdH1cblxuXHRcdFx0Zm9yICggbGV0IHByaW50b3V0VmFsdWUgaW4gZGlzdGluY3RTb3J0VmFsdWVzICkge1xuXHRcdFx0XHRzb3J0ZWRFbnRyaWVzLnB1c2goIHtcblx0XHRcdFx0XHRwcmludG91dFZhbHVlOiBwcmludG91dFZhbHVlLFxuXHRcdFx0XHRcdHNvcnRWYWx1ZTogZGlzdGluY3RTb3J0VmFsdWVzWyBwcmludG91dFZhbHVlIF0sXG5cdFx0XHRcdFx0Zm9ybWF0dGVkVmFsdWU6IGRpc3RpbmN0VmFsdWVzWyBwcmludG91dFZhbHVlIF1cblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRzb3J0ZWRFbnRyaWVzLnNvcnQoXG5cdFx0XHRcdCggYTogYW55LCBiOiBhbnkgKSA9PiB7XG5cdFx0XHRcdFx0cmV0dXJuIGEuc29ydFZhbHVlLmxvY2FsZUNvbXBhcmUoIGIuc29ydFZhbHVlICk7XG5cdFx0XHRcdH0gKTtcblx0XHRcdHJldHVybiBzb3J0ZWRFbnRyaWVzO1xuXG5cdFx0fVxuXG5cdH1cblxuXHRwcml2YXRlIGJ1aWxkQ29udHJvbCgpIHtcblxuXHRcdGxldCBmaWx0ZXJjb250cm9scyA9IHRoaXMuYnVpbGRFbXB0eUNvbnRyb2woKTtcblxuXHRcdGZpbHRlcmNvbnRyb2xzID0gdGhpcy5hZGRDb250cm9sRm9yU3dpdGNoZXMoIGZpbHRlcmNvbnRyb2xzICk7XG5cblx0XHRsZXQgbWF4Q2hlY2tib3hlcyA9IHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ21heCBjaGVja2JveGVzJyApID8gdGhpcy5vcHRpb25zWyAnbWF4IGNoZWNrYm94ZXMnIF0gOiA1O1xuXG5cdFx0aWYgKCB0aGlzLnZhbHVlcy5sZW5ndGggPiBtYXhDaGVja2JveGVzICkge1xuXHRcdFx0ZmlsdGVyY29udHJvbHMuYXBwZW5kKCB0aGlzLmdldFNlbGVjdGVkMkNvbnRyb2woKSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRmaWx0ZXJjb250cm9scy5hcHBlbmQoIHRoaXMuZ2V0Q2hlY2tib3hlc0NvbnRyb2woKSApO1xuXHRcdH1cblxuXHR9XG5cblx0cHJpdmF0ZSBnZXRDaGVja2JveGVzQ29udHJvbCgpIHtcblxuXHRcdGxldCBjaGVja2JveGVzID0gJCggJzxkaXYgY2xhc3M9XCJmaWx0ZXJlZC12YWx1ZS1jaGVja2JveGVzXCIgc3R5bGU9XCJ3aWR0aDogMTAwJTtcIj4nICk7XG5cblx0XHQvLyBpbnNlcnQgb3B0aW9ucyAoY2hlY2tib3hlcyBhbmQgbGFiZWxzKVxuXHRcdGZvciAoIGxldCB2YWx1ZSBvZiB0aGlzLnZhbHVlcyApIHtcblx0XHRcdGNoZWNrYm94ZXMuYXBwZW5kKCBgPGRpdiBjbGFzcz1cImZpbHRlcmVkLXZhbHVlLW9wdGlvblwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgdmFsdWU9XCIke3ZhbHVlLnByaW50b3V0VmFsdWV9XCIgPjxkaXYgY2xhc3M9XCJmaWx0ZXJlZC12YWx1ZS1vcHRpb24tbGFiZWxcIj4ke3ZhbHVlLmZvcm1hdHRlZFZhbHVlIHx8IHZhbHVlLnByaW50b3V0VmFsdWV9PC9kaXY+PC9sYWJlbD48L2Rpdj5gICk7XG5cdFx0fVxuXG5cdFx0Ly8gYXR0YWNoIGV2ZW50IGhhbmRsZXJcblx0XHRjaGVja2JveGVzXG5cdFx0Lm9uKCAnY2hhbmdlJywgJzpjaGVja2JveCcsICggZXZlbnRPYmplY3Q6IEpRdWVyeUV2ZW50T2JqZWN0ICkgPT4ge1xuXHRcdFx0bGV0IGNoZWNrYm94RWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PiBldmVudE9iamVjdC5jdXJyZW50VGFyZ2V0O1xuXHRcdFx0dGhpcy5vbkZpbHRlclVwZGF0ZWQoIGNoZWNrYm94RWxlbWVudC52YWx1ZSwgY2hlY2tib3hFbGVtZW50LmNoZWNrZWQgKTtcblx0XHR9ICk7XG5cblx0XHRyZXR1cm4gY2hlY2tib3hlcztcblx0fVxuXG5cdHByaXZhdGUgZ2V0U2VsZWN0ZWQyQ29udHJvbCgpIHtcblxuXHRcdGxldCBzZWxlY3QgPSAkKCAnPHNlbGVjdCBjbGFzcz1cImZpbHRlcmVkLXZhbHVlLXNlbGVjdFwiIHN0eWxlPVwid2lkdGg6IDEwMCU7XCI+JyApO1xuXG5cdFx0bGV0IGRhdGE6IElkVGV4dFBhaXJbXSA9IFtdO1xuXG5cdFx0Ly8gaW5zZXJ0IG9wdGlvbnMgKGNoZWNrYm94ZXMgYW5kIGxhYmVscykgYW5kIGF0dGFjaCBldmVudCBoYW5kbGVyc1xuXHRcdGZvciAoIGxldCB2YWx1ZSBvZiB0aGlzLnZhbHVlcyApIHtcblx0XHRcdC8vIFRyeSB0byBnZXQgbGFiZWwsIGlmIG5vdCBmYWxsIGJhY2sgdG8gdmFsdWUgaWRcblx0XHRcdGxldCBsYWJlbCA9IHZhbHVlLmZvcm1hdHRlZFZhbHVlIHx8IHZhbHVlLnByaW50b3V0VmFsdWU7XG5cdFx0XHRkYXRhLnB1c2goIHsgaWQ6IHZhbHVlLnByaW50b3V0VmFsdWUsIHRleHQ6IGxhYmVsIH0gKTtcblxuXHRcdH1cblxuXHRcdG13LmxvYWRlci51c2luZyggJ2V4dC5zcmYuZmlsdGVyZWQudmFsdWUtZmlsdGVyLnNlbGVjdCcgKS50aGVuKCAoKSA9PiB7XG5cblx0XHRcdHNlbGVjdC5zZWxlY3QyKCB7XG5cdFx0XHRcdG11bHRpcGxlOiB0cnVlLFxuXHRcdFx0XHRwbGFjZWhvbGRlcjogbXcubWVzc2FnZSggJ3NyZi1maWx0ZXJlZC12YWx1ZS1maWx0ZXItcGxhY2Vob2xkZXInICkudGV4dCgpLFxuXHRcdFx0XHRkYXRhOiBkYXRhXG5cdFx0XHR9ICk7XG5cblx0XHRcdHNlbGVjdC5vbiggXCJzZWxlY3QyOnNlbGVjdFwiLCAoIGU6IGFueSApID0+IHtcblx0XHRcdFx0dGhpcy5vbkZpbHRlclVwZGF0ZWQoIGUucGFyYW1zLmRhdGEuaWQsIHRydWUgKTtcblx0XHRcdH0gKTtcblxuXHRcdFx0c2VsZWN0Lm9uKCBcInNlbGVjdDI6dW5zZWxlY3RcIiwgKCBlOiBhbnkgKSA9PiB7XG5cdFx0XHRcdHRoaXMub25GaWx0ZXJVcGRhdGVkKCBlLnBhcmFtcy5kYXRhLmlkLCBmYWxzZSApO1xuXHRcdFx0fSApO1xuXG5cdFx0fSApO1xuXG5cdFx0cmV0dXJuIHNlbGVjdDtcblx0fVxuXG5cdHByaXZhdGUgYWRkQ29udHJvbEZvclN3aXRjaGVzKCBmaWx0ZXJjb250cm9sczogSlF1ZXJ5ICk6IEpRdWVyeSB7XG5cdFx0Ly8gaW5zZXJ0IHN3aXRjaGVzXG5cdFx0bGV0IHN3aXRjaGVzID0gdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnc3dpdGNoZXMnICkgPyB0aGlzLm9wdGlvbnNbICdzd2l0Y2hlcycgXSA6IHVuZGVmaW5lZDtcblxuXHRcdGlmICggc3dpdGNoZXMgIT09IHVuZGVmaW5lZCAmJiAkLmluQXJyYXkoICdhbmQgb3InLCBzd2l0Y2hlcyApID49IDAgKSB7XG5cblx0XHRcdGxldCBzd2l0Y2hDb250cm9scyA9ICQoICc8ZGl2IGNsYXNzPVwiZmlsdGVyZWQtdmFsdWUtc3dpdGNoZXNcIj4nICk7XG5cblx0XHRcdGxldCBhbmRvckNvbnRyb2wgPSAkKCAnPGRpdiBjbGFzcz1cImZpbHRlcmVkLXZhbHVlLWFuZG9yXCI+JyApO1xuXG5cdFx0XHRsZXQgb3JDb250cm9sID0gdGhpcy5nZXRSYWRpb0NvbnRyb2woICdvcicsIHRydWUgKTtcblx0XHRcdGxldCBhbmRDb250cm9sID0gdGhpcy5nZXRSYWRpb0NvbnRyb2woICdhbmQnICk7XG5cblx0XHRcdGFuZG9yQ29udHJvbFxuXHRcdFx0LmFwcGVuZCggb3JDb250cm9sIClcblx0XHRcdC5hcHBlbmQoIGFuZENvbnRyb2wgKVxuXHRcdFx0LmFwcGVuZFRvKCBzd2l0Y2hDb250cm9scyApO1xuXG5cdFx0XHRhbmRvckNvbnRyb2xcblx0XHRcdC5maW5kKCAnaW5wdXQnIClcblx0XHRcdC5vbiggJ2NoYW5nZScsIHVuZGVmaW5lZCwgeyAnZmlsdGVyJzogdGhpcyB9LCAoIGV2ZW50T2JqZWN0OiBKUXVlcnlFdmVudE9iamVjdCApID0+XG5cdFx0XHRcdGV2ZW50T2JqZWN0LmRhdGEuZmlsdGVyLnVzZU9yKCBldmVudE9iamVjdC50YXJnZXQuZ2V0QXR0cmlidXRlKCAndmFsdWUnICkgPT09ICdvcicgKVxuXHRcdFx0KTtcblxuXG5cdFx0XHRmaWx0ZXJjb250cm9scy5hcHBlbmQoIHN3aXRjaENvbnRyb2xzICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZpbHRlcmNvbnRyb2xzO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRSYWRpb0NvbnRyb2woIHR5cGU6IHN0cmluZywgaXNDaGVja2VkOiBib29sZWFuID0gZmFsc2UgKSB7XG5cblx0XHRsZXQgY2hlY2tlZEF0dHIgPSBpc0NoZWNrZWQ/J2NoZWNrZWQnOicnO1xuXHRcdGxldCBsYWJlbFRleHQgPSBtdy5tZXNzYWdlKCAnc3JmLWZpbHRlcmVkLXZhbHVlLWZpbHRlci0nICsgdHlwZSApLnRleHQoKTtcblxuXHRcdGxldCBjb250cm9sVGV4dCA9XG5cdFx0XHRgPGxhYmVsIGZvcj1cImZpbHRlcmVkLXZhbHVlLSR7dHlwZX0tJHt0aGlzLnByaW50cmVxdWVzdElkfVwiPmAgK1xuXHRcdFx0YDxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwiZmlsdGVyZWQtdmFsdWUtJHt0aGlzLnByaW50cmVxdWVzdElkfVwiICBjbGFzcz1cImZpbHRlcmVkLXZhbHVlLSR7dHlwZX1cIiBpZD1cImZpbHRlcmVkLXZhbHVlLSR7dHlwZX0tJHt0aGlzLnByaW50cmVxdWVzdElkfVwiIHZhbHVlPVwiJHt0eXBlfVwiICR7Y2hlY2tlZEF0dHJ9PmAgK1xuXHRcdFx0YCR7bGFiZWxUZXh0fTwvbGFiZWw+YDtcblxuXHRcdHJldHVybiAkKCBjb250cm9sVGV4dCApO1xuXHR9XG5cblx0cHVibGljIGlzVmlzaWJsZSggcm93SWQ6IHN0cmluZyApOiBib29sZWFuIHtcblxuXHRcdGlmICggdGhpcy52aXNpYmxlVmFsdWVzLmxlbmd0aCA9PT0gMCApIHtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdGxldCB2YWx1ZXM6IHN0cmluZ1tdID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKVsgcm93SWQgXS5wcmludG91dHNbIHRoaXMucHJpbnRyZXF1ZXN0SWQgXS52YWx1ZXM7XG5cblx0XHRpZiAoIHZhbHVlcy5sZW5ndGggPT09IDAgKSB7XG5cdFx0XHRyZXR1cm4gc3VwZXIuaXNWaXNpYmxlKCByb3dJZCApO1xuXHRcdH1cblxuXG5cdFx0aWYgKCB0aGlzLl91c2VPciApIHtcblx0XHRcdGZvciAoIGxldCBleHBlY3RlZFZhbHVlIG9mIHRoaXMudmlzaWJsZVZhbHVlcyApIHtcblx0XHRcdFx0aWYgKCB2YWx1ZXMuaW5kZXhPZiggZXhwZWN0ZWRWYWx1ZSApID49IDAgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Zm9yICggbGV0IGV4cGVjdGVkVmFsdWUgb2YgdGhpcy52aXNpYmxlVmFsdWVzICkge1xuXHRcdFx0XHRpZiAoIHZhbHVlcy5pbmRleE9mKCBleHBlY3RlZFZhbHVlICkgPCAwICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXHR9XG5cblx0cHVibGljIG9uRmlsdGVyVXBkYXRlZCggdmFsdWU6IHN0cmluZywgaXNDaGVja2VkOiBib29sZWFuICkge1xuXHRcdGxldCBpbmRleCA9IHRoaXMudmlzaWJsZVZhbHVlcy5pbmRleE9mKCB2YWx1ZSApO1xuXG5cdFx0aWYgKCBpc0NoZWNrZWQgJiYgaW5kZXggPT09IC0xICkge1xuXHRcdFx0dGhpcy52aXNpYmxlVmFsdWVzLnB1c2goIHZhbHVlICk7XG5cdFx0fSBlbHNlIGlmICggIWlzQ2hlY2tlZCAmJiBpbmRleCA+PSAwICkge1xuXHRcdFx0dGhpcy52aXNpYmxlVmFsdWVzLnNwbGljZSggaW5kZXgsIDEgKTtcblx0XHR9XG5cblx0XHR0aGlzLmNvbnRyb2xsZXIub25GaWx0ZXJVcGRhdGVkKCB0aGlzLmdldElkKCkgKTtcblx0fVxufVxuIiwiaW1wb3J0IHsgT3B0aW9ucyB9IGZyb20gXCIuLi90eXBlc1wiO1xuaW1wb3J0IHsgQ29udHJvbGxlciB9IGZyb20gXCIuL0NvbnRyb2xsZXJcIjtcbmltcG9ydCB7IFZpZXdTZWxlY3RvciB9IGZyb20gXCIuL1ZpZXdTZWxlY3RvclwiO1xuaW1wb3J0IHsgVmlldyB9IGZyb20gXCIuL1ZpZXcvVmlld1wiO1xuaW1wb3J0IHsgTGlzdFZpZXcgfSBmcm9tIFwiLi9WaWV3L0xpc3RWaWV3XCI7XG5pbXBvcnQgeyBUYWJsZVZpZXcgfSBmcm9tIFwiLi9WaWV3L1RhYmxlVmlld1wiO1xuaW1wb3J0IHsgTWFwVmlldyB9IGZyb20gXCIuL1ZpZXcvTWFwVmlld1wiO1xuaW1wb3J0IHsgQ2FsZW5kYXJWaWV3IH0gZnJvbSBcIi4vVmlldy9DYWxlbmRhclZpZXdcIjtcbmltcG9ydCB7IEZpbHRlciB9IGZyb20gXCIuL0ZpbHRlci9GaWx0ZXJcIjtcbmltcG9ydCB7IFZhbHVlRmlsdGVyIH0gZnJvbSBcIi4vRmlsdGVyL1ZhbHVlRmlsdGVyXCI7XG5pbXBvcnQgeyBEaXN0YW5jZUZpbHRlciB9IGZyb20gXCIuL0ZpbHRlci9EaXN0YW5jZUZpbHRlclwiO1xuaW1wb3J0IHsgTnVtYmVyRmlsdGVyIH0gZnJvbSBcIi4vRmlsdGVyL051bWJlckZpbHRlclwiO1xuXG4vKipcbiAqIENlbnRyYWwgRmlsdGVyZWQgY2xhc3NcbiAqXG4gKiBGYWN0b3J5IHRvIHNldHVwIGV2ZXJ5aHRpbmcgZWxzZVxuICovXG5leHBvcnQgY2xhc3MgRmlsdGVyZWQge1xuXG5cdHByaXZhdGUgY29uZmlnOiBhbnk7XG5cdHByaXZhdGUgdGFyZ2V0OiBKUXVlcnk7XG5cblx0cHJpdmF0ZSB2aWV3VHlwZXM6IHsgW2tleTogc3RyaW5nXTogbmV3KCBpZDogc3RyaW5nLCB0YXJnZXQ6IEpRdWVyeSwgY29udHJvbGxlcjogQ29udHJvbGxlciwgb3B0aW9ucz86IGFueSApID0+IFZpZXcgfSA9IHtcblx0XHR0YWJsZTogVGFibGVWaWV3LFxuXHRcdGxpc3Q6IExpc3RWaWV3LFxuXHRcdG1hcDogTWFwVmlldyxcblx0XHRjYWxlbmRhcjogQ2FsZW5kYXJWaWV3XG5cdH07XG5cblx0cHJpdmF0ZSBmaWx0ZXJUeXBlczogeyBba2V5OiBzdHJpbmddOiBuZXcoIGlkOiBzdHJpbmcsIHRhcmdldDogSlF1ZXJ5LCBwcmludHJlcXVlc3RJZDogc3RyaW5nLCBjb250cm9sbGVyOiBDb250cm9sbGVyLCBvcHRpb25zPzogT3B0aW9ucyApID0+IEZpbHRlciB9ID0ge1xuXHRcdHZhbHVlOiBWYWx1ZUZpbHRlcixcblx0XHRkaXN0YW5jZTogRGlzdGFuY2VGaWx0ZXIsXG5cdFx0bnVtYmVyOiBOdW1iZXJGaWx0ZXJcblx0fTtcblxuXHQvKipcblx0ICpcblx0ICogQHBhcmFtIHRhcmdldFxuXHQgKiBAcGFyYW0gY29uZmlnXG5cdCAqL1xuXHRwdWJsaWMgY29uc3RydWN0b3IoIHRhcmdldDogSlF1ZXJ5LCBjb25maWc6IGFueSApIHtcblx0XHR0aGlzLmNvbmZpZyA9IGNvbmZpZztcblx0XHR0aGlzLnRhcmdldCA9IHRhcmdldDtcblx0fVxuXG5cdHB1YmxpYyBydW4oKSB7XG5cblx0XHRsZXQgY29udHJvbGxlciA9IG5ldyBDb250cm9sbGVyKCB0aGlzLnRhcmdldCwgdGhpcy5jb25maWcuZGF0YSwgdGhpcy5jb25maWcucHJpbnRyZXF1ZXN0cyApO1xuXG5cdFx0dGhpcy5hdHRhY2hGaWx0ZXJzKCBjb250cm9sbGVyLCB0aGlzLnRhcmdldC5jaGlsZHJlbiggJ2Rpdi5maWx0ZXJlZC1maWx0ZXJzJyApICk7XG5cdFx0dGhpcy5hdHRhY2hWaWV3U2VsZWN0b3IoIGNvbnRyb2xsZXIsIHRoaXMudGFyZ2V0LmZpbmQoICdkaXYuZmlsdGVyZWQtdmlld3Mtc2VsZWN0b3JzLWNvbnRhaW5lcicgKSApO1xuXHRcdHRoaXMuYXR0YWNoVmlld3MoIGNvbnRyb2xsZXIsIHRoaXMudGFyZ2V0LmZpbmQoICdkaXYuZmlsdGVyZWQtdmlld3MtY29udGFpbmVyJyApICk7XG5cblx0XHQvLyBsaWZ0LW9mZlxuXHRcdGNvbnRyb2xsZXIuc2hvdygpO1xuXG5cdH1cblxuXHRwcml2YXRlIGF0dGFjaEZpbHRlcnMoIGNvbnRyb2xsZXI6IENvbnRyb2xsZXIsIGZpbHRlcnNDb250YWluZXI6IEpRdWVyeSApIHtcblxuXHRcdGZvciAoIGxldCBwcklkIGluIHRoaXMuY29uZmlnLnByaW50cmVxdWVzdHMgKSB7XG5cblx0XHRcdGxldCBwciA9IHRoaXMuY29uZmlnLnByaW50cmVxdWVzdHNbIHBySWQgXTtcblxuXHRcdFx0aWYgKCBwci5oYXNPd25Qcm9wZXJ0eSggJ2ZpbHRlcnMnICkgKSB7XG5cblx0XHRcdFx0Zm9yICggbGV0IGZpbHRlcmlkIGluIHByLmZpbHRlcnMgKSB7XG5cblx0XHRcdFx0XHRpZiAoIHByLmZpbHRlcnMuaGFzT3duUHJvcGVydHkoIGZpbHRlcmlkICkgJiZcblx0XHRcdFx0XHRcdHByLmZpbHRlcnNbIGZpbHRlcmlkIF0uaGFzT3duUHJvcGVydHkoICd0eXBlJyApICYmXG5cdFx0XHRcdFx0XHR0aGlzLmZpbHRlclR5cGVzLmhhc093blByb3BlcnR5KCBwci5maWx0ZXJzWyBmaWx0ZXJpZCBdLnR5cGUgKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gIHRhcmdldDogSlF1ZXJ5LCBwcmludHJlcXVlc3Q6IHN0cmluZyxcblx0XHRcdFx0XHRcdC8vIGNvbnRyb2xsZXI6IENvbnRyb2xsZXIsIG9wdGlvbnM/OiBPcHRpb25zXG5cdFx0XHRcdFx0XHRsZXQgZmlsdGVyOiBGaWx0ZXIgPSBuZXcgdGhpcy5maWx0ZXJUeXBlc1sgcHIuZmlsdGVyc1sgZmlsdGVyaWQgXS50eXBlIF0oIGZpbHRlcmlkLCBmaWx0ZXJzQ29udGFpbmVyLmNoaWxkcmVuKCAnIycgKyBmaWx0ZXJpZCApLCBwcklkLCBjb250cm9sbGVyLCBwci5maWx0ZXJzWyBmaWx0ZXJpZCBdICk7XG5cblx0XHRcdFx0XHRcdGNvbnRyb2xsZXIuYXR0YWNoRmlsdGVyKCBmaWx0ZXIgKTtcblxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0fVxuXHR9XG5cblx0cHJpdmF0ZSBhdHRhY2hWaWV3U2VsZWN0b3IoIGNvbnRyb2xsZXI6IENvbnRyb2xsZXIsIHZpZXdTZWxlY3RvckNvbnRhaW5lcjogSlF1ZXJ5ICkge1xuXHRcdGxldCB2aWV3U2VsZWN0b3IgPSBuZXcgVmlld1NlbGVjdG9yKCB2aWV3U2VsZWN0b3JDb250YWluZXIsIE9iamVjdC5rZXlzKCB0aGlzLmNvbmZpZy52aWV3cyApLCBjb250cm9sbGVyICk7XG5cdFx0dmlld1NlbGVjdG9yLmluaXQoKTtcblx0fVxuXG5cdHByaXZhdGUgYXR0YWNoVmlld3MoIGNvbnRyb2xsZXI6IENvbnRyb2xsZXIsIHZpZXdzQ29udGFpbmVyOiBKUXVlcnkgKSB7XG5cblx0XHQvLyBhdHRhY2ggdmlld3Ncblx0XHRmb3IgKCBsZXQgdmlld2lkIGluIHRoaXMuY29uZmlnLnZpZXdzICkge1xuXG5cdFx0XHRsZXQgdmlld3R5cGUgPSB0aGlzLmNvbmZpZy52aWV3c1sgdmlld2lkIF1bICd0eXBlJyBdO1xuXHRcdFx0bGV0IHZpZXdIYW5kbGVyQ2xhc3MgPSB0aGlzLnZpZXdUeXBlcy5oYXNPd25Qcm9wZXJ0eSggdmlld3R5cGUgKSA/IHRoaXMudmlld1R5cGVzWyB2aWV3dHlwZSBdIDogVmlldztcblxuXHRcdFx0bGV0IHZpZXc6IFZpZXcgPSBuZXcgdmlld0hhbmRsZXJDbGFzcyggdmlld2lkLCB2aWV3c0NvbnRhaW5lci5jaGlsZHJlbiggJyMnICsgdmlld2lkICksIGNvbnRyb2xsZXIsIHRoaXMuY29uZmlnLnZpZXdzWyB2aWV3aWQgXSApO1xuXG5cdFx0XHR2aWV3LmluaXQoKTtcblxuXHRcdFx0Y29udHJvbGxlci5hdHRhY2hWaWV3KCB2aWV3aWQsIHZpZXcgKTtcblxuXHRcdH1cblx0fVxufVxuIiwiaW1wb3J0IHsgVmlldyB9IGZyb20gXCIuL1ZpZXdcIjtcbmRlY2xhcmUgbGV0IG13OiBhbnk7XG5cbmV4cG9ydCBjbGFzcyBDYWxlbmRhclZpZXcgZXh0ZW5kcyBWaWV3IHtcblxuXHRwcml2YXRlIGdldEkxOE4oKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdG1vbnRoTmFtZXM6IFsgbXcubXNnKCAnamFudWFyeScgKSwgbXcubXNnKCAnZmVicnVhcnknICksIG13Lm1zZyggJ21hcmNoJyApLFxuXHRcdFx0XHRtdy5tc2coICdhcHJpbCcgKSwgbXcubXNnKCAnbWF5X2xvbmcnICksIG13Lm1zZyggJ2p1bmUnICksXG5cdFx0XHRcdG13Lm1zZyggJ2p1bHknICksIG13Lm1zZyggJ2F1Z3VzdCcgKSwgbXcubXNnKCAnc2VwdGVtYmVyJyApLFxuXHRcdFx0XHRtdy5tc2coICdvY3RvYmVyJyApLCBtdy5tc2coICdub3ZlbWJlcicgKSwgbXcubXNnKCAnZGVjZW1iZXInIClcblx0XHRcdF0sXG5cdFx0XHRtb250aE5hbWVzU2hvcnQ6IFsgbXcubXNnKCAnamFuJyApLCBtdy5tc2coICdmZWInICksIG13Lm1zZyggJ21hcicgKSxcblx0XHRcdFx0bXcubXNnKCAnYXByJyApLCBtdy5tc2coICdtYXknICksIG13Lm1zZyggJ2p1bicgKSxcblx0XHRcdFx0bXcubXNnKCAnanVsJyApLCBtdy5tc2coICdhdWcnICksIG13Lm1zZyggJ3NlcCcgKSxcblx0XHRcdFx0bXcubXNnKCAnb2N0JyApLCBtdy5tc2coICdub3YnICksIG13Lm1zZyggJ2RlYycgKVxuXHRcdFx0XSxcblx0XHRcdGRheU5hbWVzOiBbIG13Lm1zZyggJ3N1bmRheScgKSwgbXcubXNnKCAnbW9uZGF5JyApLCBtdy5tc2coICd0dWVzZGF5JyApLFxuXHRcdFx0XHRtdy5tc2coICd3ZWRuZXNkYXknICksIG13Lm1zZyggJ3RodXJzZGF5JyApLCBtdy5tc2coICdmcmlkYXknICksIG13Lm1zZyggJ3NhdHVyZGF5JyApXG5cdFx0XHRdLFxuXHRcdFx0ZGF5TmFtZXNTaG9ydDogWyBtdy5tc2coICdzdW4nICksIG13Lm1zZyggJ21vbicgKSwgbXcubXNnKCAndHVlJyApLFxuXHRcdFx0XHRtdy5tc2coICd3ZWQnICksIG13Lm1zZyggJ3RodScgKSwgbXcubXNnKCAnZnJpJyApLCBtdy5tc2coICdzYXQnIClcblx0XHRcdF0sXG5cdFx0XHRidXR0b25UZXh0OiB7XG5cdFx0XHRcdHRvZGF5OiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1sYWJlbC10b2RheScgKSxcblx0XHRcdFx0bW9udGg6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWxhYmVsLW1vbnRoJyApLFxuXHRcdFx0XHR3ZWVrOiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1sYWJlbC13ZWVrJyApLFxuXHRcdFx0XHRkYXk6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWxhYmVsLWRheScgKVxuXHRcdFx0fVxuXHRcdFx0LFxuXHRcdFx0YWxsRGF5VGV4dDogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItbGFiZWwtYWxsZGF5JyApLFxuXHRcdFx0dGltZUZvcm1hdDoge1xuXHRcdFx0XHQnJzogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItZm9ybWF0LXRpbWUnICksXG5cdFx0XHRcdGFnZW5kYTogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItZm9ybWF0LXRpbWUtYWdlbmRhJyApXG5cdFx0XHR9XG5cdFx0XHQsXG5cdFx0XHRheGlzRm9ybWF0OiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1mb3JtYXQtYXhpcycgKSxcblx0XHRcdHRpdGxlRm9ybWF0OiB7XG5cdFx0XHRcdG1vbnRoOiBtdy5tc2coICdzcmYtdWktZXZlbnRjYWxlbmRhci1mb3JtYXQtdGl0bGUtbW9udGgnICksXG5cdFx0XHRcdHdlZWs6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWZvcm1hdC10aXRsZS13ZWVrJyApLFxuXHRcdFx0XHRkYXk6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWZvcm1hdC10aXRsZS1kYXknIClcblx0XHRcdH1cblx0XHRcdCxcblx0XHRcdGNvbHVtbkZvcm1hdDoge1xuXHRcdFx0XHRtb250aDogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItZm9ybWF0LWNvbHVtbi1tb250aCcgKSxcblx0XHRcdFx0d2VlazogbXcubXNnKCAnc3JmLXVpLWV2ZW50Y2FsZW5kYXItZm9ybWF0LWNvbHVtbi13ZWVrJyApLFxuXHRcdFx0XHRkYXk6IG13Lm1zZyggJ3NyZi11aS1ldmVudGNhbGVuZGFyLWZvcm1hdC1jb2x1bW4tZGF5JyApXG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuXG5cdHB1YmxpYyBpbml0KCkge1xuXG5cdFx0bGV0IF9pMThuID0gdGhpcy5nZXRJMThOKCk7XG5cblx0XHQvLyBpbml0aWFsaXplIHRoZSBjYWxlbmRhclxuXHRcdHRoaXMudGFyZ2V0LmZ1bGxDYWxlbmRhcigge1xuXG5cdFx0XHRmaXJzdERheTogdGhpcy5vcHRpb25zLmZpcnN0RGF5LFxuXHRcdFx0aXNSVEw6IHRoaXMub3B0aW9ucy5pc1JUTCxcblx0XHRcdG1vbnRoTmFtZXM6IF9pMThuLm1vbnRoTmFtZXMsXG5cdFx0XHRtb250aE5hbWVzU2hvcnQ6IF9pMThuLm1vbnRoTmFtZXNTaG9ydCxcblx0XHRcdGRheU5hbWVzOiBfaTE4bi5kYXlOYW1lcyxcblx0XHRcdGRheU5hbWVzU2hvcnQ6IF9pMThuLmRheU5hbWVzU2hvcnQsXG5cdFx0XHRidXR0b25UZXh0OiBfaTE4bi5idXR0b25UZXh0LFxuXHRcdFx0YWxsRGF5VGV4dDogX2kxOG4uYWxsRGF5VGV4dCxcblx0XHRcdHRpbWVGb3JtYXQ6IF9pMThuLnRpbWVGb3JtYXQsXG5cdFx0XHR0aXRsZUZvcm1hdDogX2kxOG4udGl0bGVGb3JtYXQsXG5cdFx0XHRjb2x1bW5Gb3JtYXQ6IF9pMThuLmNvbHVtbkZvcm1hdFxuXHRcdH0gKTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0RXZlbnQoIHJvd0lkOiBhbnksIHJvd0RhdGE6IGFueSApIHtcblxuXHRcdGxldCBldmVudGRhdGE6IGFueSA9IHtcblx0XHRcdGlkOiByb3dJZCxcblx0XHRcdHRpdGxlOiByb3dEYXRhWyAndGl0bGUnIF0sXG5cdFx0XHRzdGFydDogcm93RGF0YVsgJ3N0YXJ0JyBdLFxuXHRcdFx0Y2xhc3NOYW1lOiByb3dJZFxuXHRcdH07XG5cblx0XHRpZiAoIHJvd0RhdGEuaGFzT3duUHJvcGVydHkoICdlbmQnICkgKSB7XG5cdFx0XHRldmVudGRhdGFbICdlbmQnIF0gPSByb3dEYXRhWyAnZW5kJyBdO1xuXHRcdH1cblxuXHRcdGlmICggcm93RGF0YS5oYXNPd25Qcm9wZXJ0eSggJ3VybCcgKSApIHtcblx0XHRcdGV2ZW50ZGF0YVsgJ3VybCcgXSA9IHJvd0RhdGFbICd1cmwnIF07XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGV2ZW50ZGF0YTtcblx0fVxuXG5cdHB1YmxpYyBzaG93Um93cyggcm93SWRzOiBzdHJpbmdbXSApOiBhbnkge1xuXG5cdFx0bGV0IGV2ZW50czogYW55W10gPSBbXTtcblxuXHRcdHJvd0lkcy5mb3JFYWNoKCAoIHJvd0lkOiBzdHJpbmcgKSA9PiB7XG5cblx0XHRcdGxldCByb3dEYXRhID0gdGhpcy5jb250cm9sbGVyLmdldERhdGEoKVsgcm93SWQgXS5kYXRhWyB0aGlzLmlkIF07XG5cblx0XHRcdGlmICggcm93RGF0YS5oYXNPd25Qcm9wZXJ0eSggJ3N0YXJ0JyApICkge1xuXHRcdFx0XHRldmVudHMucHVzaCggdGhpcy5nZXRFdmVudCggcm93SWQsIHJvd0RhdGEgKSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblxuXHRcdHRoaXMudGFyZ2V0LmZ1bGxDYWxlbmRhciggJ2FkZEV2ZW50U291cmNlJywgZXZlbnRzICk7XG5cdH1cblxuXHRwdWJsaWMgaGlkZVJvd3MoIHJvd0lkczogc3RyaW5nW10gKTogYW55IHtcblx0XHR0aGlzLnRhcmdldC5mdWxsQ2FsZW5kYXIoICdyZW1vdmVFdmVudHMnLCAoIGU6IGFueSApID0+ICggcm93SWRzLmluZGV4T2YoIGUuX2lkICkgPj0gMCApICk7XG5cdH1cblxuXHRwdWJsaWMgc2hvdygpOiBhbnkge1xuXHRcdHN1cGVyLnNob3coKTtcblx0XHR0aGlzLnRhcmdldC5mdWxsQ2FsZW5kYXIoICdyZW5kZXInICk7XG5cdH1cblxuXHRwdWJsaWMgaGlkZSgpOiBhbnkge1xuXHRcdHJldHVybiBzdXBlci5oaWRlKCk7XG5cdH1cblxufVxuIiwiaW1wb3J0IHsgVmlldyB9IGZyb20gXCIuL1ZpZXdcIjtcblxuZXhwb3J0IGNsYXNzIExpc3RWaWV3IGV4dGVuZHMgVmlldyB7XG5cblx0cHJvdGVjdGVkIGdldEl0ZW1DbGFzc05hbWUoKSB7XG5cdFx0cmV0dXJuICcuZmlsdGVyZWQtbGlzdC1pdGVtJztcblx0fVxuXG5cbn1cbiIsIi8vLyA8cmVmZXJlbmNlIHR5cGVzPVwibGVhZmxldFwiIC8+XG5cbmltcG9ydCB7IFZpZXcgfSBmcm9tIFwiLi9WaWV3XCI7XG5pbXBvcnQgeyBPcHRpb25zIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCJcblxuZGVjbGFyZSBsZXQgbXc6IGFueTtcblxuZXhwb3J0IGNsYXNzIE1hcFZpZXcgZXh0ZW5kcyBWaWV3IHtcblxuXHRwcml2YXRlIG1hcDogTC5NYXAgPSB1bmRlZmluZWQ7XG5cdHByaXZhdGUgaWNvbjogeyBba2V5OiBzdHJpbmddOiBMLkljb24gfSA9IHVuZGVmaW5lZDtcblx0cHJpdmF0ZSBtYXJrZXJzOiB7IFtrZXk6IHN0cmluZ106IEwuTWFya2VyW10gfSA9IHVuZGVmaW5lZDtcblx0cHJpdmF0ZSBtYXJrZXJDbHVzdGVyR3JvdXA6IEwuTWFya2VyQ2x1c3Rlckdyb3VwID0gdW5kZWZpbmVkO1xuXHRwcml2YXRlIGJvdW5kczogTC5MYXRMbmdCb3VuZHMgPSB1bmRlZmluZWQ7XG5cdHByaXZhdGUgaW5pdGlhbGl6ZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuXHRwcml2YXRlIHpvb206IG51bWJlciA9IC0xO1xuXHRwcml2YXRlIG1pblpvb206IG51bWJlciA9IC0xO1xuXHRwcml2YXRlIG1heFpvb206IG51bWJlciA9IC0xO1xuXG5cdHByaXZhdGUgbGVhZmxldFByb21pc2U6IFByb21pc2U8YW55PiA9IHVuZGVmaW5lZDtcblxuXHRwdWJsaWMgaW5pdCgpOiBQcm9taXNlPGFueT4ge1xuXG5cdFx0bGV0IGRhdGEgPSB0aGlzLmNvbnRyb2xsZXIuZ2V0RGF0YSgpO1xuXHRcdGxldCBtYXJrZXJzOiB7IFtyb3dJZDogc3RyaW5nXTogTC5NYXJrZXJbXSB9ID0ge307XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ2hlaWdodCcgKSApIHtcblx0XHRcdHRoaXMudGFyZ2V0LmhlaWdodCggdGhpcy5vcHRpb25zLmhlaWdodCApO1xuXHRcdH1cblxuXHRcdHRoaXMubGVhZmxldFByb21pc2UgPSBtdy5sb2FkZXIudXNpbmcoICdleHQuc3JmLmZpbHRlcmVkLm1hcC12aWV3LmxlYWZsZXQnIClcblx0XHQudGhlbiggKCkgPT4ge1xuXG5cdFx0XHRsZXQgYm91bmRzOiBMLkxhdExuZ0JvdW5kcyA9IHVuZGVmaW5lZDtcblx0XHRcdGxldCBkaXNhYmxlQ2x1c3RlcmluZ0F0Wm9vbSA9IHRoaXMuZ2V0Wm9vbUZvclVuY2x1c3RlcmluZygpO1xuXG5cdFx0XHRsZXQgY2x1c3Rlck9wdGlvbnM6IE9wdGlvbnMgPSB7XG5cdFx0XHRcdGFuaW1hdGVBZGRpbmdNYXJrZXJzOiB0cnVlLFxuXHRcdFx0XHRkaXNhYmxlQ2x1c3RlcmluZ0F0Wm9vbTogZGlzYWJsZUNsdXN0ZXJpbmdBdFpvb20sXG5cdFx0XHRcdHNwaWRlcmZ5T25NYXhab29tOiBkaXNhYmxlQ2x1c3RlcmluZ0F0Wm9vbSA9PT0gbnVsbFxuXHRcdFx0fTtcblxuXHRcdFx0Y2x1c3Rlck9wdGlvbnMgPSB0aGlzLmdldE9wdGlvbnMoIFsgJ21heENsdXN0ZXJSYWRpdXMnLCAnem9vbVRvQm91bmRzT25DbGljaycgXSwgY2x1c3Rlck9wdGlvbnMgKTtcblxuXHRcdFx0bGV0IG1hcmtlckNsdXN0ZXJHcm91cDogTC5NYXJrZXJDbHVzdGVyR3JvdXAgPSBMLm1hcmtlckNsdXN0ZXJHcm91cCggY2x1c3Rlck9wdGlvbnMgKTtcblxuXHRcdFx0Zm9yICggbGV0IHJvd0lkIGluIGRhdGEgKSB7XG5cblx0XHRcdFx0aWYgKCBkYXRhWyByb3dJZCBdWyAnZGF0YScgXS5oYXNPd25Qcm9wZXJ0eSggdGhpcy5pZCApICkge1xuXHRcdFx0XHRcdGxldCBwb3NpdGlvbnM6IEwuTGF0TG5nTGl0ZXJhbFtdID0gZGF0YVsgcm93SWQgXVsgJ2RhdGEnIF1bIHRoaXMuaWQgXVsgJ3Bvc2l0aW9ucycgXTtcblx0XHRcdFx0XHRtYXJrZXJzWyByb3dJZCBdID0gW107XG5cblx0XHRcdFx0XHRmb3IgKCBsZXQgcG9zIG9mIHBvc2l0aW9ucyApIHtcblxuXHRcdFx0XHRcdFx0Ym91bmRzID0gKCBib3VuZHMgPT09IHVuZGVmaW5lZCApID8gbmV3IEwuTGF0TG5nQm91bmRzKCBwb3MsIHBvcyApIDogYm91bmRzLmV4dGVuZCggcG9zICk7XG5cblx0XHRcdFx0XHRcdGxldCBtYXJrZXIgPSB0aGlzLmdldE1hcmtlciggcG9zLCBkYXRhWyByb3dJZCBdICk7XG5cdFx0XHRcdFx0XHRtYXJrZXJzWyByb3dJZCBdLnB1c2goIG1hcmtlciApO1xuXHRcdFx0XHRcdFx0bWFya2VyQ2x1c3Rlckdyb3VwLmFkZExheWVyKCBtYXJrZXIgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0dGhpcy5tYXJrZXJDbHVzdGVyR3JvdXAgPSBtYXJrZXJDbHVzdGVyR3JvdXA7XG5cdFx0XHR0aGlzLm1hcmtlcnMgPSBtYXJrZXJzO1xuXHRcdFx0dGhpcy5ib3VuZHMgPSAoIGJvdW5kcyA9PT0gdW5kZWZpbmVkICkgPyBuZXcgTC5MYXRMbmdCb3VuZHMoIFsgLTE4MCwgLTkwIF0sIFsgMTgwLCA5MCBdICkgOiBib3VuZHM7XG5cdFx0fSApO1xuXG5cdFx0cmV0dXJuIHRoaXMubGVhZmxldFByb21pc2U7XG5cdH1cblxuXHRwcml2YXRlIGdldFpvb21Gb3JVbmNsdXN0ZXJpbmcoKSB7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ21hcmtlciBjbHVzdGVyJyApICYmIHRoaXMub3B0aW9uc1sgJ21hcmtlciBjbHVzdGVyJyBdID09PSBmYWxzZSApIHtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnbWFya2VyIGNsdXN0ZXIgbWF4IHpvb20nICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5vcHRpb25zWyAnbWFya2VyIGNsdXN0ZXIgbWF4IHpvb20nIF0gKyAxO1xuXHRcdH1cblxuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRJY29uKCByb3c6IGFueSApIHtcblxuXHRcdGlmICggdGhpcy5pY29uID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR0aGlzLmJ1aWxkSWNvbkxpc3QoKTtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ21hcmtlciBpY29uIHByb3BlcnR5JyApICkge1xuXG5cdFx0XHRsZXQgdmFsczogc3RyaW5nW10gPSByb3dbICdwcmludG91dHMnIF1bIHRoaXMub3B0aW9uc1sgJ21hcmtlciBpY29uIHByb3BlcnR5JyBdIF1bICd2YWx1ZXMnIF07XG5cblx0XHRcdGlmICggdmFscy5sZW5ndGggPiAwICYmIHRoaXMuaWNvbi5oYXNPd25Qcm9wZXJ0eSggdmFsc1sgMCBdICkgKSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLmljb25bIHZhbHNbIDAgXSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmljb25bICdkZWZhdWx0JyBdO1xuXHR9XG5cblx0cHJpdmF0ZSBidWlsZEljb25MaXN0KCkge1xuXHRcdHRoaXMuaWNvbiA9IHt9O1xuXG5cdFx0bGV0IGljb25QYXRoID0gdGhpcy5jb250cm9sbGVyLmdldFBhdGgoKSArICdjc3MvaW1hZ2VzLyc7XG5cblx0XHR0aGlzLmljb25bICdkZWZhdWx0JyBdID0gbmV3IEwuSWNvbigge1xuXHRcdFx0J2ljb25VcmwnOiBpY29uUGF0aCArICdtYXJrZXItaWNvbi5wbmcnLFxuXHRcdFx0J2ljb25SZXRpbmFVcmwnOiBpY29uUGF0aCArICdtYXJrZXItaWNvbi0yeC5wbmcnLFxuXHRcdFx0J3NoYWRvd1VybCc6IGljb25QYXRoICsgJ21hcmtlci1zaGFkb3cucG5nJyxcblx0XHRcdCdpY29uU2l6ZSc6IFsgMjUsIDQxIF0sXG5cdFx0XHQnaWNvbkFuY2hvcic6IFsgMTIsIDQxIF0sXG5cdFx0XHQncG9wdXBBbmNob3InOiBbIDEsIC0zNCBdLFxuXHRcdFx0Ly8gJ3Rvb2x0aXBBbmNob3InOiBbMTYsIC0yOF0sXG5cdFx0XHQnc2hhZG93U2l6ZSc6IFsgNDEsIDQxIF1cblx0XHR9ICk7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSggJ21hcmtlciBpY29ucycgKSApIHtcblxuXHRcdFx0Zm9yICggbGV0IHZhbHVlIGluIHRoaXMub3B0aW9uc1sgJ21hcmtlciBpY29ucycgXSApIHtcblx0XHRcdFx0dGhpcy5pY29uWyB2YWx1ZSBdID0gbmV3IEwuSWNvbigge1xuXHRcdFx0XHRcdCdpY29uVXJsJzogdGhpcy5vcHRpb25zWyAnbWFya2VyIGljb25zJyBdWyB2YWx1ZSBdLFxuXHRcdFx0XHRcdC8vICdpY29uUmV0aW5hVXJsJzogaWNvblBhdGggKyAnbWFya2VyLWljb24tMngucG5nJyxcblx0XHRcdFx0XHQnc2hhZG93VXJsJzogaWNvblBhdGggKyAnbWFya2VyLXNoYWRvdy5wbmcnLFxuXHRcdFx0XHRcdCdpY29uU2l6ZSc6IFsgMzIsIDMyIF0sXG5cdFx0XHRcdFx0J2ljb25BbmNob3InOiBbIDE2LCAzMiBdLFxuXHRcdFx0XHRcdCdwb3B1cEFuY2hvcic6IFsgMSwgLTMwIF0sXG5cdFx0XHRcdFx0Ly8gJ3Rvb2x0aXBBbmNob3InOiBbMTYsIC0yOF0sXG5cdFx0XHRcdFx0J3NoYWRvd1NpemUnOiBbIDQxLCA0MSBdLFxuXHRcdFx0XHRcdCdzaGFkb3dBbmNob3InOiBbIDEyLCA0MSBdXG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRwcml2YXRlIGdldE1hcmtlciggbGF0TG5nOiBMLkxhdExuZ0V4cHJlc3Npb24sIHJvdzogYW55ICkge1xuXHRcdGxldCB0aXRsZSA9IHVuZGVmaW5lZDtcblx0XHRsZXQgcG9wdXAgPSBbXTtcblxuXHRcdC8vIFRPRE86IFVzZSA8ZGl2PiBpbnN0ZWFkIG9mIDxiPiBhbmQgZG8gQ1NTIHN0eWxpbmdcblxuXHRcdGZvciAoIGxldCBwcklkIGluIHJvd1sgJ3ByaW50b3V0cycgXSApIHtcblx0XHRcdGxldCBwcmludHJlcXVlc3QgPSAodGhpcy5jb250cm9sbGVyLmdldFByaW50UmVxdWVzdHMoKSlbIHBySWQgXTtcblxuXHRcdFx0aWYgKCAhIHByaW50cmVxdWVzdC5oYXNPd25Qcm9wZXJ0eSgnaGlkZScpIHx8IHByaW50cmVxdWVzdC5oaWRlID09PSBmYWxzZSApIHtcblx0XHRcdFx0bGV0IHByaW50b3V0cyA9IHJvd1sgJ3ByaW50b3V0cycgXVsgcHJJZCBdO1xuXG5cdFx0XHRcdGlmICggdGl0bGUgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHR0aXRsZSA9IHByaW50b3V0c1sgJ3ZhbHVlcycgXS5qb2luKCAnLCAnICk7XG5cdFx0XHRcdFx0cG9wdXAucHVzaCggJzxiPicgKyBwcmludG91dHNbICdmb3JtYXR0ZWQgdmFsdWVzJyBdLmpvaW4oICcsICcgKSArICc8L2I+JyApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHBvcHVwLnB1c2goIChwcmludG91dHMubGFiZWwgPyAnPGI+JyArIHByaW50b3V0cy5sYWJlbCArICc6PC9iPiAnIDogJycpICsgcHJpbnRvdXRzWyAnZm9ybWF0dGVkIHZhbHVlcycgXS5qb2luKCAnLCAnICkgKVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0bGV0IG1hcmtlciA9IEwubWFya2VyKCBsYXRMbmcsIHsgdGl0bGU6IHRpdGxlLCBhbHQ6IHRpdGxlIH0gKTtcblx0XHRtYXJrZXIuYmluZFBvcHVwKCBwb3B1cC5qb2luKCAnPGJyPicgKSApO1xuXG5cdFx0bWFya2VyLnNldEljb24oIHRoaXMuZ2V0SWNvbiggcm93ICkgKTtcblx0XHRyZXR1cm4gbWFya2VyO1xuXHR9XG5cblx0cHVibGljIGxhdGVJbml0KCkge1xuXG5cdFx0aWYgKCB0aGlzLmluaXRpYWxpemVkICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHRoaXMuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuXG5cdFx0bGV0IHRoYXQgPSB0aGlzO1xuXG5cdFx0dGhpcy5sZWFmbGV0UHJvbWlzZS50aGVuKCAoKSA9PiB7XG5cblx0XHRcdGxldCBtYXBPcHRpb25zOiBPcHRpb25zID0ge1xuXHRcdFx0XHRjZW50ZXI6IHRoaXMuYm91bmRzICE9PSB1bmRlZmluZWQgPyB0aGlzLmJvdW5kcy5nZXRDZW50ZXIoKSA6IFsgMCwgMCBdXG5cdFx0XHR9O1xuXG5cdFx0XHRtYXBPcHRpb25zID0gdGhhdC5nZXRPcHRpb25zKCBbICd6b29tJywgJ21pblpvb20nLCAnbWF4Wm9vbScgXSwgbWFwT3B0aW9ucyApO1xuXG5cdFx0XHQvLyBUT0RPOiBMaW1pdCB6b29tIHZhbHVlcyB0byBtYXAgbWF4IHpvb21cblxuXHRcdFx0dGhhdC5tYXAgPSBMLm1hcCggPEhUTUxFbGVtZW50PiB0aGF0LmdldFRhcmdldEVsZW1lbnQoKS5nZXQoIDAgKSwgbWFwT3B0aW9ucyApO1xuXHRcdFx0dGhhdC5tYXAuYWRkTGF5ZXIoIHRoYXQubWFya2VyQ2x1c3Rlckdyb3VwICk7XG5cblx0XHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCAnbWFwIHByb3ZpZGVyJyApICkge1xuXHRcdFx0XHRMLnRpbGVMYXllci5wcm92aWRlciggdGhpcy5vcHRpb25zWyAnbWFwIHByb3ZpZGVyJyBdICkuYWRkVG8oIHRoYXQubWFwICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggIW1hcE9wdGlvbnMuaGFzT3duUHJvcGVydHkoICd6b29tJyApICkge1xuXHRcdFx0XHR0aGF0Lm1hcC5maXRCb3VuZHMoIHRoYXQuYm91bmRzICk7XG5cdFx0XHR9XG5cblx0XHR9ICk7XG5cblx0fVxuXG5cdHB1YmxpYyBnZXRPcHRpb25zKCBrZXlzOiBzdHJpbmdbXSwgZGVmYXVsdHM6IE9wdGlvbnMgPSB7fSApIHtcblxuXHRcdGZvciAoIGxldCBrZXkgb2Yga2V5cyApIHtcblx0XHRcdGlmICggdGhpcy5vcHRpb25zLmhhc093blByb3BlcnR5KCBrZXkgKSApIHtcblx0XHRcdFx0ZGVmYXVsdHNbIGtleSBdID0gdGhpcy5vcHRpb25zWyBrZXkgXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZGVmYXVsdHM7XG5cdH1cblxuXHRwdWJsaWMgc2hvd1Jvd3MoIHJvd0lkczogc3RyaW5nW10gKSB7XG5cdFx0dGhpcy5sZWFmbGV0UHJvbWlzZS50aGVuKCAoKSA9PiB7XG5cdFx0XHR0aGlzLm1hbmlwdWxhdGVMYXllcnMoIHJvd0lkcywgKCBsYXllcnM6IEwuTGF5ZXJbXSApID0+IHtcblx0XHRcdFx0dGhpcy5tYXJrZXJDbHVzdGVyR3JvdXAuYWRkTGF5ZXJzKCBsYXllcnMgKVxuXHRcdFx0fSApXG5cdFx0fSApO1xuXHR9XG5cblx0cHVibGljIGhpZGVSb3dzKCByb3dJZHM6IHN0cmluZ1tdICkge1xuXHRcdHRoaXMubGVhZmxldFByb21pc2UudGhlbiggKCkgPT4ge1xuXHRcdFx0dGhpcy5tYW5pcHVsYXRlTGF5ZXJzKCByb3dJZHMsICggbGF5ZXJzOiBMLkxheWVyW10gKSA9PiB7XG5cdFx0XHRcdHRoaXMubWFya2VyQ2x1c3Rlckdyb3VwLnJlbW92ZUxheWVycyggbGF5ZXJzIClcblx0XHRcdH0gKVxuXHRcdH0gKTtcblx0fVxuXG5cdHByaXZhdGUgbWFuaXB1bGF0ZUxheWVycyggcm93SWRzOiBzdHJpbmdbXSwgY2I6ICggbGF5ZXJzOiBMLkxheWVyW10gKSA9PiB2b2lkICkge1xuXG5cdFx0bGV0IGxheWVyc0Zyb21Sb3dJZHMgPSB0aGlzLmdldExheWVyc0Zyb21Sb3dJZHMoIHJvd0lkcyApO1xuXG5cdFx0aWYgKCBsYXllcnNGcm9tUm93SWRzLmxlbmd0aCA+IDAgKSB7XG5cdFx0XHRjYiggbGF5ZXJzRnJvbVJvd0lkcyApO1xuXHRcdH1cblxuXHR9XG5cblx0cHJpdmF0ZSBnZXRMYXllcnNGcm9tUm93SWRzKCByb3dJZHM6IHN0cmluZ1tdICkge1xuXHRcdHJldHVybiB0aGlzLmZsYXR0ZW4oIHRoaXMuZ2V0TGF5ZXJzRnJvbVJvd0lkc1Jhdyggcm93SWRzICkgKTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0TGF5ZXJzRnJvbVJvd0lkc1Jhdyggcm93SWRzOiBzdHJpbmdbXSApIHtcblx0XHRyZXR1cm4gcm93SWRzLm1hcCggKCByb3dJZDogc3RyaW5nICkgPT4gdGhpcy5tYXJrZXJzWyByb3dJZCBdID8gdGhpcy5tYXJrZXJzWyByb3dJZCBdIDogW10gKTtcblx0fVxuXG5cdHByaXZhdGUgZmxhdHRlbiggbWFya2VyczogTC5MYXllcltdW10gKTogTC5MYXllcltdIHtcblx0XHRyZXR1cm4gbWFya2Vycy5yZWR1Y2UoICggcmVzdWx0OiBMLkxheWVyW10sIGxheWVyczogTC5MYXllcltdICkgPT4gcmVzdWx0LmNvbmNhdCggbGF5ZXJzICksIFtdICk7XG5cdH1cblxuXHRwdWJsaWMgc2hvdygpIHtcblx0XHRzdXBlci5zaG93KCk7XG5cdFx0dGhpcy5sYXRlSW5pdCgpO1xuXHR9XG5cbn1cbiIsImltcG9ydCB7IFZpZXcgfSBmcm9tIFwiLi9WaWV3XCI7XG5cbmV4cG9ydCBjbGFzcyBUYWJsZVZpZXcgZXh0ZW5kcyBWaWV3IHtcblxuXHRwcm90ZWN0ZWQgZ2V0SXRlbUNsYXNzTmFtZSgpIHtcblx0XHRyZXR1cm4gJy5maWx0ZXJlZC10YWJsZS1pdGVtJztcblx0fVxuXG59IiwiaW1wb3J0IHsgT3B0aW9ucyB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuaW1wb3J0IHsgQ29udHJvbGxlciB9IGZyb20gXCIuLi9Db250cm9sbGVyXCI7XG5cbmV4cG9ydCBjbGFzcyBWaWV3IHtcblxuXHRwcm90ZWN0ZWQgaWQ6IHN0cmluZyA9IHVuZGVmaW5lZDtcblx0cHJvdGVjdGVkIHRhcmdldDogSlF1ZXJ5ID0gdW5kZWZpbmVkO1xuXHRwcm90ZWN0ZWQgY29udHJvbGxlcjogQ29udHJvbGxlciA9IHVuZGVmaW5lZDtcblx0cHJvdGVjdGVkIG9wdGlvbnM6IE9wdGlvbnMgPSB1bmRlZmluZWQ7XG5cdHByb3RlY3RlZCB2aXNpYmxlOiBib29sZWFuID0gZmFsc2U7XG5cdHByb3RlY3RlZCByb3dzOiB7IFsgcm93SWQ6IHN0cmluZyBdOiBKUXVlcnkgfSA9IHt9O1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvciggaWQ6IHN0cmluZywgdGFyZ2V0OiBKUXVlcnksIGM6IENvbnRyb2xsZXIsIG9wdGlvbnM6IE9wdGlvbnMgPSB7fSApIHtcblx0XHR0aGlzLmlkID0gaWQ7XG5cdFx0dGhpcy50YXJnZXQgPSB0YXJnZXQ7XG5cdFx0dGhpcy5jb250cm9sbGVyID0gYztcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuXHR9XG5cblx0cHVibGljIGluaXQoKTogUHJvbWlzZTxhbnk+fHZvaWQge1xuXG5cdFx0bGV0IHJvd0lkcyA9IE9iamVjdC5rZXlzKCB0aGlzLmNvbnRyb2xsZXIuZ2V0RGF0YSgpICk7XG5cdFx0bGV0IHJvd3MgPSB0aGlzLnRhcmdldC5maW5kKCB0aGlzLmdldEl0ZW1DbGFzc05hbWUoKSApO1xuXG5cdFx0cm93cy5lYWNoKCAoIGluZGV4LCBlbGVtICkgPT4ge1xuXHRcdFx0bGV0IGNsYXNzZXMgPSBlbGVtLmNsYXNzTGlzdDtcblx0XHRcdGZvciAoIGxldCBpID0gMDsgaSA8IGNsYXNzZXMubGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdGlmICggcm93SWRzLmluZGV4T2YoIGNsYXNzZXNbIGkgXSApID49IDAgKSB7XG5cdFx0XHRcdFx0dGhpcy5yb3dzWyBjbGFzc2VzWyBpIF0gXSA9ICQoIHJvd3NbIGluZGV4IF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fVxuXG5cdHByb3RlY3RlZCBnZXRJdGVtQ2xhc3NOYW1lKCkge1xuXHRcdHJldHVybiAnLmZpbHRlcmVkLWl0ZW0nO1xuXHR9XG5cblx0cHVibGljIGdldFRhcmdldEVsZW1lbnQoKTogSlF1ZXJ5IHtcblx0XHRyZXR1cm4gdGhpcy50YXJnZXQ7XG5cdH1cblxuXHRwdWJsaWMgc2hvd1Jvd3MoIHJvd0lkczogc3RyaW5nW10gKSB7XG5cblx0XHRpZiAoIHRoaXMudmlzaWJsZSAmJiByb3dJZHMubGVuZ3RoIDwgMjAwICkge1xuXG5cdFx0XHRyb3dJZHMuZm9yRWFjaCggKCByb3dJZDogc3RyaW5nICkgPT4ge1xuXHRcdFx0XHR0aGlzLnJvd3NbIHJvd0lkIF0uc2xpZGVEb3duKCA0MDAgKTtcblx0XHRcdH0gKTtcblxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdHJvd0lkcy5mb3JFYWNoKCAoIHJvd0lkOiBzdHJpbmcgKSA9PiB7XG5cdFx0XHRcdHRoaXMucm93c1sgcm93SWQgXS5jc3MoICdkaXNwbGF5JywgJycpO1xuXHRcdFx0fSApO1xuXG5cdFx0fVxuXHR9XG5cblx0cHVibGljIGhpZGVSb3dzKCByb3dJZHM6IHN0cmluZ1tdICkge1xuXG5cdFx0aWYgKCB0aGlzLnZpc2libGUgJiYgcm93SWRzLmxlbmd0aCA8IDIwMCApIHtcblxuXHRcdFx0cm93SWRzLmZvckVhY2goICggcm93SWQ6IHN0cmluZyApID0+IHtcblx0XHRcdFx0dGhpcy5yb3dzWyByb3dJZCBdLnNsaWRlVXAoIDQwMCApO1xuXHRcdFx0fSApO1xuXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0cm93SWRzLmZvckVhY2goICggcm93SWQ6IHN0cmluZyApID0+IHtcblx0XHRcdFx0dGhpcy5yb3dzWyByb3dJZCBdLmNzcyggJ2Rpc3BsYXknLCAnbm9uZScpO1xuXHRcdFx0fSApO1xuXG5cdFx0fVxuXHR9XG5cblx0cHVibGljIHNob3coKSB7XG5cdFx0dGhpcy50YXJnZXQuc2hvdygpO1xuXHRcdHRoaXMudmlzaWJsZSA9IHRydWU7XG5cdH1cblxuXHRwdWJsaWMgaGlkZSgpIHtcblx0XHR0aGlzLnRhcmdldC5oaWRlKCk7XG5cdFx0dGhpcy52aXNpYmxlID0gZmFsc2U7XG5cdH1cbn1cbiIsImltcG9ydCB7IENvbnRyb2xsZXIgfSBmcm9tIFwiLi9Db250cm9sbGVyXCI7XG5leHBvcnQgY2xhc3MgVmlld1NlbGVjdG9yIHtcblxuXHRwcml2YXRlIHRhcmdldDogSlF1ZXJ5ID0gdW5kZWZpbmVkO1xuXHRwcml2YXRlIHZpZXdJRHM6IHN0cmluZ1tdID0gdW5kZWZpbmVkO1xuXG5cdHByaXZhdGUgY29udHJvbGxlcjogQ29udHJvbGxlciA9IHVuZGVmaW5lZDtcblxuXHRwdWJsaWMgY29uc3RydWN0b3IoIHRhcmdldDogSlF1ZXJ5LCB2aWV3SURzOiBzdHJpbmdbXSwgY29udHJvbGxlcjogQ29udHJvbGxlciApIHtcblx0XHR0aGlzLnRhcmdldCA9IHRhcmdldDtcblx0XHR0aGlzLnZpZXdJRHMgPSB2aWV3SURzO1xuXHRcdHRoaXMuY29udHJvbGxlciA9IGNvbnRyb2xsZXI7XG5cdH1cblxuXHRwdWJsaWMgaW5pdCgpIHtcblx0XHRpZiAoIHRoaXMudmlld0lEcy5sZW5ndGggPiAxICkge1xuXHRcdFx0dGhpcy52aWV3SURzLmZvckVhY2goICggaWQ6IHN0cmluZykgPT4geyB0aGlzLnRhcmdldC5vbiggJ2NsaWNrJywgJy4nICsgaWQsIHsgJ3RhcmdldCc6IGlkLCAnY29udHJvbGxlcicgOiB0aGlzLmNvbnRyb2xsZXIgfSwgVmlld1NlbGVjdG9yLm9uU2VsZWN0b3JTZWxlY3RlZCApOyB9ICk7XG5cdFx0XHR0aGlzLnRhcmdldC5jaGlsZHJlbigpLmZpcnN0KCkuYWRkQ2xhc3MoICdzZWxlY3RlZCcpO1xuXHRcdFx0dGhpcy50YXJnZXQuc2hvdygpO1xuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgc3RhdGljIG9uU2VsZWN0b3JTZWxlY3RlZCggZXZlbnQ6IEpRdWVyeUV2ZW50T2JqZWN0ICkge1xuXG5cdFx0ZXZlbnQuZGF0YS5jb250cm9sbGVyLm9uVmlld1NlbGVjdGVkKCBldmVudC5kYXRhLnRhcmdldCApO1xuXG5cdFx0JCggZXZlbnQudGFyZ2V0IClcblx0XHQuYWRkQ2xhc3MoICdzZWxlY3RlZCcpXG5cdFx0LnNpYmxpbmdzKCkucmVtb3ZlQ2xhc3MoICdzZWxlY3RlZCcgKTtcblxuXHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdH1cblxufSIsImltcG9ydCB7IEZpbHRlcmVkIH0gZnJvbSBcIi4vRmlsdGVyZWQvRmlsdGVyZWRcIjtcblxuZGVjbGFyZSBsZXQgbXc6IGFueTtcbmxldCBjb25maWcgPSBtdy5jb25maWcuZ2V0KCAnc3JmRmlsdGVyZWRDb25maWcnICk7XG5cbmZvciAoIGxldCBpZCBpbiBjb25maWcgKSB7XG5cdGlmICggY29uZmlnLmhhc093blByb3BlcnR5KCBpZCApICkge1xuXHRcdGxldCBmID0gbmV3IEZpbHRlcmVkKCAkKCAnIycgKyBpZCApLCBjb25maWdbIGlkIF0gKTtcblx0XHRtdy5ob29rKCAnd2lraXBhZ2UuY29udGVudCcgKS5hZGQoICgpID0+IGYucnVuKCkgKTtcblx0fVxufSJdfQ=="}