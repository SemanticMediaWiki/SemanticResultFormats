{
	"description": "Tree format: Simple one-page result",
	"setup": [
		{
			"namespace": "SMW_NS_PROPERTY",
			"page": "Has parent",
			"contents": "[[Has type::Page]]"
		},
		{
			"namespace": "SMW_NS_PROPERTY",
			"page": "Part of",
			"contents": "[[Has type::Text]]"
		},
		{
			"namespace": "NS_TEMPLATE",
			"page": "Example/Tree format template",
			"contents": "FOO{{{1|}}}BAR{{{userparam|}}}BAZ"
		},
		{
			"page": "Example/Tree 1",
			"contents": "[[Part of::Tree test]]"
		},
		{
			"page": "Example/Tree 11",
			"contents": "[[Part of::Tree test]][[Has parent::Example/Tree 1]]"
		},
		{
			"page": "Example/Tree 07-01",
			"contents": "{{#ask:[[Part of::Tree test]] |?Has parent |format=tree |parent=Has parent }}"
		},
		{
			"page": "Example/Tree 07-02",
			"contents": "{{#ask:[[Part of::Tree test]] |?Has parent |format=tree |parent=Has parent |link=all}}"
		},
		{
			"page": "Example/Tree 07-03",
			"contents": "{{#ask:[[Part of::Tree test]] |?Has parent |format=tree |parent=Has parent |link=subject}}"
		},
		{
			"page": "Example/Tree 07-04",
			"contents": "{{#ask:[[Part of::Tree test]] |?Has parent |format=tree |parent=Has parent |link=none}}"
		},
		{
			"page": "Example/Tree 07-05",
			"contents": "{{#ask:[[Part of::Tree test]] |?Has parent |format=tree |parent=Has parent |template=Example/Tree format template |userparam=someparam }}"
		},
		{
			"page": "Example/Tree 07-06",
			"contents": "{{#ask:[[Part of::Tree test]] |?Has parent |format=tree |parent=Has parent |template=Example/Tree format template |userparam=someparam |link=none}}"
		}
	],
	"tests": [
		{
			"type": "parser-html",
			"about": "Tree 07-01 (Default linking)",
			"subject": "Example/Tree 07-01",
			"assert-output": {
				"to-contain": [
					"div.srf-tree > ul > li > a[title=\"Example/Tree 1\"] + ul > li > a[title=\"Example/Tree 11\"] + a[title=\"Property:Has parent\"] + a[title=\"Example/Tree 1\"]"
				]
			}
		},
		{
			"type": "parser-html",
			"about": "Tree 07-02 (link=all)",
			"subject": "Example/Tree 07-02",
			"assert-output": {
				"to-contain": [
					"div.srf-tree > ul > li > a[title=\"Example/Tree 1\"] + ul > li > a[title=\"Example/Tree 11\"] + a[title=\"Property:Has parent\"] + a[title=\"Example/Tree 1\"]"
				]
			}
		},
		{
			"type": "parser-html",
			"about": "Tree 07-03 (link=subject)",
			"subject": "Example/Tree 07-03",
			"assert-output": {
				"to-contain": [
					"div.srf-tree > ul > li > a[title=\"Example/Tree 1\"] + ul > li > a[title=\"Example/Tree 11\"]:first-of-type + a[title=\"Property:Has parent\"]:last-of-type"

				]
			}
		},
		{
			"type": "parser-html",
			"about": "Tree 07-04 (link=none)",
			"subject": "Example/Tree 07-04",
			"assert-output": {
				"to-contain": [
					"div.srf-tree > ul > li > ul:only-child > li > a[title=\"Property:Has parent\"]:only-child"
				]
			}
		},
		{
			"type": "parser",
			"about": "Tree 07-05-1 (template with userparam)",
			"subject": "Example/Tree 07-05",
			"assert-output": {
				"to-contain": [
					"BARsomeparamBAZ"
				]
			}
		},
		{
			"type": "parser-html",
			"about": "Tree 07-05-2 (template with userparam: assert intact default linking)",
			"subject": "Example/Tree 07-05",
			"assert-output": {
				"to-contain": [
					"div.srf-tree > ul > li > a[title=\"Example/Tree 1\"] + ul > li > a[title=\"Example/Tree 11\"]"
				]
			}
		},
		{
			"type": "parser",
			"about": "Tree 07-06 (template with userparam and link=none)",
			"subject": "Example/Tree 07-06",
			"assert-output": {
				"to-contain": [
					"FOOExample/Tree 1BARsomeparamBAZ",
					"FOOExample/Tree 11BARsomeparamBAZ"
				]
			}
		}
	],
	"settings": {
		"wgContLang": "en",
		"wgLang": "en",
		"smwgNamespacesWithSemanticLinks": {
			"NS_MAIN": true,
			"SMW_NS_PROPERTY": true
		}
	},
	"meta": {
		"version": "2",
		"is-incomplete": false,
		"debug": false
	}
}